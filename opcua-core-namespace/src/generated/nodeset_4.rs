// This file was autogenerated from tools/schema/schemas/1.0.4/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use opcua_nodes as nodes;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_method_1427 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_method_1428,
            &make_method_1429,
            &make_method_1430,
            &make_method_1431,
            &make_method_1456,
            &make_method_1457,
            &make_method_1458,
            &make_method_1462,
            &make_method_1488,
            &make_method_1490,
            &make_method_1491,
            &make_method_1626,
            &make_method_1684,
            &make_method_1685,
            &make_method_1686,
            &make_method_1687,
            &make_method_1688,
            &make_method_1793,
            &make_method_1796,
            &make_method_1799,
            &make_method_1801,
            &make_method_1816,
            &make_method_1819,
            &make_method_1821,
            &make_method_1824,
            &make_method_1826,
            &make_method_1829,
            &make_method_1832,
            &make_method_184,
            &make_method_1859,
            &make_method_1860,
            &make_method_1861,
            &make_method_1865,
            &make_method_187,
            &make_method_189,
            &make_method_1898,
            &make_method_1899,
            &make_method_1900,
            &make_method_1904,
            &make_method_1914,
            &make_method_192,
            &make_method_1923,
            &make_method_1926,
            &make_method_1928,
            &make_method_1931,
            &make_method_1933,
            &make_method_1936,
            &make_method_1939,
            &make_method_1949,
            &make_method_1952,
            &make_method_1954,
            &make_method_1957,
            &make_method_1959,
            &make_method_1962,
            &make_method_1965,
            &make_method_1975,
            &make_method_1978,
            &make_method_1980,
            &make_method_1983,
            &make_method_1985,
            &make_method_1988,
            &make_method_1991,
            &make_method_2001,
            &make_method_2004,
            &make_method_2006,
            &make_method_2009,
            &make_method_2011,
            &make_method_2014,
            &make_method_2017,
            &make_method_2043,
            &make_method_2046,
            &make_method_2048,
            &make_method_2051,
            &make_method_2053,
            &make_method_2056,
            &make_method_2059,
            &make_method_2067,
            &make_method_2070,
            &make_method_2071,
            &make_method_2074,
            &make_method_2087,
            &make_method_2090,
            &make_method_2092,
            &make_method_2095,
            &make_method_2097,
            &make_method_210,
            &make_method_2100,
            &make_method_2103,
            &make_method_2106,
            &make_method_2109,
            &make_method_2111,
            &make_method_2120,
            &make_method_2123,
            &make_method_2125,
            &make_method_2128,
            &make_method_213,
            &make_method_2130,
            &make_method_2133,
            &make_method_2136,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_method_1427(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16403u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Suppress"),
                opcua::types::LocalizedText::new("", "Suppress"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17225u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1428(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17868u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Unsuppress"),
                opcua::types::LocalizedText::new("", "Unsuppress"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17225u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1429(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17869u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveFromService"),
                opcua::types::LocalizedText::new("", "RemoveFromService"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17259u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1430(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17870u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "PlaceInService"),
                opcua::types::LocalizedText::new("", "PlaceInService"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17259u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1431(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18199u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15013u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1456(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16439u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Disable"),
                opcua::types::LocalizedText::new("", "Disable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1457(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16440u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Enable"),
                opcua::types::LocalizedText::new("", "Enable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1458(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16441u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddComment"),
                opcua::types::LocalizedText::new("", "AddComment"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16442u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2829u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1462(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16461u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Acknowledge"),
                opcua::types::LocalizedText::new("", "Acknowledge"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16462u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8944u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1488(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2949u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "TimedShelve"),
                opcua::types::LocalizedText::new("", "TimedShelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2991u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2935u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2945u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1490(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2947u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Unshelve"),
                opcua::types::LocalizedText::new("", "Unshelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2940u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2943u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1491(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2948u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OneShotShelve"),
                opcua::types::LocalizedText::new("", "OneShotShelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2936u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2942u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1626(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18666u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2127u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17279u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1684(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2426u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Start"),
                opcua::types::LocalizedText::new("", "Start"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2410u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1685(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2427u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Suspend"),
                opcua::types::LocalizedText::new("", "Suspend"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2416u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1686(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2428u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Resume"),
                opcua::types::LocalizedText::new("", "Resume"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2418u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1687(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2429u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Halt"),
                opcua::types::LocalizedText::new("", "Halt"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2412u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2420u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2424u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1688(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2430u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2408u32),
                type_id: opcua::types::NodeId::new(0u16, 53u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2391u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1793(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12543u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OpenWithMasks"),
                opcua::types::LocalizedText::new("", "OpenWithMasks"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12544u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12545u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12522u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1796(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12546u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CloseAndUpdate"),
                opcua::types::LocalizedText::new("", "CloseAndUpdate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12705u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12547u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12522u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1799(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12548u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddCertificate"),
                opcua::types::LocalizedText::new("", "AddCertificate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12549u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12522u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1801(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12550u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveCertificate"),
                opcua::types::LocalizedText::new("", "RemoveCertificate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12551u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12522u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1816(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13605u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13606u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13607u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13599u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1819(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13608u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13609u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13599u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1821(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13610u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13611u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13612u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13599u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1824(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13613u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13614u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13599u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1826(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13615u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13616u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13617u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13599u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1829(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13618u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13619u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13599u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1832(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13621u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OpenWithMasks"),
                opcua::types::LocalizedText::new("", "OpenWithMasks"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13622u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13623u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13599u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_184(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11489u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetMonitoredItems"),
                opcua::types::LocalizedText::new("", "GetMonitoredItems"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11490u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11491u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1859(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19483u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Disable"),
                opcua::types::LocalizedText::new("", "Disable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19450u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1860(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19484u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Enable"),
                opcua::types::LocalizedText::new("", "Enable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19450u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1861(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19485u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddComment"),
                opcua::types::LocalizedText::new("", "AddComment"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19486u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2829u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19450u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1865(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19505u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Acknowledge"),
                opcua::types::LocalizedText::new("", "Acknowledge"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19506u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8944u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19450u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_187(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12871u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "ResendData"),
                opcua::types::LocalizedText::new("", "ResendData"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12872u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_189(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12746u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetSubscriptionDurable"),
                opcua::types::LocalizedText::new("", "SetSubscriptionDurable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12747u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12748u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1898(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 20176u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Disable"),
                opcua::types::LocalizedText::new("", "Disable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 20143u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1899(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 20177u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Enable"),
                opcua::types::LocalizedText::new("", "Enable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 20143u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1900(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 20178u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddComment"),
                opcua::types::LocalizedText::new("", "AddComment"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 20179u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2829u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 20143u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1904(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 20198u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Acknowledge"),
                opcua::types::LocalizedText::new("", "Acknowledge"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 20199u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8944u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 20143u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1914(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23526u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetRejectedList"),
                opcua::types::LocalizedText::new("", "GetRejectedList"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23527u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12555u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_192(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12883u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RequestServerStateChange"),
                opcua::types::LocalizedText::new("", "RequestServerStateChange"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12884u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1923(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13821u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13822u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13823u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13815u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1926(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13824u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13825u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13815u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1928(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13826u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13827u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13828u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13815u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1931(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13829u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13830u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13815u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1933(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13831u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13832u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13833u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13815u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1936(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13834u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13835u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13815u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1939(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13837u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OpenWithMasks"),
                opcua::types::LocalizedText::new("", "OpenWithMasks"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13838u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13839u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13815u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1949(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13855u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13856u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13857u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13849u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1952(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13858u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13859u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13849u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1954(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13860u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13861u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13862u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13849u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1957(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13863u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13864u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13849u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1959(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13865u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13866u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13867u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13849u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1962(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13868u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13869u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13849u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1965(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13871u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OpenWithMasks"),
                opcua::types::LocalizedText::new("", "OpenWithMasks"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13872u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13873u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13849u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1975(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13889u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13890u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13891u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13883u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1978(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13892u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13893u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13883u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1980(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13894u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13895u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13896u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13883u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1983(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13897u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13898u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13883u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1985(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13899u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13900u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13901u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13883u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1988(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13902u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13903u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13883u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1991(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13905u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OpenWithMasks"),
                opcua::types::LocalizedText::new("", "OpenWithMasks"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13906u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13907u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13883u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2001(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13923u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13924u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13925u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13917u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2004(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13926u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13927u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13917u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2006(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13928u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13929u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13930u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13917u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2009(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13931u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13932u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13917u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2011(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13933u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13934u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13935u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13917u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2014(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13936u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13937u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13917u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2017(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13939u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OpenWithMasks"),
                opcua::types::LocalizedText::new("", "OpenWithMasks"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13940u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13941u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13917u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2043(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13958u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13959u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13960u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13952u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2046(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13961u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13962u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13952u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2048(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13963u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13964u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13965u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13952u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2051(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13966u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13967u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13952u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2053(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13968u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13969u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13970u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13952u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2056(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13971u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13972u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13952u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2059(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13974u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OpenWithMasks"),
                opcua::types::LocalizedText::new("", "OpenWithMasks"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13975u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13976u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13952u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2067(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12616u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "UpdateCertificate"),
                opcua::types::LocalizedText::new("", "UpdateCertificate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12617u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12618u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12581u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2070(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12734u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "ApplyChanges"),
                opcua::types::LocalizedText::new("", "ApplyChanges"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12581u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2071(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12731u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CreateSigningRequest"),
                opcua::types::LocalizedText::new("", "CreateSigningRequest"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12732u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12733u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12581u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2074(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12775u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetRejectedList"),
                opcua::types::LocalizedText::new("", "GetRejectedList"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12776u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12581u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2087(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12647u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12648u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12649u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2090(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12650u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12651u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2092(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12652u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12653u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12654u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2095(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12655u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12656u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2097(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12657u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12658u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12659u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_210(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16296u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddRole"),
                opcua::types::LocalizedText::new("", "AddRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16297u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16298u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16295u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2100(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12660u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12661u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2103(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12663u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OpenWithMasks"),
                opcua::types::LocalizedText::new("", "OpenWithMasks"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12664u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12665u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2106(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12666u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CloseAndUpdate"),
                opcua::types::LocalizedText::new("", "CloseAndUpdate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14160u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12667u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2109(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12668u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddCertificate"),
                opcua::types::LocalizedText::new("", "AddCertificate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12669u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2111(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12670u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveCertificate"),
                opcua::types::LocalizedText::new("", "RemoveCertificate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12671u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12642u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2120(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14095u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14096u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14097u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14089u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2123(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14098u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14099u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14089u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2125(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14100u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14101u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14102u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14089u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2128(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14103u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14104u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14089u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_213(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16299u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveRole"),
                opcua::types::LocalizedText::new("", "RemoveRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16300u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16295u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2130(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14105u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14106u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14107u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14089u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2133(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14108u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14109u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14089u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_2136(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14111u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OpenWithMasks"),
                opcua::types::LocalizedText::new("", "OpenWithMasks"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14112u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14113u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14089u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
