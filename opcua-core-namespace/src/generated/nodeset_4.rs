// This file was autogenerated from tools/schema/schemas/1.05/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua { pub use opcua_types as types; pub use opcua_nodes as nodes; }pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_method_1138 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_method_1140,
            &make_method_1152,
            &make_method_1154,
            &make_method_1156,
            &make_method_1158,
            &make_method_1160,
            &make_method_1162,
            &make_method_1171,
            &make_method_1173,
            &make_method_1175,
            &make_method_1177,
            &make_method_1179,
            &make_method_1181,
            &make_method_1190,
            &make_method_1192,
            &make_method_1194,
            &make_method_1196,
            &make_method_1198,
            &make_method_1200,
            &make_method_1209,
            &make_method_1211,
            &make_method_1213,
            &make_method_1215,
            &make_method_1217,
            &make_method_1219,
            &make_method_1228,
            &make_method_1230,
            &make_method_1232,
            &make_method_1234,
            &make_method_1236,
            &make_method_1238,
            &make_method_1247,
            &make_method_1249,
            &make_method_1251,
            &make_method_1253,
            &make_method_1255,
            &make_method_1257,
            &make_method_1266,
            &make_method_1268,
            &make_method_1270,
            &make_method_1272,
            &make_method_1274,
            &make_method_1276,
            &make_method_1285,
            &make_method_1287,
            &make_method_1289,
            &make_method_1291,
            &make_method_1293,
            &make_method_1295,
            &make_method_1304,
            &make_method_1306,
            &make_method_1308,
            &make_method_1310,
            &make_method_1312,
            &make_method_1314,
            &make_method_1323,
            &make_method_1325,
            &make_method_1327,
            &make_method_1329,
            &make_method_1331,
            &make_method_1333,
            &make_method_1342,
            &make_method_1344,
            &make_method_1346,
            &make_method_1348,
            &make_method_1350,
            &make_method_1352,
            &make_method_1495,
            &make_method_1496,
            &make_method_1497,
            &make_method_1499,
            &make_method_1501,
            &make_method_1517,
            &make_method_1519,
            &make_method_1534,
            &make_method_1536,
            &make_method_1566,
            &make_method_1568,
            &make_method_1569,
            &make_method_1591,
            &make_method_1592,
            &make_method_1593,
            &make_method_1595,
            &make_method_1596,
            &make_method_1598,
            &make_method_1599,
            &make_method_1601,
            &make_method_1602,
            &make_method_1604,
            &make_method_1605,
            &make_method_1607,
            &make_method_1635,
            &make_method_1636,
            &make_method_1637,
            &make_method_1641,
            &make_method_1671,
            &make_method_1673,
            &make_method_1675,
            &make_method_1676,
        ]
            .into_iter()
            .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_method_1138(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16180u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16181u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15620u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1140(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16182u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16183u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15620u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1152(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15648u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15649u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15644u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1154(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15650u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15651u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15644u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1156(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16195u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16196u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15644u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1158(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16197u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16198u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15644u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1160(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16199u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16200u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15644u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1162(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16201u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16202u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15644u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1171(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15660u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15661u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15656u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1173(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15662u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15663u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15656u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1175(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16206u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16207u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15656u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1177(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16208u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16209u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15656u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1179(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16210u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16211u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15656u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1181(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16212u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16213u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15656u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1190(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15672u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15673u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15668u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1192(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15674u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15675u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15668u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1194(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16217u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16218u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15668u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1196(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16219u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16220u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15668u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1198(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16221u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16222u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15668u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1200(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16223u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16224u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15668u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1209(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15684u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15685u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15680u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1211(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15686u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15687u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15680u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1213(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16228u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16229u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15680u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1215(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16230u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16231u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15680u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1217(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16232u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16233u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15680u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1219(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16234u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16235u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15680u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1228(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16041u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16042u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16036u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1230(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16043u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16044u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16036u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1232(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16239u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16240u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16036u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1234(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16241u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16242u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16036u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1236(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16243u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16244u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16036u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1238(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16245u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16246u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16036u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1247(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15696u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15697u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15692u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1249(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15698u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15699u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15692u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1251(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16250u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16251u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15692u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1253(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16252u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16253u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15692u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1255(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16254u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16255u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15692u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1257(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16256u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16257u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15692u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1266(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15720u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15721u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15716u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1268(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15722u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15723u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15716u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1270(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16272u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16273u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15716u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1272(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16274u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16275u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15716u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1274(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16276u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16277u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15716u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1276(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16278u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16279u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15716u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1285(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15708u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15709u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15704u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1287(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15710u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15711u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15704u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1289(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16261u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16262u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15704u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1291(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16263u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16264u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15704u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1293(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16265u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16266u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15704u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1295(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16267u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16268u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15704u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1304(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25572u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25573u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25565u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1306(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25574u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25575u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25565u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1308(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25576u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25577u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25565u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1310(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25578u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25579u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25565u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1312(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25580u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25581u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25565u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1314(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25582u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25583u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25565u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1323(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25610u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25611u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25603u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1325(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25612u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25613u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25603u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1327(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25614u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25615u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25603u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1329(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25616u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25617u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25603u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1331(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25618u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25619u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25603u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1333(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25620u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25621u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25603u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1342(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25591u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                    opcua::types::LocalizedText::new("", "AddIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25592u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25584u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1344(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25593u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                    opcua::types::LocalizedText::new("", "RemoveIdentity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25594u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25584u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1346(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25595u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddApplication"),
                    opcua::types::LocalizedText::new("", "AddApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25596u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25584u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1348(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25597u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                    opcua::types::LocalizedText::new("", "RemoveApplication"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25598u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25584u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1350(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25599u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                    opcua::types::LocalizedText::new("", "AddEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25600u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25584u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1352(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25601u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                    opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25602u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25584u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1495(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9028u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Disable"),
                    opcua::types::LocalizedText::new("", "Disable"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2803u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2782u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1496(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9027u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Enable"),
                    opcua::types::LocalizedText::new("", "Enable"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2803u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2782u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1497(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9029u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddComment"),
                    opcua::types::LocalizedText::new("", "AddComment"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9030u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2829u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2782u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1499(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3875u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "ConditionRefresh"),
                    opcua::types::LocalizedText::new("", "ConditionRefresh"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3876u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2787u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2788u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2782u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1501(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12912u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "ConditionRefresh2"),
                    opcua::types::LocalizedText::new("", "ConditionRefresh2"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12913u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2787u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2788u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2782u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1517(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9069u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Respond"),
                    opcua::types::LocalizedText::new("", "Respond"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9070u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8927u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2830u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1519(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24312u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Respond2"),
                    opcua::types::LocalizedText::new("", "Respond2"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24313u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8927u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2830u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1534(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9111u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Acknowledge"),
                    opcua::types::LocalizedText::new("", "Acknowledge"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9112u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8944u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2881u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1536(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9113u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Confirm"),
                    opcua::types::LocalizedText::new("", "Confirm"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9114u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8961u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2881u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1566(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9213u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "TimedShelve"),
                    opcua::types::LocalizedText::new("", "TimedShelve"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9214u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11093u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9178u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1568(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9211u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Unshelve"),
                    opcua::types::LocalizedText::new("", "Unshelve"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11093u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9178u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1569(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9212u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "OneShotShelve"),
                    opcua::types::LocalizedText::new("", "OneShotShelve"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11093u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9178u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1591(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16402u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Silence"),
                    opcua::types::LocalizedText::new("", "Silence"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17242u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1592(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16403u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Suppress"),
                    opcua::types::LocalizedText::new("", "Suppress"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17225u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1593(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24316u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Suppress2"),
                    opcua::types::LocalizedText::new("", "Suppress2"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24317u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 17225u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2915u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1595(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17868u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Unsuppress"),
                    opcua::types::LocalizedText::new("", "Unsuppress"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17225u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1596(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24318u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Unsuppress2"),
                    opcua::types::LocalizedText::new("", "Unsuppress2"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24319u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 17225u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2915u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1598(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17869u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveFromService"),
                    opcua::types::LocalizedText::new("", "RemoveFromService"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17259u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1599(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24320u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "RemoveFromService2"),
                    opcua::types::LocalizedText::new("", "RemoveFromService2"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24321u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 17259u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2915u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1601(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17870u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "PlaceInService"),
                    opcua::types::LocalizedText::new("", "PlaceInService"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17259u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1602(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24322u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "PlaceInService2"),
                    opcua::types::LocalizedText::new("", "PlaceInService2"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24323u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 17259u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2915u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1604(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18199u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Reset"),
                    opcua::types::LocalizedText::new("", "Reset"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15013u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1605(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24324u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Reset2"),
                    opcua::types::LocalizedText::new("", "Reset2"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24325u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15013u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2915u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1607(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24744u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "GetGroupMemberships"),
                    opcua::types::LocalizedText::new("", "GetGroupMemberships"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25154u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1635(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16439u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Disable"),
                    opcua::types::LocalizedText::new("", "Disable"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2803u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1636(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16440u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Enable"),
                    opcua::types::LocalizedText::new("", "Enable"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2803u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1637(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16441u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "AddComment"),
                    opcua::types::LocalizedText::new("", "AddComment"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16442u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2829u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16406u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1641(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16461u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Acknowledge"),
                    opcua::types::LocalizedText::new("", "Acknowledge"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16462u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8944u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16406u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1671(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2949u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "TimedShelve"),
                    opcua::types::LocalizedText::new("", "TimedShelve"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2991u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2935u32), type_id :
            opcua::types::NodeId::new(0u16, 53u32), is_forward : false, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2945u32), type_id : opcua::types::NodeId::new(0u16, 53u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11093u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2929u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1673(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24756u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "TimedShelve2"),
                    opcua::types::LocalizedText::new("", "TimedShelve2"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24757u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2935u32), type_id :
            opcua::types::NodeId::new(0u16, 53u32), is_forward : false, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2945u32), type_id : opcua::types::NodeId::new(0u16, 53u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11093u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2929u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1675(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2947u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Unshelve"),
                    opcua::types::LocalizedText::new("", "Unshelve"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2940u32), type_id : opcua::types::NodeId::new(0u16, 53u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2943u32), type_id :
            opcua::types::NodeId::new(0u16, 53u32), is_forward : false, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11093u32), type_id : opcua::types::NodeId::new(0u16, 3065u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2929u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_method_1676(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24758u32),
                    opcua::types::NodeClass::Method,
                    opcua::types::QualifiedName::new(0u16, "Unshelve2"),
                    opcua::types::LocalizedText::new("", "Unshelve2"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24759u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2940u32), type_id :
            opcua::types::NodeId::new(0u16, 53u32), is_forward : false, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2943u32), type_id : opcua::types::NodeId::new(0u16, 53u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11093u32), type_id :
            opcua::types::NodeId::new(0u16, 3065u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2929u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
