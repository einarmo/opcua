// This file was autogenerated from schemas/1.05/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use opcua_nodes as nodes;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_data_type_4089 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_data_type_4090,
            &make_data_type_4091,
            &make_data_type_4092,
            &make_data_type_4093,
            &make_data_type_4094,
            &make_data_type_4096,
            &make_data_type_4097,
            &make_data_type_4098,
            &make_data_type_4099,
            &make_data_type_4100,
            &make_data_type_4101,
            &make_data_type_4102,
            &make_data_type_4103,
            &make_data_type_4104,
            &make_data_type_4105,
            &make_data_type_4106,
            &make_data_type_4108,
            &make_data_type_4110,
            &make_data_type_4111,
            &make_data_type_4112,
            &make_data_type_4113,
            &make_data_type_4114,
            &make_data_type_4115,
            &make_data_type_4117,
            &make_data_type_4119,
            &make_data_type_4120,
            &make_data_type_4121,
            &make_data_type_4122,
            &make_data_type_4123,
            &make_data_type_4124,
            &make_data_type_4125,
            &make_data_type_4126,
            &make_data_type_4127,
            &make_data_type_4128,
            &make_data_type_4129,
            &make_data_type_4130,
            &make_data_type_4131,
            &make_data_type_4132,
            &make_data_type_4133,
            &make_data_type_4134,
            &make_data_type_4136,
            &make_data_type_4137,
            &make_data_type_4138,
            &make_data_type_4139,
            &make_data_type_4140,
            &make_data_type_4141,
            &make_data_type_4142,
            &make_data_type_4143,
            &make_data_type_5,
            &make_data_type_6,
            &make_data_type_7,
            &make_data_type_74,
            &make_data_type_8,
            &make_data_type_9,
            &make_data_type_906,
            &make_data_type_907,
            &make_data_type_908,
            &make_data_type_909,
            &make_data_type_910,
            &make_data_type_911,
            &make_data_type_912,
            &make_data_type_913,
            &make_data_type_992,
            &make_data_type_993,
            &make_data_type_994,
            &make_data_type_995,
            &make_data_type_996,
            &make_data_type_997,
            &make_data_type_998,
            &make_data_type_999,
            &make_method_1016,
            &make_method_1019,
            &make_method_1022,
            &make_method_1024,
            &make_method_1032,
            &make_method_1035,
            &make_method_1037,
            &make_method_1040,
            &make_method_1042,
            &make_method_1045,
            &make_method_1047,
            &make_method_1050,
            &make_method_1053,
            &make_method_1055,
            &make_method_1059,
            &make_method_1062,
            &make_method_1065,
            &make_method_1067,
            &make_method_1072,
            &make_method_1075,
            &make_method_1078,
            &make_method_1084,
            &make_method_1114,
            &make_method_1118,
            &make_method_1121,
            &make_method_1130,
            &make_method_1132,
            &make_method_1134,
            &make_method_1136,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_data_type_4089(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 537u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "RelativePathElement"),
                opcua::types::LocalizedText::new("", "RelativePathElement"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "ReferenceTypeId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "IsInverse".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 1u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "IncludeSubtypes".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 1u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TargetName".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 20u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4090(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 540u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "RelativePath"),
                opcua::types::LocalizedText::new("", "RelativePath"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "Elements".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 537u32),
                        value_rank: 1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4091(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 289u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Counter"),
                opcua::types::LocalizedText::new("", "Counter"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 7u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4092(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 291u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "NumericRange"),
                opcua::types::LocalizedText::new("", "NumericRange"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 12u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4093(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 331u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "EndpointConfiguration"),
                opcua::types::LocalizedText::new("", "EndpointConfiguration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "OperationTimeout".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UseBinaryEncoding".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 1u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxStringLength".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxByteStringLength".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxArrayLength".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxMessageSize".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxBufferSize".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ChannelLifetime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecurityTokenLifetime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4094(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 576u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "FilterOperator"),
                opcua::types::LocalizedText::new("", "FilterOperator"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Equals".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "IsNull".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "GreaterThan".into(),
                        },
                        opcua::types::EnumField {
                            value: 3i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "LessThan".into(),
                        },
                        opcua::types::EnumField {
                            value: 4i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "GreaterThanOrEqual".into(),
                        },
                        opcua::types::EnumField {
                            value: 5i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "LessThanOrEqual".into(),
                        },
                        opcua::types::EnumField {
                            value: 6i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Like".into(),
                        },
                        opcua::types::EnumField {
                            value: 7i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Not".into(),
                        },
                        opcua::types::EnumField {
                            value: 8i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Between".into(),
                        },
                        opcua::types::EnumField {
                            value: 9i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "InList".into(),
                        },
                        opcua::types::EnumField {
                            value: 10i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "And".into(),
                        },
                        opcua::types::EnumField {
                            value: 11i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Or".into(),
                        },
                        opcua::types::EnumField {
                            value: 12i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Cast".into(),
                        },
                        opcua::types::EnumField {
                            value: 13i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "InView".into(),
                        },
                        opcua::types::EnumField {
                            value: 14i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "OfType".into(),
                        },
                        opcua::types::EnumField {
                            value: 15i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "RelatedTo".into(),
                        },
                        opcua::types::EnumField {
                            value: 16i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "BitwiseAnd".into(),
                        },
                        opcua::types::EnumField {
                            value: 17i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "BitwiseOr".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 7605u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_4096(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 583u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ContentFilterElement"),
                opcua::types::LocalizedText::new("", "ContentFilterElement"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "FilterOperator".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 576u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "FilterOperands".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 22u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4097(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 586u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ContentFilter"),
                opcua::types::LocalizedText::new("", "ContentFilter"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "Elements".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 583u32),
                        value_rank: 1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4098(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 589u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "FilterOperand"),
                opcua::types::LocalizedText::new("", "FilterOperand"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4099(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 592u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ElementOperand"),
                opcua::types::LocalizedText::new("", "ElementOperand"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "Index".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 7u32),
                        value_rank: -1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 589u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4100(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 595u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "LiteralOperand"),
                opcua::types::LocalizedText::new("", "LiteralOperand"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "Value".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 24u32),
                        value_rank: -1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 589u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4101(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 598u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "AttributeOperand"),
                opcua::types::LocalizedText::new("", "AttributeOperand"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "NodeId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Alias".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "BrowsePath".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 540u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AttributeId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 288u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "IndexRange".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 291u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 589u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4102(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 601u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "SimpleAttributeOperand"),
                opcua::types::LocalizedText::new("", "SimpleAttributeOperand"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "TypeDefinitionId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "BrowsePath".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 20u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AttributeId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 288u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "IndexRange".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 291u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 589u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4103(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11216u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ModificationInfo"),
                opcua::types::LocalizedText::new("", "ModificationInfo"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "ModificationTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UpdateType".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11234u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UserName".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4104(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 659u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "HistoryEvent"),
                opcua::types::LocalizedText::new("", "HistoryEvent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "Events".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 920u32),
                        value_rank: 1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4105(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32824u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "HistoryModifiedEvent"),
                opcua::types::LocalizedText::new("", "HistoryModifiedEvent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "ModificationInfos".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 11216u32),
                        value_rank: 1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 659u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4106(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11234u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "HistoryUpdateType"),
                opcua::types::LocalizedText::new("", "HistoryUpdateType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Data was inserted."),
                            name: "Insert".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Data was replaced."),
                            name: "Replace".into(),
                        },
                        opcua::types::EnumField {
                            value: 3i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Data was inserted or replaced.",
                            ),
                            name: "Update".into(),
                        },
                        opcua::types::EnumField {
                            value: 4i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Data was deleted."),
                            name: "Delete".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11884u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_4108(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11293u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "PerformUpdateType"),
                opcua::types::LocalizedText::new("", "PerformUpdateType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Data was inserted."),
                            name: "Insert".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Data was replaced."),
                            name: "Replace".into(),
                        },
                        opcua::types::EnumField {
                            value: 3i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Data was inserted or replaced.",
                            ),
                            name: "Update".into(),
                        },
                        opcua::types::EnumField {
                            value: 4i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Data was deleted."),
                            name: "Remove".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11885u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_4110(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 719u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "MonitoringFilter"),
                opcua::types::LocalizedText::new("", "MonitoringFilter"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4111(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 725u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "EventFilter"),
                opcua::types::LocalizedText::new("", "EventFilter"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "SelectClauses".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 601u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "WhereClause".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 586u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 719u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4112(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 948u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "AggregateConfiguration"),
                opcua::types::LocalizedText::new("", "AggregateConfiguration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "UseServerCapabilitiesDefaults".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 1u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TreatUncertainAsBad".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 1u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "PercentDataBad".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 3u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "PercentDataGood".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 3u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UseSlopedExtrapolation".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 1u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4113(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 920u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "HistoryEventFieldList"),
                opcua::types::LocalizedText::new("", "HistoryEventFieldList"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "EventFields".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 24u32),
                        value_rank: 1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4114(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 338u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "BuildInfo"),
                opcua::types::LocalizedText::new("", "BuildInfo"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "ProductUri".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ManufacturerName".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ProductName".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SoftwareVersion".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "BuildNumber".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "BuildDate".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4115(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 851u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "RedundancySupport"),
                opcua::types::LocalizedText::new("", "RedundancySupport"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "None".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Cold".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Warm".into(),
                        },
                        opcua::types::EnumField {
                            value: 3i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Hot".into(),
                        },
                        opcua::types::EnumField {
                            value: 4i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Transparent".into(),
                        },
                        opcua::types::EnumField {
                            value: 5i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "HotAndMirrored".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 7611u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_4117(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 852u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ServerState"),
                opcua::types::LocalizedText::new("", "ServerState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Running".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Failed".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "NoConfiguration".into(),
                        },
                        opcua::types::EnumField {
                            value: 3i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Suspended".into(),
                        },
                        opcua::types::EnumField {
                            value: 4i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Shutdown".into(),
                        },
                        opcua::types::EnumField {
                            value: 5i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Test".into(),
                        },
                        opcua::types::EnumField {
                            value: 6i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "CommunicationFault".into(),
                        },
                        opcua::types::EnumField {
                            value: 7i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Unknown".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 7612u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_4119(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 853u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "RedundantServerDataType"),
                opcua::types::LocalizedText::new("", "RedundantServerDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "ServerId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ServiceLevel".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 3u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ServerState".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 852u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4120(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11943u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "EndpointUrlListDataType"),
                opcua::types::LocalizedText::new("", "EndpointUrlListDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "EndpointUrlList".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 12u32),
                        value_rank: 1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4121(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11944u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "NetworkGroupDataType"),
                opcua::types::LocalizedText::new("", "NetworkGroupDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "ServerUri".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "NetworkPaths".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11943u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4122(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 856u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "SamplingIntervalDiagnosticsDataType"),
                opcua::types::LocalizedText::new("", "SamplingIntervalDiagnosticsDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "SamplingInterval".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 290u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MonitoredItemCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxMonitoredItemCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DisabledMonitoredItemCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4123(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 859u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ServerDiagnosticsSummaryDataType"),
                opcua::types::LocalizedText::new("", "ServerDiagnosticsSummaryDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "ServerViewCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CurrentSessionCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CumulatedSessionCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecurityRejectedSessionCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "RejectedSessionCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SessionTimeoutCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SessionAbortCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CurrentSubscriptionCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CumulatedSubscriptionCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "PublishingIntervalCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecurityRejectedRequestsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "RejectedRequestsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4124(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 862u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ServerStatusDataType"),
                opcua::types::LocalizedText::new("", "ServerStatusDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "StartTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CurrentTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "State".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 852u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "BuildInfo".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 338u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecondsTillShutdown".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ShutdownReason".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 21u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4125(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 865u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "SessionDiagnosticsDataType"),
                opcua::types::LocalizedText::new("", "SessionDiagnosticsDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "SessionId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SessionName".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ClientDescription".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 308u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ServerUri".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "EndpointUrl".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LocaleIds".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 295u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ActualSessionTimeout".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 290u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxResponseMessageSize".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ClientConnectionTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ClientLastContactTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CurrentSubscriptionsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CurrentMonitoredItemsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CurrentPublishRequestsInQueue".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TotalRequestCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UnauthorizedRequestCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ReadCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "HistoryReadCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "WriteCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "HistoryUpdateCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CallCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CreateMonitoredItemsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ModifyMonitoredItemsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SetMonitoringModeCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SetTriggeringCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DeleteMonitoredItemsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CreateSubscriptionCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ModifySubscriptionCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SetPublishingModeCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "PublishCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "RepublishCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TransferSubscriptionsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DeleteSubscriptionsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AddNodesCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AddReferencesCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DeleteNodesCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DeleteReferencesCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "BrowseCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "BrowseNextCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TranslateBrowsePathsToNodeIdsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "QueryFirstCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "QueryNextCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "RegisterNodesCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UnregisterNodesCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 871u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4126(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 868u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "SessionSecurityDiagnosticsDataType"),
                opcua::types::LocalizedText::new("", "SessionSecurityDiagnosticsDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "SessionId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ClientUserIdOfSession".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ClientUserIdHistory".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AuthenticationMechanism".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Encoding".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TransportProtocol".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecurityMode".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 302u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecurityPolicyUri".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ClientCertificate".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 15u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4127(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 871u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ServiceCounterDataType"),
                opcua::types::LocalizedText::new("", "ServiceCounterDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "TotalCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ErrorCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4128(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 299u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "StatusResult"),
                opcua::types::LocalizedText::new("", "StatusResult"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "StatusCode".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 19u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DiagnosticInfo".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 25u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4129(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 874u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "SubscriptionDiagnosticsDataType"),
                opcua::types::LocalizedText::new("", "SubscriptionDiagnosticsDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "SessionId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SubscriptionId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Priority".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 3u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "PublishingInterval".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 290u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxKeepAliveCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxLifetimeCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MaxNotificationsPerPublish".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "PublishingEnabled".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 1u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ModifyCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "EnableCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DisableCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "RepublishRequestCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "RepublishMessageRequestCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "RepublishMessageCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TransferRequestCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TransferredToAltClientCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TransferredToSameClientCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "PublishRequestCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DataChangeNotificationsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "EventNotificationsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "NotificationsCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LatePublishRequestCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CurrentKeepAliveCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CurrentLifetimeCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UnacknowledgedMessageCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DiscardedMessageCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MonitoredItemCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DisabledMonitoredItemCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "MonitoringQueueOverflowCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "NextSequenceNumber".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "EventQueueOverFlowCount".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4130(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 877u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ModelChangeStructureDataType"),
                opcua::types::LocalizedText::new("", "ModelChangeStructureDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Affected".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AffectedType".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Verb".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 3u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4131(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 897u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "SemanticChangeStructureDataType"),
                opcua::types::LocalizedText::new("", "SemanticChangeStructureDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Affected".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AffectedType".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4132(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 884u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Range"),
                opcua::types::LocalizedText::new("", "Range"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Low".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "High".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4133(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 887u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "EUInformation"),
                opcua::types::LocalizedText::new("", "EUInformation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "NamespaceUri".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UnitId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "DisplayName".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 21u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Description".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 21u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4134(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12077u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "AxisScaleEnumeration"),
                opcua::types::LocalizedText::new("", "AxisScaleEnumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Linear".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Log".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Ln".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12078u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_4136(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12171u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ComplexNumberType"),
                opcua::types::LocalizedText::new("", "ComplexNumberType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Real".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 10u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Imaginary".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 10u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4137(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12172u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "DoubleComplexNumberType"),
                opcua::types::LocalizedText::new("", "DoubleComplexNumberType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Real".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Imaginary".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4138(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12079u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "AxisInformation"),
                opcua::types::LocalizedText::new("", "AxisInformation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "EngineeringUnits".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 887u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "EURange".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 884u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Title".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 21u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AxisScaleType".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12077u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AxisSteps".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4139(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 12080u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "XVType"),
                opcua::types::LocalizedText::new("", "XVType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "X".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Value".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 10u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4140(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 894u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ProgramDiagnosticDataType"),
                opcua::types::LocalizedText::new("", "ProgramDiagnosticDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "CreateSessionId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CreateClientName".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "InvocationCreationTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastTransitionTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodCall".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodSessionId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodInputArguments".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 296u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodOutputArguments".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 296u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodCallTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodReturnStatus".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 299u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4141(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24033u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ProgramDiagnostic2DataType"),
                opcua::types::LocalizedText::new("", "ProgramDiagnostic2DataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "CreateSessionId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "CreateClientName".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "InvocationCreationTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastTransitionTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodCall".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodSessionId".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 17u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodInputArguments".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 296u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodOutputArguments".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 296u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodInputValues".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 24u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodOutputValues".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 24u32),
                            value_rank: 1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodCallTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "LastMethodReturnStatus".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 19u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4142(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 891u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Annotation"),
                opcua::types::LocalizedText::new("", "Annotation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Message".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UserName".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "AnnotationTime".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 294u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_4143(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 890u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "ExceptionDeviationFormat"),
                opcua::types::LocalizedText::new("", "ExceptionDeviationFormat"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "AbsoluteValue".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "PercentOfValue".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "PercentOfRange".into(),
                        },
                        opcua::types::EnumField {
                            value: 3i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "PercentOfEURange".into(),
                        },
                        opcua::types::EnumField {
                            value: 4i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Unknown".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 7614u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_5(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 28u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "UInteger"),
                opcua::types::LocalizedText::new("", "UInteger"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 26u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_6(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 29u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Enumeration"),
                opcua::types::LocalizedText::new("", "Enumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 24u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_7(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 1u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Boolean"),
                opcua::types::LocalizedText::new("", "Boolean"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 24u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_74(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 120u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "NamingRuleType"),
                    opcua::types::LocalizedText::new("", "NamingRuleType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The BrowseName must appear in all instances of the type."),
                                name : "Mandatory".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The BrowseName may appear in an instance of the type."),
                                name : "Optional".into(), }, opcua::types::EnumField { value
                                : 3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The modelling rule defines a constraint and the BrowseName is not used in an instance of the type."),
                                name : "Constraint".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12169u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_8(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "SByte"),
                opcua::types::LocalizedText::new("", "SByte"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 27u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_9(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Byte"),
                opcua::types::LocalizedText::new("", "Byte"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 28u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_906(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11737u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "BitFieldMaskDataType"),
                opcua::types::LocalizedText::new("", "BitFieldMaskDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 9u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_907(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 24263u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "SemanticVersionString"),
                opcua::types::LocalizedText::new("", "SemanticVersionString"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 12u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_908(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14533u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "KeyValuePair"),
                opcua::types::LocalizedText::new("", "KeyValuePair"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Key".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 20u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Value".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 24u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_909(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16313u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "AdditionalParametersType"),
                opcua::types::LocalizedText::new("", "AdditionalParametersType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "Parameters".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 14533u32),
                        value_rank: 1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_910(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17548u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "EphemeralKeyType"),
                opcua::types::LocalizedText::new("", "EphemeralKeyType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "PublicKey".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 15u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Signature".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 15u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_911(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15528u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "EndpointType"),
                opcua::types::LocalizedText::new("", "EndpointType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "EndpointUrl".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecurityMode".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 302u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecurityPolicyUri".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TransportProfileUri".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_912(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 31917u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Handle"),
                opcua::types::LocalizedText::new("", "Handle"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 7u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_913(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 31918u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "TrimmedString"),
                opcua::types::LocalizedText::new("", "TrimmedString"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 12u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_992(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 32421u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "BitFieldDefinition"),
                opcua::types::LocalizedText::new("", "BitFieldDefinition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Name".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Description".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 21u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Reserved".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 1u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "StartingBitPosition".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "EndingBitPosition".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_993(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18806u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "RationalNumber"),
                opcua::types::LocalizedText::new("", "RationalNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Numerator".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Denominator".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_994(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18807u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Vector"),
                opcua::types::LocalizedText::new("", "Vector"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_995(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18808u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "3DVector"),
                opcua::types::LocalizedText::new("", "3DVector"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "X".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Y".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Z".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 18807u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_996(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18809u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "CartesianCoordinates"),
                opcua::types::LocalizedText::new("", "CartesianCoordinates"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_997(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18810u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "3DCartesianCoordinates"),
                opcua::types::LocalizedText::new("", "3DCartesianCoordinates"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "X".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Y".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Z".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 18809u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_998(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18811u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Orientation"),
                opcua::types::LocalizedText::new("", "Orientation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_999(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18812u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "3DOrientation"),
                opcua::types::LocalizedText::new("", "3DOrientation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "A".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "B".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "C".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 18811u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_method_1016(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13355u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CreateDirectory"),
                opcua::types::LocalizedText::new("", "CreateDirectory"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13356u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13357u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13354u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1019(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13358u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CreateFile"),
                opcua::types::LocalizedText::new("", "CreateFile"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13359u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13360u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13354u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1022(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17718u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Delete"),
                opcua::types::LocalizedText::new("", "Delete"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17719u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13354u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1024(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13363u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "MoveOrCopy"),
                opcua::types::LocalizedText::new("", "MoveOrCopy"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13364u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13365u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13354u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1032(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13372u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Open"),
                opcua::types::LocalizedText::new("", "Open"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13373u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13374u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13366u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1035(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13375u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Close"),
                opcua::types::LocalizedText::new("", "Close"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13376u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13366u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1037(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13377u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Read"),
                opcua::types::LocalizedText::new("", "Read"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13378u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13379u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13366u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1040(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13380u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Write"),
                opcua::types::LocalizedText::new("", "Write"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13381u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13366u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1042(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13382u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GetPosition"),
                opcua::types::LocalizedText::new("", "GetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13383u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13384u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13366u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1045(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13385u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "SetPosition"),
                opcua::types::LocalizedText::new("", "SetPosition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13386u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13366u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1047(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13387u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CreateDirectory"),
                opcua::types::LocalizedText::new("", "CreateDirectory"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13388u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13389u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1050(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13390u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CreateFile"),
                opcua::types::LocalizedText::new("", "CreateFile"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13391u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13392u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1053(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13393u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Delete"),
                opcua::types::LocalizedText::new("", "Delete"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13394u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1055(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13395u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "MoveOrCopy"),
                opcua::types::LocalizedText::new("", "MoveOrCopy"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13396u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13397u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1059(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16348u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CreateDirectory"),
                opcua::types::LocalizedText::new("", "CreateDirectory"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16349u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16350u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1062(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16351u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CreateFile"),
                opcua::types::LocalizedText::new("", "CreateFile"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16352u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16353u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1065(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16354u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Delete"),
                opcua::types::LocalizedText::new("", "Delete"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16355u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1067(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16356u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "MoveOrCopy"),
                opcua::types::LocalizedText::new("", "MoveOrCopy"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16357u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16358u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1072(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15746u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GenerateFileForRead"),
                opcua::types::LocalizedText::new("", "GenerateFileForRead"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15747u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15748u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1075(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15749u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GenerateFileForWrite"),
                opcua::types::LocalizedText::new("", "GenerateFileForWrite"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16359u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15750u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1078(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15751u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CloseAndCommit"),
                opcua::types::LocalizedText::new("", "CloseAndCommit"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15752u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15753u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1084(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15794u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15754u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1114(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15843u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1118(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15997u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddRole"),
                opcua::types::LocalizedText::new("", "AddRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15998u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15999u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15607u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1121(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16000u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveRole"),
                opcua::types::LocalizedText::new("", "RemoveRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16001u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15607u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1130(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15624u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15625u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1132(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15626u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15627u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1134(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16176u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16177u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1136(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16178u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16179u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
