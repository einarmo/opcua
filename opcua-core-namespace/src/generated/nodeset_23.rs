// This file was autogenerated from tools/schema/schemas/1.05/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua { pub use opcua_types as types; pub use opcua_nodes as nodes; }pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_variable_1533 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_variable_1535,
            &make_variable_1537,
            &make_variable_1539,
            &make_variable_154,
            &make_variable_1540,
            &make_variable_1541,
            &make_variable_1542,
            &make_variable_1543,
            &make_variable_1544,
            &make_variable_1545,
            &make_variable_1546,
            &make_variable_1547,
            &make_variable_1548,
            &make_variable_1549,
            &make_variable_155,
            &make_variable_1550,
            &make_variable_1551,
            &make_variable_1552,
            &make_variable_1553,
            &make_variable_1554,
            &make_variable_1555,
            &make_variable_1556,
            &make_variable_1557,
            &make_variable_1558,
            &make_variable_156,
            &make_variable_1560,
            &make_variable_1561,
            &make_variable_1562,
            &make_variable_1563,
            &make_variable_1564,
            &make_variable_1565,
            &make_variable_1567,
            &make_variable_157,
            &make_variable_1570,
            &make_variable_1571,
            &make_variable_1572,
            &make_variable_1573,
            &make_variable_1574,
            &make_variable_1575,
            &make_variable_1576,
            &make_variable_1577,
            &make_variable_1578,
            &make_variable_1579,
            &make_variable_158,
            &make_variable_1580,
            &make_variable_1581,
            &make_variable_1583,
            &make_variable_1584,
            &make_variable_1585,
            &make_variable_1586,
            &make_variable_1587,
            &make_variable_1589,
            &make_variable_159,
            &make_variable_1590,
            &make_variable_1594,
            &make_variable_1597,
            &make_variable_1600,
            &make_variable_1603,
            &make_variable_1606,
            &make_variable_1608,
            &make_variable_1611,
            &make_variable_1612,
            &make_variable_1613,
            &make_variable_1614,
            &make_variable_1615,
            &make_variable_1616,
            &make_variable_1617,
            &make_variable_1618,
            &make_variable_1619,
            &make_variable_1620,
            &make_variable_1621,
            &make_variable_1622,
            &make_variable_1623,
            &make_variable_1624,
            &make_variable_1625,
            &make_variable_1626,
            &make_variable_1627,
            &make_variable_1628,
            &make_variable_1629,
            &make_variable_163,
            &make_variable_1630,
            &make_variable_1631,
            &make_variable_1632,
            &make_variable_1633,
            &make_variable_1634,
            &make_variable_1638,
            &make_variable_1639,
            &make_variable_164,
            &make_variable_1640,
            &make_variable_1642,
            &make_variable_1643,
            &make_variable_1644,
            &make_variable_1645,
            &make_variable_1646,
            &make_variable_1647,
            &make_variable_1648,
            &make_variable_165,
            &make_variable_1650,
            &make_variable_1652,
        ]
            .into_iter()
            .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_variable_1533(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9110u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "FalseState"),
                    opcua::types::LocalizedText::new("", "FalseState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Unconfirmed"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9102u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1535(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9112u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            opcua::types::LocalizedText::new("",
                            "The identifier for the event to comment."), name : "EventId"
                            .into(), value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 21u32), description :
                            opcua::types::LocalizedText::new("",
                            "The comment to add to the condition."), name : "Comment"
                            .into(), value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9111u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1537(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9114u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            opcua::types::LocalizedText::new("",
                            "The identifier for the event to comment."), name : "EventId"
                            .into(), value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 21u32), description :
                            opcua::types::LocalizedText::new("",
                            "The comment to add to the condition."), name : "Comment"
                            .into(), value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9113u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1539(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9118u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EnabledState"),
                    opcua::types::LocalizedText::new("", "EnabledState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9119u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9160u32), type_id :
            opcua::types::NodeId::new(0u16, 9004u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9169u32), type_id : opcua::types::NodeId::new(0u16, 9004u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9178u32), type_id :
            opcua::types::NodeId::new(0u16, 9004u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8995u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_154(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3087u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "LocaleIdArray"),
                    opcua::types::LocalizedText::new("", "LocaleIdArray"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 295u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2009u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1540(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9119u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9118u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1541(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9160u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ActiveState"),
                    opcua::types::LocalizedText::new("", "ActiveState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9161u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9164u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9165u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9166u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9167u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9168u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9118u32), type_id : opcua::types::NodeId::new(0u16, 9004u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8995u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2915u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1542(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9161u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9160u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1543(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9164u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EffectiveDisplayName"),
                    opcua::types::LocalizedText::new("", "EffectiveDisplayName"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9160u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1544(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9165u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                    opcua::types::LocalizedText::new("", "TransitionTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9160u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1545(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9166u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EffectiveTransitionTime"),
                    opcua::types::LocalizedText::new("", "EffectiveTransitionTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9160u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1546(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9167u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TrueState"),
                    opcua::types::LocalizedText::new("", "TrueState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Active"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9160u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1547(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9168u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "FalseState"),
                    opcua::types::LocalizedText::new("", "FalseState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Inactive"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9160u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1548(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11120u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputNode"),
                    opcua::types::LocalizedText::new("", "InputNode"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1549(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9169u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SuppressedState"),
                    opcua::types::LocalizedText::new("", "SuppressedState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9170u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9174u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9176u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9177u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9118u32), type_id : opcua::types::NodeId::new(0u16, 9004u32), is_forward :
            false, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8995u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            80u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2915u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_155(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3088u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MinSupportedSampleRate"),
                    opcua::types::LocalizedText::new("", "MinSupportedSampleRate"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 290u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2009u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1550(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9170u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9169u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1551(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9174u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                    opcua::types::LocalizedText::new("", "TransitionTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9169u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1552(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9176u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TrueState"),
                    opcua::types::LocalizedText::new("", "TrueState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Suppressed"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9169u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1553(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9177u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "FalseState"),
                    opcua::types::LocalizedText::new("", "FalseState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Unsuppressed"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9169u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1554(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16371u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutOfServiceState"),
                    opcua::types::LocalizedText::new("", "OutOfServiceState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16372u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16376u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16378u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16379u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8995u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1555(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16372u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16371u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1556(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16376u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                    opcua::types::LocalizedText::new("", "TransitionTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16371u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1557(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16378u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TrueState"),
                    opcua::types::LocalizedText::new("", "TrueState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Out of Service"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16371u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1558(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16379u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "FalseState"),
                    opcua::types::LocalizedText::new("", "FalseState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "In Service"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16371u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_156(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3089u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MaxBrowseContinuationPoints",
                    ),
                    opcua::types::LocalizedText::new("", "MaxBrowseContinuationPoints"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 5u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2009u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1560(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9179u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CurrentState"),
                    opcua::types::LocalizedText::new("", "CurrentState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9180u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2760u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9178u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1561(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9180u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9179u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1562(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9184u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "LastTransition"),
                    opcua::types::LocalizedText::new("", "LastTransition"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9185u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9188u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2767u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9178u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1563(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9185u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9184u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1564(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9188u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                    opcua::types::LocalizedText::new("", "TransitionTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9184u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1565(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9189u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "UnshelveTime"),
                    opcua::types::LocalizedText::new("", "UnshelveTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 290u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9178u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1567(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9214u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 290u32), description :
                            Default::default(), name : "ShelvingTime".into(), value_rank
                            : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9213u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_157(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3090u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxQueryContinuationPoints"),
                    opcua::types::LocalizedText::new("", "MaxQueryContinuationPoints"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 5u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2009u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1570(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9215u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SuppressedOrShelved"),
                    opcua::types::LocalizedText::new("", "SuppressedOrShelved"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1571(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9216u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxTimeShelved"),
                    opcua::types::LocalizedText::new("", "MaxTimeShelved"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 290u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1572(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16389u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "AudibleEnabled"),
                    opcua::types::LocalizedText::new("", "AudibleEnabled"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1573(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16390u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "AudibleSound"),
                    opcua::types::LocalizedText::new("", "AudibleSound"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 16307u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17986u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1574(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16380u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SilenceState"),
                    opcua::types::LocalizedText::new("", "SilenceState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16381u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16385u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16387u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16388u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8995u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1575(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16381u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16380u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1576(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16385u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                    opcua::types::LocalizedText::new("", "TransitionTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16380u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1577(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16387u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TrueState"),
                    opcua::types::LocalizedText::new("", "TrueState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Silenced"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16380u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1578(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16388u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "FalseState"),
                    opcua::types::LocalizedText::new("", "FalseState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Not Silenced"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16380u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1579(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16395u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OnDelay"),
                    opcua::types::LocalizedText::new("", "OnDelay"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 290u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_158(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3091u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MaxHistoryContinuationPoints",
                    ),
                    opcua::types::LocalizedText::new("", "MaxHistoryContinuationPoints"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 5u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2009u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1580(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16396u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OffDelay"),
                    opcua::types::LocalizedText::new("", "OffDelay"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 290u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1581(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16397u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "FirstInGroupFlag"),
                    opcua::types::LocalizedText::new("", "FirstInGroupFlag"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1583(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18190u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "LatchedState"),
                    opcua::types::LocalizedText::new("", "LatchedState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18191u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18195u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18197u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18198u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8995u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1584(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18191u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18190u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1585(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18195u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                    opcua::types::LocalizedText::new("", "TransitionTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18190u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1586(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18197u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TrueState"),
                    opcua::types::LocalizedText::new("", "TrueState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Latched"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18190u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1587(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18198u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "FalseState"),
                    opcua::types::LocalizedText::new("", "FalseState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Unlatched"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18190u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1589(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16400u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ReAlarmTime"),
                    opcua::types::LocalizedText::new("", "ReAlarmTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 290u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_159(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3092u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SoftwareCertificates"),
                    opcua::types::LocalizedText::new("", "SoftwareCertificates"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 344u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2009u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1590(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16401u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ReAlarmRepeatCount"),
                    opcua::types::LocalizedText::new("", "ReAlarmRepeatCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 4u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2915u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1594(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24317u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 21u32), description :
                            Default::default(), name : "Comment".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24316u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1597(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24319u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 21u32), description :
                            Default::default(), name : "Comment".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24318u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1600(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24321u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 21u32), description :
                            Default::default(), name : "Comment".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24320u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1603(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24323u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 21u32), description :
                            Default::default(), name : "Comment".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24322u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1606(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24325u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 21u32), description :
                            Default::default(), name : "Comment".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24324u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1608(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25154u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions :
                            Some(vec![0u32,]), data_type :
                            opcua::types::NodeId::new(0u16, 17u32), description :
                            Default::default(), name : "Groups".into(), value_rank :
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24744u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1611(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16407u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EventId"),
                    opcua::types::LocalizedText::new("", "EventId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 15u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1612(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16408u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EventType"),
                    opcua::types::LocalizedText::new("", "EventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1613(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16409u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SourceNode"),
                    opcua::types::LocalizedText::new("", "SourceNode"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1614(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16410u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SourceName"),
                    opcua::types::LocalizedText::new("", "SourceName"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1615(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16411u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Time"),
                    opcua::types::LocalizedText::new("", "Time"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1616(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16412u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ReceiveTime"),
                    opcua::types::LocalizedText::new("", "ReceiveTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1617(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16414u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Message"),
                    opcua::types::LocalizedText::new("", "Message"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1618(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16415u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Severity"),
                    opcua::types::LocalizedText::new("", "Severity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 5u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1619(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16416u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ConditionClassId"),
                    opcua::types::LocalizedText::new("", "ConditionClassId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1620(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16417u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ConditionClassName"),
                    opcua::types::LocalizedText::new("", "ConditionClassName"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1621(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16418u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ConditionSubClassId"),
                    opcua::types::LocalizedText::new("", "ConditionSubClassId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1622(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16419u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ConditionSubClassName"),
                    opcua::types::LocalizedText::new("", "ConditionSubClassName"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1623(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16420u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ConditionName"),
                    opcua::types::LocalizedText::new("", "ConditionName"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1624(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16421u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "BranchId"),
                    opcua::types::LocalizedText::new("", "BranchId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1625(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16422u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Retain"),
                    opcua::types::LocalizedText::new("", "Retain"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1626(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16423u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EnabledState"),
                    opcua::types::LocalizedText::new("", "EnabledState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16424u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8995u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16406u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1627(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16424u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16423u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1628(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16432u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Quality"),
                    opcua::types::LocalizedText::new("", "Quality"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 19u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16433u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9002u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16406u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1629(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16433u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SourceTimestamp"),
                    opcua::types::LocalizedText::new("", "SourceTimestamp"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16432u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_163(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3095u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServerDiagnosticsSummary"),
                    opcua::types::LocalizedText::new("", "ServerDiagnosticsSummary"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 859u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3096u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3097u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3099u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3100u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3101u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3102u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3104u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3105u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3106u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3107u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3108u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2150u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2010u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1630(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16434u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "LastSeverity"),
                    opcua::types::LocalizedText::new("", "LastSeverity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 5u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16435u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9002u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16406u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1631(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16435u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SourceTimestamp"),
                    opcua::types::LocalizedText::new("", "SourceTimestamp"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16434u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1632(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16436u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Comment"),
                    opcua::types::LocalizedText::new("", "Comment"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16437u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9002u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16406u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1633(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16437u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SourceTimestamp"),
                    opcua::types::LocalizedText::new("", "SourceTimestamp"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16436u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1634(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16438u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientUserId"),
                    opcua::types::LocalizedText::new("", "ClientUserId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1638(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16442u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            opcua::types::LocalizedText::new("",
                            "The identifier for the event to comment."), name : "EventId"
                            .into(), value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 21u32), description :
                            opcua::types::LocalizedText::new("",
                            "The comment to add to the condition."), name : "Comment"
                            .into(), value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16441u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1639(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16443u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "AckedState"),
                    opcua::types::LocalizedText::new("", "AckedState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16444u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8995u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16406u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_164(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3096u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServerViewCount"),
                    opcua::types::LocalizedText::new("", "ServerViewCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3095u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1640(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16444u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16443u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1642(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16462u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            opcua::types::LocalizedText::new("",
                            "The identifier for the event to comment."), name : "EventId"
                            .into(), value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 21u32), description :
                            opcua::types::LocalizedText::new("",
                            "The comment to add to the condition."), name : "Comment"
                            .into(), value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16461u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1643(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16465u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ActiveState"),
                    opcua::types::LocalizedText::new("", "ActiveState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16466u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16472u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16473u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8995u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16406u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1644(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16466u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Id"),
                    opcua::types::LocalizedText::new("", "Id"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16465u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1645(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16472u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TrueState"),
                    opcua::types::LocalizedText::new("", "TrueState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Active"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16465u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1646(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16473u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "FalseState"),
                    opcua::types::LocalizedText::new("", "FalseState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        opcua::types::LocalizedText::new("en", "Inactive"),
                    ),
                ),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16465u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1647(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16474u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputNode"),
                    opcua::types::LocalizedText::new("", "InputNode"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1648(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16519u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SuppressedOrShelved"),
                    opcua::types::LocalizedText::new("", "SuppressedOrShelved"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16406u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_165(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3097u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CurrentSessionCount"),
                    opcua::types::LocalizedText::new("", "CurrentSessionCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3095u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1650(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32226u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "<DigitalVariable>"),
                    opcua::types::LocalizedText::new("", "<DigitalVariable>"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11508u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32064u32), type_id : opcua::types::NodeId::new(0u16, 32059u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1652(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9115u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "UnshelveTime"),
                    opcua::types::LocalizedText::new("", "UnshelveTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 290u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2929u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
