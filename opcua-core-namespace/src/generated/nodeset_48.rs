// This file was autogenerated from tools/schema/schemas/1.05/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua { pub use opcua_types as types; pub use opcua_nodes as nodes; }pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_variable_745 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_variable_746,
            &make_variable_747,
            &make_variable_748,
            &make_variable_749,
            &make_variable_75,
            &make_variable_750,
            &make_variable_751,
            &make_variable_752,
            &make_variable_753,
            &make_variable_754,
            &make_variable_756,
            &make_variable_757,
            &make_variable_758,
            &make_variable_759,
            &make_variable_760,
            &make_variable_761,
            &make_variable_762,
            &make_variable_763,
            &make_variable_764,
            &make_variable_765,
            &make_variable_767,
            &make_variable_768,
            &make_variable_769,
            &make_variable_770,
            &make_variable_771,
            &make_variable_772,
            &make_variable_773,
            &make_variable_774,
            &make_variable_775,
            &make_variable_777,
            &make_variable_778,
            &make_variable_780,
            &make_variable_781,
            &make_variable_782,
            &make_variable_784,
            &make_variable_785,
            &make_variable_786,
            &make_variable_790,
            &make_variable_791,
            &make_variable_792,
            &make_variable_793,
            &make_variable_794,
            &make_variable_795,
            &make_variable_796,
            &make_variable_797,
            &make_variable_798,
            &make_variable_799,
            &make_variable_800,
            &make_variable_801,
            &make_variable_802,
            &make_variable_803,
            &make_variable_804,
            &make_variable_805,
            &make_variable_806,
            &make_variable_807,
            &make_variable_808,
            &make_variable_809,
            &make_variable_811,
            &make_variable_812,
            &make_variable_813,
            &make_variable_814,
            &make_variable_815,
            &make_variable_816,
            &make_variable_817,
            &make_variable_818,
            &make_variable_819,
            &make_variable_820,
            &make_variable_822,
            &make_variable_823,
            &make_variable_824,
            &make_variable_825,
            &make_variable_826,
            &make_variable_827,
            &make_variable_828,
            &make_variable_829,
            &make_variable_830,
            &make_variable_831,
            &make_variable_832,
            &make_variable_833,
            &make_variable_838,
            &make_variable_839,
            &make_variable_841,
            &make_variable_842,
            &make_variable_843,
            &make_variable_844,
            &make_variable_845,
            &make_variable_846,
            &make_variable_847,
            &make_variable_848,
            &make_variable_849,
            &make_variable_850,
            &make_variable_852,
            &make_variable_853,
            &make_variable_854,
            &make_variable_855,
            &make_variable_856,
            &make_variable_857,
            &make_variable_858,
            &make_variable_859,
        ]
            .into_iter()
            .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_variable_745(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2235u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "AddReferencesCount"),
                    opcua::types::LocalizedText::new("", "AddReferencesCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_746(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2236u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "DeleteNodesCount"),
                    opcua::types::LocalizedText::new("", "DeleteNodesCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_747(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2237u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "DeleteReferencesCount"),
                    opcua::types::LocalizedText::new("", "DeleteReferencesCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_748(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2238u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "BrowseCount"),
                    opcua::types::LocalizedText::new("", "BrowseCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_749(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2239u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "BrowseNextCount"),
                    opcua::types::LocalizedText::new("", "BrowseNextCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_75(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12169u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EnumValues"),
                    opcua::types::LocalizedText::new("", "EnumValues"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7594u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::EnumValueType { description :
                            opcua::types::LocalizedText::new("",
                            "The BrowseName must appear in all instances of the type."),
                            display_name : opcua::types::LocalizedText::new("",
                            "Mandatory"), value : 1i64, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::EnumValueType { description :
                            opcua::types::LocalizedText::new("",
                            "The BrowseName may appear in an instance of the type."),
                            display_name : opcua::types::LocalizedText::new("",
                            "Optional"), value : 2i64, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::EnumValueType { description :
                            opcua::types::LocalizedText::new("",
                            "The modelling rule defines a constraint and the BrowseName is not used in an instance of the type."),
                            display_name : opcua::types::LocalizedText::new("",
                            "Constraint"), value : 3i64, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![3u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 120u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_750(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2240u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "TranslateBrowsePathsToNodeIdsCount",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "TranslateBrowsePathsToNodeIdsCount",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_751(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2241u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "QueryFirstCount"),
                    opcua::types::LocalizedText::new("", "QueryFirstCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_752(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2242u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "QueryNextCount"),
                    opcua::types::LocalizedText::new("", "QueryNextCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_753(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2730u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "RegisterNodesCount"),
                    opcua::types::LocalizedText::new("", "RegisterNodesCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_754(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2731u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "UnregisterNodesCount"),
                    opcua::types::LocalizedText::new("", "UnregisterNodesCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2197u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_756(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12860u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SessionSecurityDiagnostics"),
                    opcua::types::LocalizedText::new("", "SessionSecurityDiagnostics"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 868u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12861u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12862u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12863u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12864u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12865u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12866u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12867u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12868u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12869u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2244u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            83u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2243u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_757(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12861u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SessionId"),
                    opcua::types::LocalizedText::new("", "SessionId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_758(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12862u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientUserIdOfSession"),
                    opcua::types::LocalizedText::new("", "ClientUserIdOfSession"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_759(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12863u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientUserIdHistory"),
                    opcua::types::LocalizedText::new("", "ClientUserIdHistory"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_760(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12864u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "AuthenticationMechanism"),
                    opcua::types::LocalizedText::new("", "AuthenticationMechanism"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_761(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12865u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Encoding"),
                    opcua::types::LocalizedText::new("", "Encoding"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_762(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12866u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TransportProtocol"),
                    opcua::types::LocalizedText::new("", "TransportProtocol"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_763(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12867u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SecurityMode"),
                    opcua::types::LocalizedText::new("", "SecurityMode"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 302u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_764(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12868u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SecurityPolicyUri"),
                    opcua::types::LocalizedText::new("", "SecurityPolicyUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_765(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12869u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientCertificate"),
                    opcua::types::LocalizedText::new("", "ClientCertificate"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 15u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_767(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2245u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SessionId"),
                    opcua::types::LocalizedText::new("", "SessionId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2244u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_768(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2246u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientUserIdOfSession"),
                    opcua::types::LocalizedText::new("", "ClientUserIdOfSession"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2244u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_769(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2247u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientUserIdHistory"),
                    opcua::types::LocalizedText::new("", "ClientUserIdHistory"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2244u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_770(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2248u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "AuthenticationMechanism"),
                    opcua::types::LocalizedText::new("", "AuthenticationMechanism"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2244u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_771(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2249u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Encoding"),
                    opcua::types::LocalizedText::new("", "Encoding"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2244u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_772(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2250u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TransportProtocol"),
                    opcua::types::LocalizedText::new("", "TransportProtocol"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2244u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_773(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2251u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SecurityMode"),
                    opcua::types::LocalizedText::new("", "SecurityMode"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 302u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2244u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_774(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2252u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SecurityPolicyUri"),
                    opcua::types::LocalizedText::new("", "SecurityPolicyUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2244u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_775(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3058u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientCertificate"),
                    opcua::types::LocalizedText::new("", "ClientCertificate"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 15u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2244u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_777(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11488u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OptionSetValues"),
                    opcua::types::LocalizedText::new("", "OptionSetValues"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11487u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_778(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11701u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "BitMask"),
                    opcua::types::LocalizedText::new("", "BitMask"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11487u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_780(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17632u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Selections"),
                    opcua::types::LocalizedText::new("", "Selections"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16309u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_781(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17633u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SelectionDescriptions"),
                    opcua::types::LocalizedText::new("", "SelectionDescriptions"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16309u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_782(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16312u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "RestrictToList"),
                    opcua::types::LocalizedText::new("", "RestrictToList"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16309u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_784(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17988u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ListId"),
                    opcua::types::LocalizedText::new("", "ListId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17986u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_785(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17989u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "AgencyId"),
                    opcua::types::LocalizedText::new("", "AgencyId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17986u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_786(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17990u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "VersionId"),
                    opcua::types::LocalizedText::new("", "VersionId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17986u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_790(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2254u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServerArray"),
                    opcua::types::LocalizedText::new("", "ServerArray"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2253u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_791(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2255u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "NamespaceArray"),
                    opcua::types::LocalizedText::new("", "NamespaceArray"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2253u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_792(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15004u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "UrisVersion"),
                    opcua::types::LocalizedText::new("", "UrisVersion"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 20998u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2253u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_793(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2256u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServerStatus"),
                    opcua::types::LocalizedText::new("", "ServerStatus"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 862u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2257u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2258u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2259u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2260u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2992u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2993u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2138u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2253u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_794(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2257u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "StartTime"),
                    opcua::types::LocalizedText::new("", "StartTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2256u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_795(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2258u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CurrentTime"),
                    opcua::types::LocalizedText::new("", "CurrentTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2256u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_796(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2259u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "State"),
                    opcua::types::LocalizedText::new("", "State"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 852u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2256u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_797(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2260u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "BuildInfo"),
                    opcua::types::LocalizedText::new("", "BuildInfo"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 338u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2262u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2263u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2261u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2264u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2265u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2266u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3051u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2256u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_798(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2262u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ProductUri"),
                    opcua::types::LocalizedText::new("", "ProductUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2260u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_799(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2263u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ManufacturerName"),
                    opcua::types::LocalizedText::new("", "ManufacturerName"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2260u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_800(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2261u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ProductName"),
                    opcua::types::LocalizedText::new("", "ProductName"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2260u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_801(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2264u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SoftwareVersion"),
                    opcua::types::LocalizedText::new("", "SoftwareVersion"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2260u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_802(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2265u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "BuildNumber"),
                    opcua::types::LocalizedText::new("", "BuildNumber"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2260u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_803(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2266u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "BuildDate"),
                    opcua::types::LocalizedText::new("", "BuildDate"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2260u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_804(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2992u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SecondsTillShutdown"),
                    opcua::types::LocalizedText::new("", "SecondsTillShutdown"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2256u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_805(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2993u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ShutdownReason"),
                    opcua::types::LocalizedText::new("", "ShutdownReason"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2256u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_806(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2267u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServiceLevel"),
                    opcua::types::LocalizedText::new("", "ServiceLevel"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 3u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2253u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_807(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2994u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Auditing"),
                    opcua::types::LocalizedText::new("", "Auditing"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2253u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_808(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12885u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EstimatedReturnTime"),
                    opcua::types::LocalizedText::new("", "EstimatedReturnTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 13u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2253u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_809(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17634u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "LocalTime"),
                    opcua::types::LocalizedText::new("", "LocalTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 8912u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(1000f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2253u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_811(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2269u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServerProfileArray"),
                    opcua::types::LocalizedText::new("", "ServerProfileArray"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_812(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2271u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "LocaleIdArray"),
                    opcua::types::LocalizedText::new("", "LocaleIdArray"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 295u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_813(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2272u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MinSupportedSampleRate"),
                    opcua::types::LocalizedText::new("", "MinSupportedSampleRate"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 290u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_814(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2735u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MaxBrowseContinuationPoints",
                    ),
                    opcua::types::LocalizedText::new("", "MaxBrowseContinuationPoints"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 5u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_815(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2736u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxQueryContinuationPoints"),
                    opcua::types::LocalizedText::new("", "MaxQueryContinuationPoints"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 5u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_816(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2737u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MaxHistoryContinuationPoints",
                    ),
                    opcua::types::LocalizedText::new("", "MaxHistoryContinuationPoints"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 5u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_817(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3704u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SoftwareCertificates"),
                    opcua::types::LocalizedText::new("", "SoftwareCertificates"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 344u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_818(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11702u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxArrayLength"),
                    opcua::types::LocalizedText::new("", "MaxArrayLength"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_819(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11703u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxStringLength"),
                    opcua::types::LocalizedText::new("", "MaxStringLength"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_820(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12911u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxByteStringLength"),
                    opcua::types::LocalizedText::new("", "MaxByteStringLength"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_822(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11705u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxNodesPerRead"),
                    opcua::types::LocalizedText::new("", "MaxNodesPerRead"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_823(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12165u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxNodesPerHistoryReadData"),
                    opcua::types::LocalizedText::new("", "MaxNodesPerHistoryReadData"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_824(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12166u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MaxNodesPerHistoryReadEvents",
                    ),
                    opcua::types::LocalizedText::new("", "MaxNodesPerHistoryReadEvents"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_825(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11707u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxNodesPerWrite"),
                    opcua::types::LocalizedText::new("", "MaxNodesPerWrite"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_826(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12167u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MaxNodesPerHistoryUpdateData",
                    ),
                    opcua::types::LocalizedText::new("", "MaxNodesPerHistoryUpdateData"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_827(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12168u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MaxNodesPerHistoryUpdateEvents",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "MaxNodesPerHistoryUpdateEvents",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_828(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11709u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxNodesPerMethodCall"),
                    opcua::types::LocalizedText::new("", "MaxNodesPerMethodCall"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_829(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11710u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxNodesPerBrowse"),
                    opcua::types::LocalizedText::new("", "MaxNodesPerBrowse"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_830(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11711u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxNodesPerRegisterNodes"),
                    opcua::types::LocalizedText::new("", "MaxNodesPerRegisterNodes"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_831(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11712u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MaxNodesPerTranslateBrowsePathsToNodeIds",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "MaxNodesPerTranslateBrowsePathsToNodeIds",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_832(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11713u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxNodesPerNodeManagement"),
                    opcua::types::LocalizedText::new("", "MaxNodesPerNodeManagement"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_833(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11714u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxMonitoredItemsPerCall"),
                    opcua::types::LocalizedText::new("", "MaxMonitoredItemsPerCall"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11704u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_838(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16302u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "RoleName".into(), value_rank : -
                            1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "NamespaceUri".into(), value_rank
                            : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16301u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_839(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16303u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 17u32), description :
                            Default::default(), name : "RoleNodeId".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16301u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_841(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16305u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 17u32), description :
                            Default::default(), name : "RoleNodeId".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16304u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_842(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24095u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxSessions"),
                    opcua::types::LocalizedText::new("", "MaxSessions"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_843(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24096u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxSubscriptions"),
                    opcua::types::LocalizedText::new("", "MaxSubscriptions"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_844(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24097u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxMonitoredItems"),
                    opcua::types::LocalizedText::new("", "MaxMonitoredItems"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_845(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24098u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxSubscriptionsPerSession"),
                    opcua::types::LocalizedText::new("", "MaxSubscriptionsPerSession"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_846(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24104u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MaxMonitoredItemsPerSubscription",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "MaxMonitoredItemsPerSubscription",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_847(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24099u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxSelectClauseParameters"),
                    opcua::types::LocalizedText::new("", "MaxSelectClauseParameters"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_848(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24100u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxWhereClauseParameters"),
                    opcua::types::LocalizedText::new("", "MaxWhereClauseParameters"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_849(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 31916u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxMonitoredItemsQueueSize"),
                    opcua::types::LocalizedText::new("", "MaxMonitoredItemsQueueSize"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_850(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24101u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ConformanceUnits"),
                    opcua::types::LocalizedText::new("", "ConformanceUnits"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 20u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2268u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_852(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2275u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServerDiagnosticsSummary"),
                    opcua::types::LocalizedText::new("", "ServerDiagnosticsSummary"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 859u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2276u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2277u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2278u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2279u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3705u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2281u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2282u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2284u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2285u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2286u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2287u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2288u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2150u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2274u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_853(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2276u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServerViewCount"),
                    opcua::types::LocalizedText::new("", "ServerViewCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2275u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_854(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2277u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CurrentSessionCount"),
                    opcua::types::LocalizedText::new("", "CurrentSessionCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2275u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_855(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2278u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CumulatedSessionCount"),
                    opcua::types::LocalizedText::new("", "CumulatedSessionCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2275u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_856(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2279u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SecurityRejectedSessionCount",
                    ),
                    opcua::types::LocalizedText::new("", "SecurityRejectedSessionCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2275u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_857(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3705u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "RejectedSessionCount"),
                    opcua::types::LocalizedText::new("", "RejectedSessionCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2275u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_858(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2281u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SessionTimeoutCount"),
                    opcua::types::LocalizedText::new("", "SessionTimeoutCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2275u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_859(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2282u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SessionAbortCount"),
                    opcua::types::LocalizedText::new("", "SessionAbortCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2275u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
