// This file was autogenerated from schemas/1.05/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use opcua_nodes as nodes;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_variable_3188 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_variable_3189,
            &make_variable_319,
            &make_variable_3190,
            &make_variable_3191,
            &make_variable_3192,
            &make_variable_3193,
            &make_variable_3194,
            &make_variable_3195,
            &make_variable_3196,
            &make_variable_3197,
            &make_variable_3199,
            &make_variable_320,
            &make_variable_3200,
            &make_variable_3202,
            &make_variable_3203,
            &make_variable_3205,
            &make_variable_3206,
            &make_variable_3208,
            &make_variable_321,
            &make_variable_3211,
            &make_variable_3212,
            &make_variable_3213,
            &make_variable_3214,
            &make_variable_3215,
            &make_variable_3217,
            &make_variable_3219,
            &make_variable_322,
            &make_variable_3220,
            &make_variable_3221,
            &make_variable_3222,
            &make_variable_3223,
            &make_variable_3224,
            &make_variable_3228,
            &make_variable_3229,
            &make_variable_323,
            &make_variable_3230,
            &make_variable_3232,
            &make_variable_3234,
            &make_variable_3235,
            &make_variable_3236,
            &make_variable_3237,
            &make_variable_3238,
            &make_variable_3239,
            &make_variable_324,
            &make_variable_3240,
            &make_variable_3241,
            &make_variable_3242,
            &make_variable_3244,
            &make_variable_3246,
            &make_variable_3247,
            &make_variable_3248,
            &make_variable_3249,
            &make_variable_325,
            &make_variable_3250,
            &make_variable_3251,
            &make_variable_3252,
            &make_variable_3253,
            &make_variable_3254,
            &make_variable_3255,
            &make_variable_3256,
            &make_variable_3257,
            &make_variable_3258,
            &make_variable_3259,
            &make_variable_326,
            &make_variable_3260,
            &make_variable_3261,
            &make_variable_3262,
            &make_variable_3263,
            &make_variable_3264,
            &make_variable_3265,
            &make_variable_3266,
            &make_variable_3267,
            &make_variable_3268,
            &make_variable_3269,
            &make_variable_327,
            &make_variable_3270,
            &make_variable_3271,
            &make_variable_3272,
            &make_variable_3273,
            &make_variable_3274,
            &make_variable_3275,
            &make_variable_3276,
            &make_variable_3277,
            &make_variable_3278,
            &make_variable_3279,
            &make_variable_328,
            &make_variable_3280,
            &make_variable_3281,
            &make_variable_3283,
            &make_variable_3284,
            &make_variable_3285,
            &make_variable_3286,
            &make_variable_3288,
            &make_variable_3289,
            &make_variable_329,
            &make_variable_3291,
            &make_variable_3298,
            &make_variable_3299,
            &make_variable_330,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_variable_3188(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19273u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19271u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3189(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19274u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19271u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_319(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 8898u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TotalRequestCount"),
                opcua::types::LocalizedText::new("", "TotalRequestCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3190(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19276u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StatePausedByParent"),
                opcua::types::LocalizedText::new("", "StatePausedByParent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19277u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19278u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19279u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19255u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3191(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19277u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19276u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3192(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19278u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19276u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3193(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19279u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19276u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3194(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19281u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateDisabledByMethod"),
                opcua::types::LocalizedText::new("", "StateDisabledByMethod"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19282u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19283u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19284u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19255u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3195(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19282u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19281u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3196(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19283u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19281u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3197(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19284u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19281u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3199(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19287u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ResolvedAddress"),
                opcua::types::LocalizedText::new("", "ResolvedAddress"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19288u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19286u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_320(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11891u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "UnauthorizedRequestCount"),
                opcua::types::LocalizedText::new("", "UnauthorizedRequestCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3200(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19288u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19287u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3202(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17428u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message_full(
                    &opcua::types::Argument {
                        array_dimensions: None,
                        data_type: opcua::types::NodeId::new(0u16, 15480u32),
                        description: Default::default(),
                        name: "Configuration".into(),
                        value_rank: -1i32,
                    },
                    ns_map.namespaces(),
                )
                .expect("Invalid encoding ID"),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17427u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3203(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17456u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message_full(
                    &opcua::types::Argument {
                        array_dimensions: None,
                        data_type: opcua::types::NodeId::new(0u16, 17u32),
                        description: Default::default(),
                        name: "GroupId".into(),
                        value_rank: -1i32,
                    },
                    ns_map.namespaces(),
                )
                .expect("Invalid encoding ID"),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17427u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3205(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17507u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message_full(
                    &opcua::types::Argument {
                        array_dimensions: None,
                        data_type: opcua::types::NodeId::new(0u16, 15520u32),
                        description: Default::default(),
                        name: "Configuration".into(),
                        value_rank: -1i32,
                    },
                    ns_map.namespaces(),
                )
                .expect("Invalid encoding ID"),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17465u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3206(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17508u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message_full(
                    &opcua::types::Argument {
                        array_dimensions: None,
                        data_type: opcua::types::NodeId::new(0u16, 17u32),
                        description: Default::default(),
                        name: "GroupId".into(),
                        value_rank: -1i32,
                    },
                    ns_map.namespaces(),
                )
                .expect("Invalid encoding ID"),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17465u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3208(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14226u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message_full(
                    &opcua::types::Argument {
                        array_dimensions: None,
                        data_type: opcua::types::NodeId::new(0u16, 17u32),
                        description: Default::default(),
                        name: "GroupId".into(),
                        value_rank: -1i32,
                    },
                    ns_map.namespaces(),
                )
                .expect("Invalid encoding ID"),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14225u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_321(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3151u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ReadCount"),
                opcua::types::LocalizedText::new("", "ReadCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3211(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15926u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SecurityMode"),
                opcua::types::LocalizedText::new("", "SecurityMode"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 302u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14232u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3212(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15927u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SecurityGroupId"),
                opcua::types::LocalizedText::new("", "SecurityGroupId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14232u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3213(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15928u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SecurityKeyServices"),
                opcua::types::LocalizedText::new("", "SecurityKeyServices"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 312u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14232u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3214(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17724u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxNetworkMessageSize"),
                opcua::types::LocalizedText::new("", "MaxNetworkMessageSize"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14232u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3215(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17488u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "GroupProperties"),
                opcua::types::LocalizedText::new("", "GroupProperties"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 14533u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14232u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3217(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15266u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "State"),
                opcua::types::LocalizedText::new("", "State"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 14647u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15265u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3219(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17736u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "WriterGroupId"),
                opcua::types::LocalizedText::new("", "WriterGroupId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17725u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_322(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3152u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "HistoryReadCount"),
                opcua::types::LocalizedText::new("", "HistoryReadCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3220(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17737u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "PublishingInterval"),
                opcua::types::LocalizedText::new("", "PublishingInterval"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17725u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3221(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17738u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "KeepAliveTime"),
                opcua::types::LocalizedText::new("", "KeepAliveTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17725u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3222(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17739u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Priority"),
                opcua::types::LocalizedText::new("", "Priority"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 3u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17725u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3223(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17740u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "LocaleIds"),
                opcua::types::LocalizedText::new("", "LocaleIds"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 295u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17725u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3224(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17559u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "HeaderLayoutUri"),
                opcua::types::LocalizedText::new("", "HeaderLayoutUri"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17725u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3228(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17744u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DataSetWriterId"),
                opcua::types::LocalizedText::new("", "DataSetWriterId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17743u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3229(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17745u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DataSetFieldContentMask"),
                opcua::types::LocalizedText::new("", "DataSetFieldContentMask"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 15583u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17743u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_323(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3153u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "WriteCount"),
                opcua::types::LocalizedText::new("", "WriteCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3230(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17490u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DataSetWriterProperties"),
                opcua::types::LocalizedText::new("", "DataSetWriterProperties"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 14533u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17743u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3232(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17750u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "State"),
                opcua::types::LocalizedText::new("", "State"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 14647u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17749u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3234(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17813u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17812u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3235(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17814u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TotalInformation"),
                opcua::types::LocalizedText::new("", "TotalInformation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17815u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17816u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17817u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17812u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3236(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17815u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17814u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3237(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17816u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17814u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3238(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17817u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17814u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3239(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17819u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TotalError"),
                opcua::types::LocalizedText::new("", "TotalError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17820u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17821u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17822u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17812u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_324(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3154u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "HistoryUpdateCount"),
                opcua::types::LocalizedText::new("", "HistoryUpdateCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3240(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17820u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17819u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3241(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17821u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17819u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3242(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17822u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17819u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3244(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17825u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SubError"),
                opcua::types::LocalizedText::new("", "SubError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17812u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3246(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17827u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateError"),
                opcua::types::LocalizedText::new("", "StateError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17828u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17829u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17830u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17826u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3247(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17828u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17827u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3248(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17829u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(1i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17827u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3249(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17830u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17827u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_325(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3155u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CallCount"),
                opcua::types::LocalizedText::new("", "CallCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3250(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17832u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateOperationalByMethod"),
                opcua::types::LocalizedText::new("", "StateOperationalByMethod"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17833u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17834u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17835u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17826u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3251(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17833u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17832u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3252(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17834u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17832u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3253(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17835u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17832u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3254(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17837u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateOperationalByParent"),
                opcua::types::LocalizedText::new("", "StateOperationalByParent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17838u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17839u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17840u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17826u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3255(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17838u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17837u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3256(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17839u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17837u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3257(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17840u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17837u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3258(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17842u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateOperationalFromError"),
                opcua::types::LocalizedText::new("", "StateOperationalFromError"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17843u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17844u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17845u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17826u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3259(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17843u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17842u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_326(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3156u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CreateMonitoredItemsCount"),
                opcua::types::LocalizedText::new("", "CreateMonitoredItemsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3260(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17844u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17842u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3261(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17845u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17842u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3262(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17847u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StatePausedByParent"),
                opcua::types::LocalizedText::new("", "StatePausedByParent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17848u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17849u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17850u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17826u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3263(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17848u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17847u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3264(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17849u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17847u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3265(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17850u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17847u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3266(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17853u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateDisabledByMethod"),
                opcua::types::LocalizedText::new("", "StateDisabledByMethod"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17854u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17855u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17856u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17826u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3267(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17854u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17853u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3268(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17855u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17853u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3269(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17856u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17853u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_327(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3157u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ModifyMonitoredItemsCount"),
                opcua::types::LocalizedText::new("", "ModifyMonitoredItemsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3270(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17859u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SentNetworkMessages"),
                opcua::types::LocalizedText::new("", "SentNetworkMessages"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17864u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17871u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17872u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17826u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3271(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17864u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17859u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3272(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17871u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17859u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3273(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17872u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17859u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3274(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17874u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "FailedTransmissions"),
                opcua::types::LocalizedText::new("", "FailedTransmissions"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17878u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17885u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17892u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17826u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3275(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17878u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17874u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3276(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17885u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(1i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17874u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3277(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17892u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17874u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3278(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17900u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EncryptionErrors"),
                opcua::types::LocalizedText::new("", "EncryptionErrors"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17901u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17902u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17903u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19725u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17826u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3279(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17901u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Active"),
                opcua::types::LocalizedText::new("", "Active"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17900u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_328(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3158u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SetMonitoringModeCount"),
                opcua::types::LocalizedText::new("", "SetMonitoringModeCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3280(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17902u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Classification"),
                opcua::types::LocalizedText::new("", "Classification"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19730u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(1i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17900u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3281(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17903u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(1i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17900u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3283(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17913u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ConfiguredDataSetWriters"),
                opcua::types::LocalizedText::new("", "ConfiguredDataSetWriters"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17920u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17858u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3284(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17920u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17913u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3285(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17927u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OperationalDataSetWriters"),
                opcua::types::LocalizedText::new("", "OperationalDataSetWriters"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17934u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17858u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3286(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17934u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19723u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(0i32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17927u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3288(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17976u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message_full(
                    &opcua::types::Argument {
                        array_dimensions: None,
                        data_type: opcua::types::NodeId::new(0u16, 15597u32),
                        description: Default::default(),
                        name: "Configuration".into(),
                        value_rank: -1i32,
                    },
                    ns_map.namespaces(),
                )
                .expect("Invalid encoding ID"),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17969u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3289(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17987u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message_full(
                    &opcua::types::Argument {
                        array_dimensions: None,
                        data_type: opcua::types::NodeId::new(0u16, 17u32),
                        description: Default::default(),
                        name: "DataSetWriterNodeId".into(),
                        value_rank: -1i32,
                    },
                    ns_map.namespaces(),
                )
                .expect("Invalid encoding ID"),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17969u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_329(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3159u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SetTriggeringCount"),
                opcua::types::LocalizedText::new("", "SetTriggeringCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3291(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17993u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message_full(
                    &opcua::types::Argument {
                        array_dimensions: None,
                        data_type: opcua::types::NodeId::new(0u16, 17u32),
                        description: Default::default(),
                        name: "DataSetWriterNodeId".into(),
                        value_rank: -1i32,
                    },
                    ns_map.namespaces(),
                )
                .expect("Invalid encoding ID"),
            ])),
            1u8,
            1u8,
            Some(vec![1u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17992u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3298(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18077u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "PublisherId"),
                opcua::types::LocalizedText::new("", "PublisherId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 24u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18076u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_3299(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 18078u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "WriterGroupId"),
                opcua::types::LocalizedText::new("", "WriterGroupId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18076u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_330(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3160u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DeleteMonitoredItemsCount"),
                opcua::types::LocalizedText::new("", "DeleteMonitoredItemsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 871u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
