// This file was autogenerated from tools/schema/schemas/1.05/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua { pub use opcua_types as types; pub use opcua_nodes as nodes; }pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_variable_2460 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_variable_2461,
            &make_variable_2463,
            &make_variable_2464,
            &make_variable_2466,
            &make_variable_2467,
            &make_variable_2469,
            &make_variable_247,
            &make_variable_2471,
            &make_variable_2472,
            &make_variable_2475,
            &make_variable_2476,
            &make_variable_2477,
            &make_variable_2478,
            &make_variable_2480,
            &make_variable_2481,
            &make_variable_2483,
            &make_variable_2485,
            &make_variable_2486,
            &make_variable_2488,
            &make_variable_249,
            &make_variable_2490,
            &make_variable_2491,
            &make_variable_2493,
            &make_variable_2494,
            &make_variable_2496,
            &make_variable_2497,
            &make_variable_2499,
            &make_variable_250,
            &make_variable_2500,
            &make_variable_2502,
            &make_variable_2504,
            &make_variable_2505,
            &make_variable_2506,
            &make_variable_2507,
            &make_variable_2508,
            &make_variable_2509,
            &make_variable_251,
            &make_variable_2510,
            &make_variable_2511,
            &make_variable_2512,
            &make_variable_2513,
            &make_variable_2515,
            &make_variable_2516,
            &make_variable_252,
            &make_variable_2520,
            &make_variable_2521,
            &make_variable_2523,
            &make_variable_2527,
            &make_variable_2528,
            &make_variable_253,
            &make_variable_2530,
            &make_variable_2531,
            &make_variable_2534,
            &make_variable_2535,
            &make_variable_2536,
            &make_variable_2537,
            &make_variable_2539,
            &make_variable_254,
            &make_variable_2540,
            &make_variable_2542,
            &make_variable_2545,
            &make_variable_2548,
            &make_variable_255,
            &make_variable_2551,
            &make_variable_2552,
            &make_variable_2553,
            &make_variable_2556,
            &make_variable_2557,
            &make_variable_2558,
            &make_variable_256,
            &make_variable_2560,
            &make_variable_2561,
            &make_variable_2562,
            &make_variable_2563,
            &make_variable_257,
            &make_variable_258,
            &make_variable_259,
            &make_variable_260,
            &make_variable_261,
            &make_variable_2611,
            &make_variable_2615,
            &make_variable_262,
            &make_variable_2624,
            &make_variable_263,
            &make_variable_264,
            &make_variable_2646,
            &make_variable_265,
            &make_variable_2655,
            &make_variable_2657,
            &make_variable_266,
            &make_variable_2660,
            &make_variable_2664,
            &make_variable_2667,
            &make_variable_267,
            &make_variable_268,
            &make_variable_2682,
            &make_variable_2688,
            &make_variable_2689,
            &make_variable_269,
        ]
            .into_iter()
            .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_variable_2460(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14109u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 9u32), description :
                            Default::default(), name : "Position".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14108u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2461(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14110u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "LastUpdateTime"),
                    opcua::types::LocalizedText::new("", "LastUpdateTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14089u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2463(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14112u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "Masks".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14111u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2464(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14113u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14111u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2466(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14115u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14114u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2467(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14116u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 1u32), description :
                            Default::default(), name : "ApplyChangesRequired".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14114u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2469(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14118u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "Certificate".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 1u32), description :
                            Default::default(), name : "IsTrustedCertificate".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14117u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_247(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2028u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SessionSecurityDiagnosticsArray",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "SessionSecurityDiagnosticsArray",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 868u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2243u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2026u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2471(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14120u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "Thumbprint".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 1u32), description :
                            Default::default(), name : "IsTrustedCertificate".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14119u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2472(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14121u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CertificateTypes"),
                    opcua::types::LocalizedText::new("", "CertificateTypes"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14088u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2475(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14124u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Size"),
                    opcua::types::LocalizedText::new("", "Size"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 9u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14123u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2476(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14125u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "Writable"),
                    opcua::types::LocalizedText::new("", "Writable"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14123u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2477(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14126u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "UserWritable"),
                    opcua::types::LocalizedText::new("", "UserWritable"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14123u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2478(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14127u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OpenCount"),
                    opcua::types::LocalizedText::new("", "OpenCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 5u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14123u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2480(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14130u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 3u32), description :
                            Default::default(), name : "Mode".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14129u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2481(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14131u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14129u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2483(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14133u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14132u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2485(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14135u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 6u32), description :
                            Default::default(), name : "Length".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14134u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2486(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14136u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "Data".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14134u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2488(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14138u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "Data".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14137u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_249(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12098u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SessionDiagnostics"),
                    opcua::types::LocalizedText::new("", "SessionDiagnostics"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 865u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12099u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12100u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12101u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12102u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12103u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12104u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12105u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12106u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12107u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12108u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12109u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12110u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12111u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12112u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12113u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12114u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12115u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12116u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12117u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12118u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12119u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12120u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12121u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12122u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12123u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12124u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12125u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12126u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12127u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12128u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12129u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12130u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12131u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12132u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12133u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12134u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12135u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12136u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12137u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12138u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12139u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12140u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12141u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2197u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            78u32), type_id : opcua::types::NodeId::new(0u16, 37u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12097u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2490(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14140u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14139u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2491(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14141u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 9u32), description :
                            Default::default(), name : "Position".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14139u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2493(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14143u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 9u32), description :
                            Default::default(), name : "Position".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14142u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2494(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14144u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "LastUpdateTime"),
                    opcua::types::LocalizedText::new("", "LastUpdateTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14123u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2496(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14146u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "Masks".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14145u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2497(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14147u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14145u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2499(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14149u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "FileHandle".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14148u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_250(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12099u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SessionId"),
                    opcua::types::LocalizedText::new("", "SessionId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2500(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14150u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 1u32), description :
                            Default::default(), name : "ApplyChangesRequired".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14148u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2502(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14152u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "Certificate".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 1u32), description :
                            Default::default(), name : "IsTrustedCertificate".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14151u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2504(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14154u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "Thumbprint".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 1u32), description :
                            Default::default(), name : "IsTrustedCertificate".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14153u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2505(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14155u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CertificateTypes"),
                    opcua::types::LocalizedText::new("", "CertificateTypes"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 17u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14122u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2506(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25706u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ApplicationUri"),
                    opcua::types::LocalizedText::new("", "ApplicationUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 23751u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12637u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2507(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25725u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ProductUri"),
                    opcua::types::LocalizedText::new("", "ProductUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 23751u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12637u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2508(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25707u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ApplicationType"),
                    opcua::types::LocalizedText::new("", "ApplicationType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 307u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12637u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2509(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12710u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServerCapabilities"),
                    opcua::types::LocalizedText::new("", "ServerCapabilities"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12637u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_251(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12100u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SessionName"),
                    opcua::types::LocalizedText::new("", "SessionName"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2510(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12639u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "SupportedPrivateKeyFormats"),
                    opcua::types::LocalizedText::new("", "SupportedPrivateKeyFormats"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12637u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2511(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12640u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxTrustListSize"),
                    opcua::types::LocalizedText::new("", "MaxTrustListSize"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12637u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2512(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12641u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MulticastDnsEnabled"),
                    opcua::types::LocalizedText::new("", "MulticastDnsEnabled"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12637u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2513(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23597u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "HasSecureElement"),
                    opcua::types::LocalizedText::new("", "HasSecureElement"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12637u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2515(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 13738u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 17u32), description :
                            Default::default(), name : "CertificateGroupId".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 17u32), description :
                            Default::default(), name : "CertificateTypeId".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "Certificate".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions :
                            Some(vec![0u32,]), data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "IssuerCertificates".into(),
                            value_rank : 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "PrivateKeyFormat".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "PrivateKey".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![6u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 13737u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2516(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 13739u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 1u32), description :
                            Default::default(), name : "ApplyChangesRequired".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 13737u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_252(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12101u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientDescription"),
                    opcua::types::LocalizedText::new("", "ClientDescription"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 308u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2520(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12738u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 17u32), description :
                            Default::default(), name : "CertificateGroupId".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 17u32), description :
                            Default::default(), name : "CertificateTypeId".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "SubjectName".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 1u32), description :
                            Default::default(), name : "RegeneratePrivateKey".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "Nonce".into(), value_rank : -
                            1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![5u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12737u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2521(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12739u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "CertificateRequest".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12737u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2523(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12778u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions :
                            Some(vec![0u32,]), data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "Certificates".into(), value_rank
                            : 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12777u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2527(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17512u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ResourceUri"),
                    opcua::types::LocalizedText::new("", "ResourceUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17511u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2528(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17513u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ProfileUri"),
                    opcua::types::LocalizedText::new("", "ProfileUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17511u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_253(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12102u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServerUri"),
                    opcua::types::LocalizedText::new("", "ServerUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2530(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17523u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "Name".into(), value_rank : -
                            1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "ResourceUri".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "ProfileUri".into(), value_rank :
                            - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions :
                            Some(vec![0u32,]), data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "EndpointUrls".into(), value_rank
                            : 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![4u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17522u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2531(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17524u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 17u32), description :
                            Default::default(), name : "CredentialNodeId".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17522u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2534(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18069u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ResourceUri"),
                    opcua::types::LocalizedText::new("", "ResourceUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18001u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2535(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18165u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ProfileUri"),
                    opcua::types::LocalizedText::new("", "ProfileUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18001u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2536(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18004u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EndpointUrls"),
                    opcua::types::LocalizedText::new("", "EndpointUrls"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18001u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2537(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18005u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServiceStatus"),
                    opcua::types::LocalizedText::new("", "ServiceStatus"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 19u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 80u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18001u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2539(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17535u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "CredentialId".into(), value_rank
                            : - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "RequestedSecurityPolicyUri"
                            .into(), value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17534u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_254(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12103u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EndpointUrl"),
                    opcua::types::LocalizedText::new("", "EndpointUrl"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2540(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17536u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "PublicKey".into(), value_rank : -
                            1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "RevisedSecurityPolicyUri".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![2u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17534u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2542(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18007u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "CredentialId".into(), value_rank
                            : - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "CredentialSecret".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "CertificateThumbprint".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "SecurityPolicyUri".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![4u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18006u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2545(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18028u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ResourceUri"),
                    opcua::types::LocalizedText::new("", "ResourceUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18011u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2548(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18064u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ResourceUri"),
                    opcua::types::LocalizedText::new("", "ResourceUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18047u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_255(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12104u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "LocaleIds"),
                    opcua::types::LocalizedText::new("", "LocaleIds"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 295u32),
                false,
                1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2551(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23558u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServiceUri"),
                    opcua::types::LocalizedText::new("", "ServiceUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23557u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2552(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23559u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServiceCertificate"),
                    opcua::types::LocalizedText::new("", "ServiceCertificate"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 15u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23557u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2553(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23560u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "IssuerEndpointUrl"),
                    opcua::types::LocalizedText::new("", "IssuerEndpointUrl"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23557u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2556(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18072u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServiceUri"),
                    opcua::types::LocalizedText::new("", "ServiceUri"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17852u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2557(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17860u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ServiceCertificate"),
                    opcua::types::LocalizedText::new("", "ServiceCertificate"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 15u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17852u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2558(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18073u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "IssuerEndpointUrl"),
                    opcua::types::LocalizedText::new("", "IssuerEndpointUrl"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17852u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_256(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12105u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ActualSessionTimeout"),
                    opcua::types::LocalizedText::new("", "ActualSessionTimeout"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 290u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2560(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11188u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TreatUncertainAsBad"),
                    opcua::types::LocalizedText::new("", "TreatUncertainAsBad"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11187u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2561(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11189u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "PercentDataBad"),
                    opcua::types::LocalizedText::new("", "PercentDataBad"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 3u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11187u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2562(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11190u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "PercentDataGood"),
                    opcua::types::LocalizedText::new("", "PercentDataGood"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 3u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11187u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2563(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11191u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "UseSlopedExtrapolation"),
                    opcua::types::LocalizedText::new("", "UseSlopedExtrapolation"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11187u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_257(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12106u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "MaxResponseMessageSize"),
                    opcua::types::LocalizedText::new("", "MaxResponseMessageSize"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_258(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12107u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientConnectionTime"),
                    opcua::types::LocalizedText::new("", "ClientConnectionTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_259(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12108u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ClientLastContactTime"),
                    opcua::types::LocalizedText::new("", "ClientLastContactTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 294u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_260(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12109u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CurrentSubscriptionsCount"),
                    opcua::types::LocalizedText::new("", "CurrentSubscriptionsCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_261(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12110u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CurrentMonitoredItemsCount"),
                    opcua::types::LocalizedText::new("", "CurrentMonitoredItemsCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2611(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14648u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EnumStrings"),
                    opcua::types::LocalizedText::new("", "EnumStrings"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::LocalizedText::new("", "Disabled"),
                            opcua::types::LocalizedText::new("", "Paused"),
                            opcua::types::LocalizedText::new("", "Operational"),
                            opcua::types::LocalizedText::new("", "Error"),
                            opcua::types::LocalizedText::new("", "PreOperational"),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![5u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 14647u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2615(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15577u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OptionSetValues"),
                    opcua::types::LocalizedText::new("", "OptionSetValues"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![opcua::types::LocalizedText::new("", "PromotedField"),],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![1u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15904u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_262(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12111u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "CurrentPublishRequestsInQueue",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "CurrentPublishRequestsInQueue",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2624(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15584u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OptionSetValues"),
                    opcua::types::LocalizedText::new("", "OptionSetValues"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::LocalizedText::new("", "StatusCode"),
                            opcua::types::LocalizedText::new("", "SourceTimestamp"),
                            opcua::types::LocalizedText::new("", "ServerTimestamp"),
                            opcua::types::LocalizedText::new("", "SourcePicoSeconds"),
                            opcua::types::LocalizedText::new("", "ServerPicoSeconds"),
                            opcua::types::LocalizedText::new("", "RawData"),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![6u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15583u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_263(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12112u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "TotalRequestCount"),
                    opcua::types::LocalizedText::new("", "TotalRequestCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_264(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12113u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "UnauthorizedRequestCount"),
                    opcua::types::LocalizedText::new("", "UnauthorizedRequestCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2646(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15875u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EnumStrings"),
                    opcua::types::LocalizedText::new("", "EnumStrings"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::LocalizedText::new("", "Disabled"),
                            opcua::types::LocalizedText::new("", "LastUsableValue"),
                            opcua::types::LocalizedText::new("", "OverrideValue"),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![3u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15874u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_265(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12114u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "ReadCount"),
                    opcua::types::LocalizedText::new("", "ReadCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2655(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15641u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EnumStrings"),
                    opcua::types::LocalizedText::new("", "EnumStrings"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::LocalizedText::new("", "Undefined"),
                            opcua::types::LocalizedText::new("", "AscendingWriterId"),
                            opcua::types::LocalizedText::new("",
                            "AscendingWriterIdSingle"),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![3u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 20408u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2657(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15643u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OptionSetValues"),
                    opcua::types::LocalizedText::new("", "OptionSetValues"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::LocalizedText::new("", "PublisherId"),
                            opcua::types::LocalizedText::new("", "GroupHeader"),
                            opcua::types::LocalizedText::new("", "WriterGroupId"),
                            opcua::types::LocalizedText::new("", "GroupVersion"),
                            opcua::types::LocalizedText::new("", "NetworkMessageNumber"),
                            opcua::types::LocalizedText::new("", "SequenceNumber"),
                            opcua::types::LocalizedText::new("", "PayloadHeader"),
                            opcua::types::LocalizedText::new("", "Timestamp"),
                            opcua::types::LocalizedText::new("", "PicoSeconds"),
                            opcua::types::LocalizedText::new("", "DataSetClassId"),
                            opcua::types::LocalizedText::new("", "PromotedFields"),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![11u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15642u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_266(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12115u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "HistoryReadCount"),
                    opcua::types::LocalizedText::new("", "HistoryReadCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2660(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15647u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OptionSetValues"),
                    opcua::types::LocalizedText::new("", "OptionSetValues"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::LocalizedText::new("", "Timestamp"),
                            opcua::types::LocalizedText::new("", "PicoSeconds"),
                            opcua::types::LocalizedText::new("", "Status"),
                            opcua::types::LocalizedText::new("", "MajorVersion"),
                            opcua::types::LocalizedText::new("", "MinorVersion"),
                            opcua::types::LocalizedText::new("", "SequenceNumber"),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![6u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15646u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2664(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15655u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OptionSetValues"),
                    opcua::types::LocalizedText::new("", "OptionSetValues"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::LocalizedText::new("", "NetworkMessageHeader"),
                            opcua::types::LocalizedText::new("", "DataSetMessageHeader"),
                            opcua::types::LocalizedText::new("", "SingleDataSetMessage"),
                            opcua::types::LocalizedText::new("", "PublisherId"),
                            opcua::types::LocalizedText::new("", "DataSetClassId"),
                            opcua::types::LocalizedText::new("", "ReplyTo"),
                            opcua::types::LocalizedText::new("", "WriterGroupName"),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![7u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15654u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2667(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15659u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OptionSetValues"),
                    opcua::types::LocalizedText::new("", "OptionSetValues"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::LocalizedText::new("", "DataSetWriterId"),
                            opcua::types::LocalizedText::new("", "MetaDataVersion"),
                            opcua::types::LocalizedText::new("", "SequenceNumber"),
                            opcua::types::LocalizedText::new("", "Timestamp"),
                            opcua::types::LocalizedText::new("", "Status"),
                            opcua::types::LocalizedText::new("", "MessageType"),
                            opcua::types::LocalizedText::new("", "DataSetWriterName"),
                            opcua::types::LocalizedText::new("",
                            "ReversibleFieldEncoding"),
                            opcua::types::LocalizedText::new("", "PublisherId"),
                            opcua::types::LocalizedText::new("", "WriterGroupName"),
                            opcua::types::LocalizedText::new("", "MinorVersion"),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![11u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15658u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_267(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12116u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "WriteCount"),
                    opcua::types::LocalizedText::new("", "WriteCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_268(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12117u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "HistoryUpdateCount"),
                    opcua::types::LocalizedText::new("", "HistoryUpdateCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2682(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15009u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "EnumStrings"),
                    opcua::types::LocalizedText::new("", "EnumStrings"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::LocalizedText::new("", "NotSpecified"),
                            opcua::types::LocalizedText::new("", "BestEffort"),
                            opcua::types::LocalizedText::new("", "AtLeastOnce"),
                            opcua::types::LocalizedText::new("", "AtMostOnce"),
                            opcua::types::LocalizedText::new("", "ExactlyOnce"),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![5u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15008u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2688(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15908u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "SecurityGroupId".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 288u32), description :
                            Default::default(), name : "StartingTokenId".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 7u32), description :
                            Default::default(), name : "RequestedKeyCount".into(),
                            value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![3u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15907u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_2689(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15909u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                    opcua::types::LocalizedText::new("", "OutputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 12u32), description :
                            Default::default(), name : "SecurityPolicyUri".into(),
                            value_rank : - 1i32, }),
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 288u32), description :
                            Default::default(), name : "FirstTokenId".into(), value_rank
                            : - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions :
                            Some(vec![0u32,]), data_type :
                            opcua::types::NodeId::new(0u16, 15u32), description :
                            Default::default(), name : "Keys".into(), value_rank : 1i32,
                            }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 290u32), description :
                            Default::default(), name : "TimeToNextKey".into(), value_rank
                            : - 1i32, }), opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 290u32), description :
                            Default::default(), name : "KeyLifetime".into(), value_rank :
                            - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![5u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            68u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15907u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_269(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Variable::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12118u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "CallCount"),
                    opcua::types::LocalizedText::new("", "CallCount"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 871u32),
                false,
                -1i32,
                opcua::types::DataValue::null(),
                1u8,
                1u8,
                None,
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 40u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12098u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            false, }
        ],
    }
}
