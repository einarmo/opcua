// This file was autogenerated from tools/schema/schemas/1.0.4/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use opcua_nodes as nodes;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_object_type_2880 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_object_type_294,
            &make_object_type_2946,
            &make_object_type_2947,
            &make_object_type_2948,
            &make_object_type_2949,
            &make_object_type_2957,
            &make_object_type_2958,
            &make_object_type_2962,
            &make_object_type_3009,
            &make_object_type_3019,
            &make_object_type_3023,
            &make_object_type_3046,
            &make_object_type_3065,
            &make_object_type_3080,
            &make_object_type_3103,
            &make_object_type_3107,
            &make_object_type_3110,
            &make_object_type_3112,
            &make_object_type_3118,
            &make_object_type_3123,
            &make_object_type_3133,
            &make_object_type_3135,
            &make_object_type_3137,
            &make_object_type_3140,
            &make_object_type_3144,
            &make_object_type_3147,
            &make_object_type_3150,
            &make_object_type_3155,
            &make_object_type_3162,
            &make_object_type_3168,
            &make_object_type_3171,
            &make_object_type_3173,
            &make_object_type_3174,
            &make_object_type_350,
            &make_object_type_351,
            &make_object_type_353,
            &make_object_type_356,
            &make_object_type_358,
            &make_object_type_360,
            &make_object_type_373,
            &make_object_type_394,
            &make_object_type_396,
            &make_object_type_427,
            &make_object_type_436,
            &make_object_type_446,
            &make_object_type_452,
            &make_object_type_454,
            &make_object_type_456,
            &make_object_type_463,
            &make_object_type_465,
            &make_object_type_470,
            &make_object_type_472,
            &make_object_type_476,
            &make_object_type_478,
            &make_object_type_480,
            &make_object_type_483,
            &make_object_type_484,
            &make_object_type_485,
            &make_object_type_486,
            &make_object_type_487,
            &make_object_type_488,
            &make_object_type_489,
            &make_object_type_491,
            &make_object_type_493,
            &make_object_type_495,
            &make_object_type_497,
            &make_object_type_498,
            &make_object_type_503,
            &make_object_type_505,
            &make_object_type_508,
            &make_object_type_509,
            &make_object_type_510,
            &make_object_type_512,
            &make_object_type_513,
            &make_object_type_515,
            &make_object_type_517,
            &make_object_type_518,
            &make_object_type_521,
            &make_object_type_57,
            &make_object_type_58,
            &make_object_type_69,
            &make_object_type_70,
            &make_object_type_73,
            &make_object_type_866,
            &make_object_type_882,
            &make_object_type_893,
            &make_object_type_895,
            &make_object_type_896,
            &make_object_type_898,
            &make_object_type_949,
            &make_object_type_956,
            &make_object_type_961,
            &make_reference_type_1242,
            &make_reference_type_1247,
            &make_reference_type_1248,
            &make_reference_type_1306,
            &make_reference_type_1307,
            &make_reference_type_1308,
            &make_reference_type_1309,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_object_type_2880(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15306u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DataSetReaderType"),
                opcua::types::LocalizedText::new("", "DataSetReaderType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21097u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21098u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21099u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21100u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21101u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21102u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17563u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17564u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15932u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15933u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15934u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17494u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15311u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21103u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15307u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19609u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15316u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17386u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17389u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_294(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2029u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "SessionDiagnosticsObjectType"),
                opcua::types::LocalizedText::new("", "SessionDiagnosticsObjectType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2031u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2032u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_2946(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15319u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DataSetReaderTransportType"),
                opcua::types::LocalizedText::new("", "DataSetReaderTransportType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_2947(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21104u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DataSetReaderMessageType"),
                opcua::types::LocalizedText::new("", "DataSetReaderMessageType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_2948(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15108u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "SubscribedDataSetType"),
                opcua::types::LocalizedText::new("", "SubscribedDataSetType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_2949(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15111u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "TargetVariablesType"),
                opcua::types::LocalizedText::new("", "TargetVariablesType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15114u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15115u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15118u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15108u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_2957(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15127u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "SubscribedDataSetMirrorType"),
                opcua::types::LocalizedText::new("", "SubscribedDataSetMirrorType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 15108u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_2958(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 14643u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubStatusType"),
                opcua::types::LocalizedText::new("", "PubSubStatusType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14644u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14645u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 14646u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_2962(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19677u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubDiagnosticsType"),
                opcua::types::LocalizedText::new("", "PubSubDiagnosticsType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19678u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19679u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19684u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19689u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19690u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19691u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19722u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3009(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19732u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubDiagnosticsRootType"),
                opcua::types::LocalizedText::new("", "PubSubDiagnosticsRootType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19777u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19677u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3019(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19786u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubDiagnosticsConnectionType"),
                opcua::types::LocalizedText::new("", "PubSubDiagnosticsConnectionType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19831u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19677u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3023(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19834u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubDiagnosticsWriterGroupType"),
                opcua::types::LocalizedText::new("", "PubSubDiagnosticsWriterGroupType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19848u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19879u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19677u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3046(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19903u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubDiagnosticsReaderGroupType"),
                opcua::types::LocalizedText::new("", "PubSubDiagnosticsReaderGroupType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19917u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19948u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19677u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3065(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 19968u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubDiagnosticsDataSetWriterType"),
                opcua::types::LocalizedText::new("", "PubSubDiagnosticsDataSetWriterType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19982u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 20013u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19677u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3080(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 20027u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubDiagnosticsDataSetReaderType"),
                opcua::types::LocalizedText::new("", "PubSubDiagnosticsDataSetReaderType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 20041u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 20072u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 19677u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3103(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15535u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubStatusEventType"),
                opcua::types::LocalizedText::new("", "PubSubStatusEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15545u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15546u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15547u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2130u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3107(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15548u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubTransportLimitsExceedEventType"),
                opcua::types::LocalizedText::new("", "PubSubTransportLimitsExceedEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15561u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15562u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15535u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3110(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15563u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "PubSubCommunicationFailureEventType"),
                opcua::types::LocalizedText::new("", "PubSubCommunicationFailureEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15576u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15535u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3112(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21105u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "UadpWriterGroupMessageType"),
                opcua::types::LocalizedText::new("", "UadpWriterGroupMessageType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21106u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21107u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21108u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21109u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21110u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17998u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3118(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21111u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "UadpDataSetWriterMessageType"),
                opcua::types::LocalizedText::new("", "UadpDataSetWriterMessageType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21112u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21113u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21114u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21115u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21096u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3123(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21116u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "UadpDataSetReaderMessageType"),
                opcua::types::LocalizedText::new("", "UadpDataSetReaderMessageType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21117u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21119u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17477u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21120u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21121u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21122u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21123u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21124u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21125u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21104u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3133(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21126u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "JsonWriterGroupMessageType"),
                opcua::types::LocalizedText::new("", "JsonWriterGroupMessageType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21127u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17998u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3135(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21128u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "JsonDataSetWriterMessageType"),
                opcua::types::LocalizedText::new("", "JsonDataSetWriterMessageType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21129u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21096u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3137(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21130u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "JsonDataSetReaderMessageType"),
                opcua::types::LocalizedText::new("", "JsonDataSetReaderMessageType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21131u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21132u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21104u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3140(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15064u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DatagramConnectionTransportType"),
                opcua::types::LocalizedText::new("", "DatagramConnectionTransportType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15072u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17721u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3144(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21133u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DatagramWriterGroupTransportType"),
                opcua::types::LocalizedText::new("", "DatagramWriterGroupTransportType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21134u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21135u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17997u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3147(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15155u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "BrokerConnectionTransportType"),
                opcua::types::LocalizedText::new("", "BrokerConnectionTransportType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15156u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15178u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17721u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3150(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21136u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "BrokerWriterGroupTransportType"),
                opcua::types::LocalizedText::new("", "BrokerWriterGroupTransportType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21137u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15246u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15247u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15249u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17997u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3155(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21138u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "BrokerDataSetWriterTransportType"),
                opcua::types::LocalizedText::new("", "BrokerDataSetWriterTransportType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21139u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21140u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15250u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15251u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15330u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21141u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15305u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3162(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21142u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "BrokerDataSetReaderTransportType"),
                opcua::types::LocalizedText::new("", "BrokerDataSetReaderTransportType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21143u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15334u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15419u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15420u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21144u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15319u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3168(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21145u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "NetworkAddressType"),
                opcua::types::LocalizedText::new("", "NetworkAddressType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21146u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3171(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 21147u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "NetworkAddressUrlType"),
                opcua::types::LocalizedText::new("", "NetworkAddressUrlType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21149u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 21145u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_3173(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23455u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AliasNameType"),
                opcua::types::LocalizedText::new("", "AliasNameType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_3174(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 23456u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AliasNameCategoryType"),
                opcua::types::LocalizedText::new("", "AliasNameCategoryType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23457u32),
                type_id: opcua::types::NodeId::new(0u16, 35u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23458u32),
                type_id: opcua::types::NodeId::new(0u16, 35u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 23462u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_350(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2033u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "VendorServerInfoType"),
                opcua::types::LocalizedText::new("", "VendorServerInfoType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_351(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2034u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "ServerRedundancyType"),
                opcua::types::LocalizedText::new("", "ServerRedundancyType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2035u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_353(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2036u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "TransparentRedundancyType"),
                opcua::types::LocalizedText::new("", "TransparentRedundancyType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2037u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2038u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2034u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_356(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2039u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "NonTransparentRedundancyType"),
                opcua::types::LocalizedText::new("", "NonTransparentRedundancyType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2040u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2034u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_358(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11945u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "NonTransparentNetworkRedundancyType"),
                opcua::types::LocalizedText::new("", "NonTransparentNetworkRedundancyType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11948u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2039u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_360(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11564u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "OperationLimitsType"),
                opcua::types::LocalizedText::new("", "OperationLimitsType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11565u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12161u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12162u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11567u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12163u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12164u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11569u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11570u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11571u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11572u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11573u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11574u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_373(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11575u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "FileType"),
                opcua::types::LocalizedText::new("", "FileType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11576u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12686u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12687u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11579u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13341u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11580u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11583u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11585u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11588u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11590u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11593u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_394(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11595u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AddressSpaceFileType"),
                opcua::types::LocalizedText::new("", "AddressSpaceFileType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11615u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11575u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_396(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11616u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "NamespaceMetadataType"),
                opcua::types::LocalizedText::new("", "NamespaceMetadataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11617u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11618u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11619u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11620u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11621u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11622u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11623u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11624u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16137u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16138u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16139u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_427(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11645u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "NamespacesType"),
                opcua::types::LocalizedText::new("", "NamespacesType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11646u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_436(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2041u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "BaseEventType"),
                opcua::types::LocalizedText::new("", "BaseEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2042u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2043u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2044u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2045u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2046u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2047u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3190u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2050u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2051u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_446(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2052u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditEventType"),
                opcua::types::LocalizedText::new("", "AuditEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2053u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2054u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2055u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2056u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2057u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2041u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_452(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2058u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditSecurityEventType"),
                opcua::types::LocalizedText::new("", "AuditSecurityEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17615u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2052u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_454(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2059u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditChannelEventType"),
                opcua::types::LocalizedText::new("", "AuditChannelEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2745u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2058u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_456(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2060u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditOpenSecureChannelEventType"),
                opcua::types::LocalizedText::new("", "AuditOpenSecureChannelEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2061u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2746u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2062u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2063u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2065u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2066u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2059u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_463(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2069u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditSessionEventType"),
                opcua::types::LocalizedText::new("", "AuditSessionEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2070u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2058u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_465(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2071u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditCreateSessionEventType"),
                opcua::types::LocalizedText::new("", "AuditCreateSessionEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2072u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2073u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2747u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2074u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2069u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_470(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2748u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditUrlMismatchEventType"),
                opcua::types::LocalizedText::new("", "AuditUrlMismatchEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2749u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2071u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_472(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2075u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditActivateSessionEventType"),
                opcua::types::LocalizedText::new("", "AuditActivateSessionEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2076u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2077u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11485u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2069u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_476(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2078u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditCancelEventType"),
                opcua::types::LocalizedText::new("", "AuditCancelEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2079u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2069u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_478(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2080u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditCertificateEventType"),
                opcua::types::LocalizedText::new("", "AuditCertificateEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2081u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2058u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_480(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2082u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditCertificateDataMismatchEventType"),
                opcua::types::LocalizedText::new("", "AuditCertificateDataMismatchEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2083u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2084u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2080u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_483(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2085u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditCertificateExpiredEventType"),
                opcua::types::LocalizedText::new("", "AuditCertificateExpiredEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2080u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_484(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2086u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditCertificateInvalidEventType"),
                opcua::types::LocalizedText::new("", "AuditCertificateInvalidEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2080u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_485(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2087u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditCertificateUntrustedEventType"),
                opcua::types::LocalizedText::new("", "AuditCertificateUntrustedEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2080u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_486(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2088u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditCertificateRevokedEventType"),
                opcua::types::LocalizedText::new("", "AuditCertificateRevokedEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2080u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_487(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2089u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditCertificateMismatchEventType"),
                opcua::types::LocalizedText::new("", "AuditCertificateMismatchEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2080u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_488(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2090u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditNodeManagementEventType"),
                opcua::types::LocalizedText::new("", "AuditNodeManagementEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2052u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_489(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2091u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditAddNodesEventType"),
                opcua::types::LocalizedText::new("", "AuditAddNodesEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2092u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2090u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_491(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2093u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditDeleteNodesEventType"),
                opcua::types::LocalizedText::new("", "AuditDeleteNodesEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2094u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2090u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_493(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2095u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditAddReferencesEventType"),
                opcua::types::LocalizedText::new("", "AuditAddReferencesEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2096u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2090u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_495(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2097u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditDeleteReferencesEventType"),
                opcua::types::LocalizedText::new("", "AuditDeleteReferencesEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2098u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2090u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_497(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2099u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditUpdateEventType"),
                opcua::types::LocalizedText::new("", "AuditUpdateEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2052u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_498(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2100u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditWriteUpdateEventType"),
                opcua::types::LocalizedText::new("", "AuditWriteUpdateEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2750u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2101u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2102u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2103u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2099u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_503(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2104u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditHistoryUpdateEventType"),
                opcua::types::LocalizedText::new("", "AuditHistoryUpdateEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2751u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2099u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_505(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2127u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditUpdateMethodEventType"),
                opcua::types::LocalizedText::new("", "AuditUpdateMethodEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2128u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2129u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2052u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_508(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2130u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "SystemEventType"),
                opcua::types::LocalizedText::new("", "SystemEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2041u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_509(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2131u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DeviceFailureEventType"),
                opcua::types::LocalizedText::new("", "DeviceFailureEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2130u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_510(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11446u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "SystemStatusChangeEventType"),
                opcua::types::LocalizedText::new("", "SystemStatusChangeEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11696u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2130u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_512(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2132u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "BaseModelChangeEventType"),
                opcua::types::LocalizedText::new("", "BaseModelChangeEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2041u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_513(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2133u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "GeneralModelChangeEventType"),
                opcua::types::LocalizedText::new("", "GeneralModelChangeEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2134u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2132u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_515(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2738u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "SemanticChangeEventType"),
                opcua::types::LocalizedText::new("", "SemanticChangeEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2739u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2041u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_517(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 3035u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "EventQueueOverflowEventType"),
                opcua::types::LocalizedText::new("", "EventQueueOverflowEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2041u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_518(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 11436u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "ProgressEventType"),
                opcua::types::LocalizedText::new("", "ProgressEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12502u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12503u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2041u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_521(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2340u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AggregateFunctionType"),
                opcua::types::LocalizedText::new("", "AggregateFunctionType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_57(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 58u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "BaseObjectType"),
                opcua::types::LocalizedText::new("", "BaseObjectType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![],
    }
}
#[allow(unused)]
fn make_object_type_58(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 61u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "FolderType"),
                opcua::types::LocalizedText::new("", "FolderType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_69(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 75u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DataTypeSystemType"),
                opcua::types::LocalizedText::new("", "DataTypeSystemType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_70(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 76u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "DataTypeEncodingType"),
                opcua::types::LocalizedText::new("", "DataTypeEncodingType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_73(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 77u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "ModellingRuleType"),
                opcua::types::LocalizedText::new("", "ModellingRuleType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 111u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_866(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2299u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "StateMachineType"),
                opcua::types::LocalizedText::new("", "StateMachineType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2769u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2770u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_882(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2771u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "FiniteStateMachineType"),
                opcua::types::LocalizedText::new("", "FiniteStateMachineType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2772u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2773u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17635u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17636u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2299u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_893(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2307u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "StateType"),
                opcua::types::LocalizedText::new("", "StateType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2308u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_895(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2309u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "InitialStateType"),
                opcua::types::LocalizedText::new("", "InitialStateType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2307u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_896(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2310u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "TransitionType"),
                opcua::types::LocalizedText::new("", "TransitionType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2312u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_898(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 15109u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "ChoiceStateType"),
                opcua::types::LocalizedText::new("", "ChoiceStateType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 2307u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_949(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2311u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "TransitionEventType"),
                opcua::types::LocalizedText::new("", "TransitionEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2774u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2775u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2776u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2041u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_956(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 2315u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "AuditUpdateStateEventType"),
                opcua::types::LocalizedText::new("", "AuditUpdateStateEventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2777u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2778u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2127u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_961(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 13353u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(0u16, "FileDirectoryType"),
                opcua::types::LocalizedText::new("", "FileDirectoryType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13354u32),
                type_id: opcua::types::NodeId::new(0u16, 35u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13366u32),
                type_id: opcua::types::NodeId::new(0u16, 35u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13387u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13390u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13393u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13395u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1242(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17597u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasDictionaryEntry"),
                opcua::types::LocalizedText::new("", "HasDictionaryEntry"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "DictionaryEntryOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1247(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17603u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasInterface"),
                opcua::types::LocalizedText::new("", "HasInterface"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "InterfaceOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1248(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 17604u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasAddIn"),
                opcua::types::LocalizedText::new("", "HasAddIn"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "AddInOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1306(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9004u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasTrueSubState"),
                opcua::types::LocalizedText::new("", "HasTrueSubState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsTrueSubStateOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1307(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 9005u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasFalseSubState"),
                opcua::types::LocalizedText::new("", "HasFalseSubState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsFalseSubStateOf")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1308(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16361u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasAlarmSuppressionGroup"),
                opcua::types::LocalizedText::new("", "HasAlarmSuppressionGroup"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "IsAlarmSuppressionGroupOf",
            )),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1309(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(0u16, 16362u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "AlarmGroupMember"),
                opcua::types::LocalizedText::new("", "AlarmGroupMember"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MemberOfAlarmGroup")),
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 35u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
