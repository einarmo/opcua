// This file was autogenerated from tools/schema/schemas/1.05/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua { pub use opcua_types as types; pub use opcua_nodes as nodes; }pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_object_type_3945 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_object_type_3948,
            &make_object_type_3950,
            &make_object_type_3952,
            &make_object_type_3955,
            &make_object_type_3958,
            &make_object_type_3987,
            &make_object_type_3994,
            &make_object_type_413,
            &make_object_type_415,
            &make_object_type_448,
            &make_object_type_457,
            &make_object_type_471,
            &make_object_type_477,
            &make_object_type_479,
            &make_object_type_481,
            &make_object_type_489,
            &make_object_type_491,
            &make_object_type_496,
            &make_object_type_498,
            &make_object_type_502,
            &make_object_type_504,
            &make_object_type_506,
            &make_object_type_509,
            &make_object_type_510,
            &make_object_type_511,
            &make_object_type_512,
            &make_object_type_513,
            &make_object_type_514,
            &make_object_type_515,
            &make_object_type_517,
            &make_object_type_519,
            &make_object_type_521,
            &make_object_type_523,
            &make_object_type_524,
            &make_object_type_529,
            &make_object_type_531,
            &make_object_type_534,
            &make_object_type_535,
            &make_object_type_536,
            &make_object_type_538,
            &make_object_type_539,
            &make_object_type_541,
            &make_object_type_543,
            &make_object_type_544,
            &make_object_type_547,
            &make_object_type_549,
            &make_object_type_555,
            &make_object_type_60,
            &make_object_type_61,
            &make_object_type_72,
            &make_object_type_73,
            &make_object_type_76,
            &make_object_type_914,
            &make_object_type_930,
            &make_object_type_941,
            &make_object_type_943,
            &make_object_type_944,
            &make_object_type_946,
            &make_reference_type_1360,
            &make_reference_type_1365,
            &make_reference_type_1366,
            &make_reference_type_1457,
            &make_reference_type_1458,
            &make_reference_type_1467,
            &make_reference_type_1468,
            &make_reference_type_1469,
            &make_reference_type_1470,
            &make_reference_type_1471,
            &make_reference_type_1806,
            &make_reference_type_1807,
            &make_reference_type_1808,
            &make_reference_type_1809,
            &make_reference_type_1810,
            &make_reference_type_1957,
            &make_reference_type_1958,
            &make_reference_type_2743,
            &make_reference_type_3037,
            &make_reference_type_3073,
            &make_reference_type_3292,
            &make_reference_type_3293,
            &make_reference_type_33,
            &make_reference_type_3363,
            &make_reference_type_3364,
            &make_reference_type_34,
            &make_reference_type_35,
            &make_reference_type_36,
            &make_reference_type_37,
            &make_reference_type_3791,
            &make_reference_type_38,
            &make_reference_type_39,
            &make_reference_type_40,
            &make_reference_type_4000,
            &make_reference_type_4001,
            &make_reference_type_4002,
            &make_reference_type_4003,
            &make_reference_type_4004,
            &make_reference_type_4005,
            &make_reference_type_4006,
            &make_reference_type_4007,
        ]
            .into_iter()
            .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_object_type_3945(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24188u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "IIeeeTsnInterfaceConfigurationType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "IIeeeTsnInterfaceConfigurationType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24189u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24190u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17602u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_3948(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24191u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "IIeeeTsnInterfaceConfigurationTalkerType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "IIeeeTsnInterfaceConfigurationTalkerType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24194u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24188u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_3950(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24195u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "IIeeeTsnInterfaceConfigurationListenerType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "IIeeeTsnInterfaceConfigurationListenerType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24198u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24188u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_3952(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24199u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "IIeeeTsnMacAddressType"),
                    opcua::types::LocalizedText::new("", "IIeeeTsnMacAddressType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24200u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24201u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17602u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_3955(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24202u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "IIeeeTsnVlanTagType"),
                    opcua::types::LocalizedText::new("", "IIeeeTsnVlanTagType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24203u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24204u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17602u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_3958(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24205u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "IPriorityMappingEntryType"),
                    opcua::types::LocalizedText::new("", "IPriorityMappingEntryType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24206u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24207u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24208u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24209u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17602u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_3987(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25221u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "IetfBaseNetworkInterfaceType",
                    ),
                    opcua::types::LocalizedText::new("", "IetfBaseNetworkInterfaceType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25222u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25223u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25224u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25225u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25226u32), type_id : opcua::types::NodeId::new(0u16, 25238u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 24148u32), type_id :
            opcua::types::NodeId::new(0u16, 17603u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            58u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_object_type_3994(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25227u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "PriorityMappingTableType"),
                    opcua::types::LocalizedText::new("", "PriorityMappingTableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25228u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25229u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25231u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 58u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_413(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11595u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AddressSpaceFileType"),
                    opcua::types::LocalizedText::new("", "AddressSpaceFileType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11615u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11575u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_415(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11616u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "NamespaceMetadataType"),
                    opcua::types::LocalizedText::new("", "NamespaceMetadataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11617u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11618u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11619u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11620u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11621u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11622u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11623u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11624u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16137u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 16138u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16139u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 25267u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32419u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 58u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_448(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11645u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "NamespacesType"),
                    opcua::types::LocalizedText::new("", "NamespacesType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11646u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 58u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_457(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2041u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "BaseEventType"),
                    opcua::types::LocalizedText::new("", "BaseEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2042u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2043u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2044u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2045u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2046u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2047u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3190u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2050u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2051u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 31771u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            31772u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 31773u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            31774u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 58u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_471(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2052u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditEventType"),
                    opcua::types::LocalizedText::new("", "AuditEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2053u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2054u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2055u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2056u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2057u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2041u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_477(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2058u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditSecurityEventType"),
                    opcua::types::LocalizedText::new("", "AuditSecurityEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17615u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2052u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_479(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2059u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditChannelEventType"),
                    opcua::types::LocalizedText::new("", "AuditChannelEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2745u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2058u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_481(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2060u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditOpenSecureChannelEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditOpenSecureChannelEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2061u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2746u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2062u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2063u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2065u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2066u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24135u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2059u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_489(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2069u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditSessionEventType"),
                    opcua::types::LocalizedText::new("", "AuditSessionEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2070u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2058u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_491(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2071u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditCreateSessionEventType",
                    ),
                    opcua::types::LocalizedText::new("", "AuditCreateSessionEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2072u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2073u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2747u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2074u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2069u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_496(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2748u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditUrlMismatchEventType"),
                    opcua::types::LocalizedText::new("", "AuditUrlMismatchEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2749u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2071u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_498(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2075u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditActivateSessionEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditActivateSessionEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2076u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2077u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11485u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2069u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_502(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2078u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditCancelEventType"),
                    opcua::types::LocalizedText::new("", "AuditCancelEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2079u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2069u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_504(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2080u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditCertificateEventType"),
                    opcua::types::LocalizedText::new("", "AuditCertificateEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2081u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2058u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_506(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2082u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditCertificateDataMismatchEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditCertificateDataMismatchEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2083u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2084u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2080u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_509(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2085u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditCertificateExpiredEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditCertificateExpiredEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2080u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_510(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2086u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditCertificateInvalidEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditCertificateInvalidEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2080u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_511(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2087u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditCertificateUntrustedEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditCertificateUntrustedEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2080u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_512(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2088u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditCertificateRevokedEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditCertificateRevokedEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2080u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_513(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2089u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditCertificateMismatchEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditCertificateMismatchEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2080u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_514(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2090u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditNodeManagementEventType",
                    ),
                    opcua::types::LocalizedText::new("", "AuditNodeManagementEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2052u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_515(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2091u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditAddNodesEventType"),
                    opcua::types::LocalizedText::new("", "AuditAddNodesEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2092u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2090u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_517(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2093u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditDeleteNodesEventType"),
                    opcua::types::LocalizedText::new("", "AuditDeleteNodesEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2094u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2090u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_519(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2095u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditAddReferencesEventType",
                    ),
                    opcua::types::LocalizedText::new("", "AuditAddReferencesEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2096u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2090u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_521(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2097u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditDeleteReferencesEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditDeleteReferencesEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2098u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2090u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_523(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2099u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditUpdateEventType"),
                    opcua::types::LocalizedText::new("", "AuditUpdateEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2052u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_524(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2100u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditWriteUpdateEventType"),
                    opcua::types::LocalizedText::new("", "AuditWriteUpdateEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2750u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2101u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2102u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2103u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2099u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_529(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2104u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditHistoryUpdateEventType",
                    ),
                    opcua::types::LocalizedText::new("", "AuditHistoryUpdateEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2751u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2099u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_531(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2127u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditUpdateMethodEventType"),
                    opcua::types::LocalizedText::new("", "AuditUpdateMethodEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2128u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2129u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2052u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_534(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2130u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "SystemEventType"),
                    opcua::types::LocalizedText::new("", "SystemEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2041u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_535(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2131u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "DeviceFailureEventType"),
                    opcua::types::LocalizedText::new("", "DeviceFailureEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2130u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_536(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11446u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SystemStatusChangeEventType",
                    ),
                    opcua::types::LocalizedText::new("", "SystemStatusChangeEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11696u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2130u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_538(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2132u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "BaseModelChangeEventType"),
                    opcua::types::LocalizedText::new("", "BaseModelChangeEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2041u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_539(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2133u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "GeneralModelChangeEventType",
                    ),
                    opcua::types::LocalizedText::new("", "GeneralModelChangeEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2134u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2132u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_541(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2738u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "SemanticChangeEventType"),
                    opcua::types::LocalizedText::new("", "SemanticChangeEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2739u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2041u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_543(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3035u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "EventQueueOverflowEventType",
                    ),
                    opcua::types::LocalizedText::new("", "EventQueueOverflowEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2041u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_544(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11436u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "ProgressEventType"),
                    opcua::types::LocalizedText::new("", "ProgressEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12502u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12503u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2041u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_547(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23606u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AuditClientEventType"),
                    opcua::types::LocalizedText::new("", "AuditClientEventType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23908u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2052u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_549(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23926u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AuditClientUpdateMethodResultEventType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "AuditClientUpdateMethodResultEventType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23994u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 23995u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23998u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 23999u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25684u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 23606u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_555(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2340u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "AggregateFunctionType"),
                    opcua::types::LocalizedText::new("", "AggregateFunctionType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            58u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_object_type_60(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 58u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "BaseObjectType"),
                    opcua::types::LocalizedText::new("", "BaseObjectType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![],
    }
}
#[allow(unused)]
fn make_object_type_61(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 61u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "FolderType"),
                    opcua::types::LocalizedText::new("", "FolderType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            58u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_object_type_72(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 75u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "DataTypeSystemType"),
                    opcua::types::LocalizedText::new("", "DataTypeSystemType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            58u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_object_type_73(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 76u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "DataTypeEncodingType"),
                    opcua::types::LocalizedText::new("", "DataTypeEncodingType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            58u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_object_type_76(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 77u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "ModellingRuleType"),
                    opcua::types::LocalizedText::new("", "ModellingRuleType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            58u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_object_type_914(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2299u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "StateMachineType"),
                    opcua::types::LocalizedText::new("", "StateMachineType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2769u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2770u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            58u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_object_type_930(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2771u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "FiniteStateMachineType"),
                    opcua::types::LocalizedText::new("", "FiniteStateMachineType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2772u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2773u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17635u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 17636u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2299u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_941(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2307u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "StateType"),
                    opcua::types::LocalizedText::new("", "StateType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2308u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 58u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_943(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2309u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "InitialStateType"),
                    opcua::types::LocalizedText::new("", "InitialStateType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2307u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_944(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2310u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "TransitionType"),
                    opcua::types::LocalizedText::new("", "TransitionType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2312u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 58u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_object_type_946(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15109u32),
                    opcua::types::NodeClass::ObjectType,
                    opcua::types::QualifiedName::new(0u16, "ChoiceStateType"),
                    opcua::types::LocalizedText::new("", "ChoiceStateType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2307u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1360(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17597u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasDictionaryEntry"),
                    opcua::types::LocalizedText::new("", "HasDictionaryEntry"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "DictionaryEntryOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1365(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17603u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasInterface"),
                    opcua::types::LocalizedText::new("", "HasInterface"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "InterfaceOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1366(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17604u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasAddIn"),
                    opcua::types::LocalizedText::new("", "HasAddIn"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "AddInOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            47u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1457(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32558u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasEngineeringUnitDetails"),
                    opcua::types::LocalizedText::new("", "HasEngineeringUnitDetails"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "EngineeringUnitDetailsOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1458(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32559u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasQuantity"),
                    opcua::types::LocalizedText::new("", "HasQuantity"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "QuantityOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1467(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9004u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasTrueSubState"),
                    opcua::types::LocalizedText::new("", "HasTrueSubState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsTrueSubStateOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1468(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9005u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasFalseSubState"),
                    opcua::types::LocalizedText::new("", "HasFalseSubState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsFalseSubStateOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1469(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16361u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasAlarmSuppressionGroup"),
                    opcua::types::LocalizedText::new("", "HasAlarmSuppressionGroup"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsAlarmSuppressionGroupOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            47u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1470(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16362u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "AlarmGroupMember"),
                    opcua::types::LocalizedText::new("", "AlarmGroupMember"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "MemberOfAlarmGroup")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            35u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1471(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32059u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "AlarmSuppressionGroupMember",
                    ),
                    opcua::types::LocalizedText::new("", "AlarmSuppressionGroupMember"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(
                    opcua::types::LocalizedText::new("", "MemberOfAlarmSuppressionGroup"),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16362u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1806(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9006u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasCondition"),
                    opcua::types::LocalizedText::new("", "HasCondition"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsConditionOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1807(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17276u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasEffectDisable"),
                    opcua::types::LocalizedText::new("", "HasEffectDisable"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "MayBeDisabledBy")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            54u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1808(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17983u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasEffectEnable"),
                    opcua::types::LocalizedText::new("", "HasEffectEnable"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "MayBeEnabledBy")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            54u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1809(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17984u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasEffectSuppressed"),
                    opcua::types::LocalizedText::new("", "HasEffectSuppressed"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "MayBeSuppressedBy")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            54u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1810(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17985u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasEffectUnsuppressed"),
                    opcua::types::LocalizedText::new("", "HasEffectUnsuppressed"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "MayBeUnsuppressedBy")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            54u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1957(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32633u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasCurrentData"),
                    opcua::types::LocalizedText::new("", "HasCurrentData"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "HasHistoricalData")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_1958(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32634u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasCurrentEvent"),
                    opcua::types::LocalizedText::new("", "HasCurrentEvent"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "HasHistoricalEvent")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_2743(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25345u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasPushedSecurityGroup"),
                    opcua::types::LocalizedText::new("", "HasPushedSecurityGroup"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "HasPushTarget")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            33u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_3037(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14476u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasPubSubConnection"),
                    opcua::types::LocalizedText::new("", "HasPubSubConnection"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "PubSubConnectionOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            47u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_3073(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 14936u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "DataSetToWriter"),
                    opcua::types::LocalizedText::new("", "DataSetToWriter"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "WriterToDataSet")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            33u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_3292(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15296u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasDataSetWriter"),
                    opcua::types::LocalizedText::new("", "HasDataSetWriter"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsWriterInGroup")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            47u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_3293(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18804u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasWriterGroup"),
                    opcua::types::LocalizedText::new("", "HasWriterGroup"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsWriterGroupOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            47u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_33(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 31u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "References"),
                    opcua::types::LocalizedText::new("", "References"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                true,
                None,
            )
            .into(),
        references: vec![],
    }
}
#[allow(unused)]
fn make_reference_type_3363(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15297u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasDataSetReader"),
                    opcua::types::LocalizedText::new("", "HasDataSetReader"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsReaderInGroup")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            47u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_3364(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18805u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasReaderGroup"),
                    opcua::types::LocalizedText::new("", "HasReaderGroup"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsReaderGroupOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            47u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_34(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "NonHierarchicalReferences"),
                    opcua::types::LocalizedText::new("", "NonHierarchicalReferences"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                true,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            31u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_35(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 33u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HierarchicalReferences"),
                    opcua::types::LocalizedText::new("", "HierarchicalReferences"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                true,
                Some(
                    opcua::types::LocalizedText::new("", "InverseHierarchicalReferences"),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            31u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_36(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 34u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasChild"),
                    opcua::types::LocalizedText::new("", "HasChild"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                true,
                Some(opcua::types::LocalizedText::new("", "ChildOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            33u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_37(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 35u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "Organizes"),
                    opcua::types::LocalizedText::new("", "Organizes"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "OrganizedBy")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            33u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_3791(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23469u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "AliasFor"),
                    opcua::types::LocalizedText::new("", "AliasFor"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "HasAlias")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_38(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 36u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasEventSource"),
                    opcua::types::LocalizedText::new("", "HasEventSource"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "EventSourceOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            33u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_39(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 37u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasModellingRule"),
                    opcua::types::LocalizedText::new("", "HasModellingRule"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "ModellingRuleOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_40(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 38u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasEncoding"),
                    opcua::types::LocalizedText::new("", "HasEncoding"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "EncodingOf")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_4000(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25237u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "UsesPriorityMappingTable"),
                    opcua::types::LocalizedText::new("", "UsesPriorityMappingTable"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "UsedByNetworkInterface")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_4001(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25238u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "HasLowerLayerInterface"),
                    opcua::types::LocalizedText::new("", "HasLowerLayerInterface"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "HasHigherLayerInterface")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            33u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_4002(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25253u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "IsExecutableOn"),
                    opcua::types::LocalizedText::new("", "IsExecutableOn"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "CanExecute")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_4003(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25254u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "Controls"),
                    opcua::types::LocalizedText::new("", "Controls"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsControlledBy")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            33u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_4004(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25255u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "Utilizes"),
                    opcua::types::LocalizedText::new("", "Utilizes"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsUtilizedBy")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_4005(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25265u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "IsExecutingOn"),
                    opcua::types::LocalizedText::new("", "IsExecutingOn"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "Executes")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25255u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_4006(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25256u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "Requires"),
                    opcua::types::LocalizedText::new("", "Requires"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                false,
                Some(opcua::types::LocalizedText::new("", "IsRequiredBy")),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            33u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_reference_type_4007(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ReferenceType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25257u32),
                    opcua::types::NodeClass::ReferenceType,
                    opcua::types::QualifiedName::new(0u16, "IsPhysicallyConnectedTo"),
                    opcua::types::LocalizedText::new("", "IsPhysicallyConnectedTo"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
