// This file was autogenerated from tools/schema/schemas/1.05/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua { pub use opcua_types as types; pub use opcua_nodes as nodes; }pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_data_type_2670 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_data_type_2671,
            &make_data_type_2672,
            &make_data_type_2673,
            &make_data_type_2674,
            &make_data_type_2675,
            &make_data_type_2676,
            &make_data_type_2677,
            &make_data_type_2678,
            &make_data_type_2679,
            &make_data_type_2680,
            &make_data_type_2681,
            &make_data_type_2683,
            &make_data_type_2684,
            &make_data_type_2685,
            &make_data_type_27,
            &make_data_type_28,
            &make_data_type_29,
            &make_data_type_3,
            &make_data_type_30,
            &make_data_type_3045,
            &make_data_type_3047,
            &make_data_type_3048,
            &make_data_type_31,
            &make_data_type_32,
            &make_data_type_3570,
            &make_data_type_3577,
            &make_data_type_375,
            &make_data_type_3790,
            &make_data_type_3818,
            &make_data_type_3820,
            &make_data_type_3822,
            &make_data_type_3841,
            &make_data_type_3963,
            &make_data_type_3965,
            &make_data_type_3967,
            &make_data_type_3969,
            &make_data_type_3971,
            &make_data_type_3973,
            &make_data_type_3975,
            &make_data_type_3977,
            &make_data_type_3979,
            &make_data_type_4,
            &make_data_type_4018,
            &make_data_type_4019,
            &make_data_type_4020,
            &make_data_type_4022,
            &make_data_type_4024,
            &make_data_type_4026,
            &make_data_type_4028,
            &make_data_type_4030,
            &make_data_type_4032,
            &make_data_type_4034,
            &make_data_type_4035,
            &make_data_type_4036,
            &make_data_type_4038,
            &make_data_type_4039,
            &make_data_type_4040,
            &make_data_type_4041,
            &make_data_type_4042,
            &make_data_type_4043,
            &make_data_type_4044,
            &make_data_type_4045,
            &make_data_type_4046,
            &make_data_type_4047,
            &make_data_type_4048,
            &make_data_type_4049,
            &make_data_type_4050,
            &make_data_type_4051,
            &make_data_type_4052,
            &make_data_type_4053,
            &make_data_type_4054,
            &make_data_type_4055,
            &make_data_type_4056,
            &make_data_type_4058,
            &make_data_type_4059,
            &make_data_type_4060,
            &make_data_type_4061,
            &make_data_type_4062,
            &make_data_type_4064,
            &make_data_type_4066,
            &make_data_type_4067,
            &make_data_type_4068,
            &make_data_type_4069,
            &make_data_type_4070,
            &make_data_type_4071,
            &make_data_type_4073,
            &make_data_type_4074,
            &make_data_type_4075,
            &make_data_type_4076,
            &make_data_type_4077,
            &make_data_type_4078,
            &make_data_type_4079,
            &make_data_type_4080,
            &make_data_type_4082,
            &make_data_type_4083,
            &make_data_type_4084,
            &make_data_type_4085,
            &make_data_type_4086,
            &make_data_type_4088,
        ]
            .into_iter()
            .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_data_type_2670(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23603u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "QosDataType"),
                    opcua::types::LocalizedText::new("", "QosDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(vec![]),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2671(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23604u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "TransmitQosDataType"),
                    opcua::types::LocalizedText::new("", "TransmitQosDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(vec![]),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23603u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2672(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23605u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "TransmitQosPriorityDataType",
                    ),
                    opcua::types::LocalizedText::new("", "TransmitQosPriorityDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "PriorityLabel"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23604u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2673(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23608u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "ReceiveQosDataType"),
                    opcua::types::LocalizedText::new("", "ReceiveQosDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(vec![]),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23603u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2674(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23609u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "ReceiveQosPriorityDataType"),
                    opcua::types::LocalizedText::new("", "ReceiveQosPriorityDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "PriorityLabel"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            23608u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2675(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17467u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "DatagramConnectionTransportDataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "DatagramConnectionTransportDataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "DiscoveryAddress"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 15502u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15618u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2676(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23612u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "DatagramConnectionTransport2DataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "DatagramConnectionTransport2DataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name :
                                "DiscoveryAnnounceRate".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 7u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "DiscoveryMaxMessageSize".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 7u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "QosCategory".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 12u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "DatagramQos".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 23603u32), value_rank :
                                1i32, array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17467u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2677(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15532u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "DatagramWriterGroupTransportDataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "DatagramWriterGroupTransportDataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "MessageRepeatCount"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 3u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "MessageRepeatDelay"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 290u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15611u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2678(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23613u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "DatagramWriterGroupTransport2DataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "DatagramWriterGroupTransport2DataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "Address".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 15502u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "QosCategory".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DatagramQos".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 23604u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name :
                                "DiscoveryAnnounceRate".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 7u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "Topic".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 12u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15532u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2679(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23614u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "DatagramDataSetReaderTransportDataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "DatagramDataSetReaderTransportDataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "Address".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 15502u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "QosCategory".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DatagramQos".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 23608u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Topic".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15628u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2680(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15007u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "BrokerConnectionTransportDataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "BrokerConnectionTransportDataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "ResourceUri".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name :
                                "AuthenticationProfileUri".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 12u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15618u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2681(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15008u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "BrokerTransportQualityOfService",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "BrokerTransportQualityOfService",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "NotSpecified".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "BestEffort".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "AtLeastOnce".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "AtMostOnce".into(), }, opcua::types::EnumField {
                                value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ExactlyOnce".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15009u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2683(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15667u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "BrokerWriterGroupTransportDataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "BrokerWriterGroupTransportDataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "QueueName".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ResourceUri".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name :
                                "AuthenticationProfileUri".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 12u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "RequestedDeliveryGuarantee".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 15008u32), value_rank : -
                                1i32, array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15611u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2684(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15669u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "BrokerDataSetWriterTransportDataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "BrokerDataSetWriterTransportDataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "QueueName".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ResourceUri".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name :
                                "AuthenticationProfileUri".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 12u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "RequestedDeliveryGuarantee".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 15008u32), value_rank : -
                                1i32, array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "MetaDataQueueName".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 12u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "MetaDataUpdateTime".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 290u32), value_rank : -
                                1i32, array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15598u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2685(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15670u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "BrokerDataSetReaderTransportDataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "BrokerDataSetReaderTransportDataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "QueueName".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ResourceUri".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name :
                                "AuthenticationProfileUri".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 12u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "RequestedDeliveryGuarantee".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 15008u32), value_rank : -
                                1i32, array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, }, opcua::types::StructureField { name
                                : "MetaDataQueueName".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 12u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15628u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_27(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 21u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "LocalizedText"),
                    opcua::types::LocalizedText::new("", "LocalizedText"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_28(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 22u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "Structure"),
                    opcua::types::LocalizedText::new("", "Structure"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_29(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DataValue"),
                    opcua::types::LocalizedText::new("", "DataValue"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 26u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "Number"),
                    opcua::types::LocalizedText::new("", "Number"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_30(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DiagnosticInfo"),
                    opcua::types::LocalizedText::new("", "DiagnosticInfo"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3045(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25517u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "PubSubConfigurationRefMask"),
                    opcua::types::LocalizedText::new("", "PubSubConfigurationRefMask"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ElementAdd".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ElementMatch".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ElementModify".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ElementRemove".into(), }, opcua::types::EnumField {
                                value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ReferenceWriter".into(), }, opcua::types::EnumField { value
                                : 5i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ReferenceReader".into(), }, opcua::types::EnumField
                                { value : 6i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ReferenceWriterGroup".into(), }, opcua::types::EnumField {
                                value : 7i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ReferenceReaderGroup".into(), }, opcua::types::EnumField {
                                value : 8i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ReferenceConnection".into(), }, opcua::types::EnumField {
                                value : 9i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ReferencePubDataset".into(), }, opcua::types::EnumField {
                                value : 10i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ReferenceSubDataset".into(), }, opcua::types::EnumField {
                                value : 11i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ReferenceSecurityGroup".into(), }, opcua::types::EnumField
                                { value : 12i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ReferencePushTarget".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            25518u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 7u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3047(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25519u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "PubSubConfigurationRefDataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "PubSubConfigurationRefDataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "ConfigurationMask"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 25517u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ElementIndex".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 5u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ConnectionIndex"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 5u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "GroupIndex".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 5u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3048(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25520u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "PubSubConfigurationValueDataType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "PubSubConfigurationValueDataType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "ConfigurationElement"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 25519u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Name".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Identifier".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 24u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_31(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 30u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "Image"),
                    opcua::types::LocalizedText::new("", "Image"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_32(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 50u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "Decimal"),
                    opcua::types::LocalizedText::new("", "Decimal"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            26u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3570(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 19723u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DiagnosticsLevel"),
                    opcua::types::LocalizedText::new("", "DiagnosticsLevel"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Basic"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "Advanced".into(), }, opcua::types::EnumField { value :
                                2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Info".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Log".into(), }, opcua::types::EnumField { value :
                                4i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Debug".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            19724u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3577(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 19730u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "PubSubDiagnosticsCounterClassification",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "PubSubDiagnosticsCounterClassification",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "Information".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Error".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            19731u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_375(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32417u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "RedundantServerMode"),
                    opcua::types::LocalizedText::new("", "RedundantServerMode"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "PrimaryWithBackup".into(), }, opcua::types::EnumField {
                                value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "PrimaryOnly".into(), }, opcua::types::EnumField { value :
                                2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "BackupReady".into(), }, opcua::types::EnumField {
                                value : 3i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "BackupNotReady".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32418u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3790(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 23468u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "AliasNameDataType"),
                    opcua::types::LocalizedText::new("", "AliasNameDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "AliasName".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 20u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ReferencedNodes"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 18u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3818(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24277u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "PasswordOptionsMask"),
                    opcua::types::LocalizedText::new("", "PasswordOptionsMask"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Indicates if the server supports the feature to require a password change after the creation of the user."),
                                name : "SupportInitialPasswordChange".into(), },
                                opcua::types::EnumField { value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Indicates if the server supports to disable a user."), name
                                : "SupportDisableUser".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Indicates if the server supports the configuration NoDelete for a user."),
                                name : "SupportDisableDeleteForUser".into(), },
                                opcua::types::EnumField { value : 3i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Indicates if the server supports the configuration NoChangeByUser for a user."),
                                name : "SupportNoChangeForUser".into(), },
                                opcua::types::EnumField { value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Indicates if the server supports to management of a description for the user."),
                                name : "SupportDescriptionForUser".into(), },
                                opcua::types::EnumField { value : 5i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Indicates if a upper case ASCII character is required in a password."),
                                name : "RequiresUpperCaseCharacters".into(), },
                                opcua::types::EnumField { value : 6i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Indicates if a lower case ASCII character is required in a password."),
                                name : "RequiresLowerCaseCharacters".into(), },
                                opcua::types::EnumField { value : 7i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Indicates if a digit ASCII character is required in a password."),
                                name : "RequiresDigitCharacters".into(), },
                                opcua::types::EnumField { value : 8i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Indicates if a special character is required in a password."),
                                name : "RequiresSpecialCharacters".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24278u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 7u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3820(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24279u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "UserConfigurationMask"),
                    opcua::types::LocalizedText::new("", "UserConfigurationMask"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The user cannot be deleted."), name : "NoDelete".into(), },
                                opcua::types::EnumField { value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The user is disabled."), name : "Disabled".into(), },
                                opcua::types::EnumField { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The user cannot change the password."), name :
                                "NoChangeByUser".into(), }, opcua::types::EnumField { value
                                : 3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The user must change the password to get the assigned roles. If the password is not changed, the user has only the Role Anonymous."),
                                name : "MustChangePassword".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24280u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 7u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3822(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24281u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "UserManagementDataType"),
                    opcua::types::LocalizedText::new("", "UserManagementDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "UserName".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "UserConfiguration"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 24279u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Description".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3841(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25726u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "EncodedTicket"),
                    opcua::types::LocalizedText::new("", "EncodedTicket"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3963(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24210u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "Duplex"),
                    opcua::types::LocalizedText::new("", "Duplex"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", "Full duplex."), name :
                                "Full".into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "Half duplex."), name : "Half".into(), },
                                opcua::types::EnumField { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Link is currently disconnected or initializing."), name :
                                "Unknown".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24235u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3965(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24212u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "InterfaceAdminStatus"),
                    opcua::types::LocalizedText::new("", "InterfaceAdminStatus"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Ready to pass packets."), name : "Up".into(), },
                                opcua::types::EnumField { value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Not ready to pass packets and not in some test mode."),
                                name : "Down".into(), }, opcua::types::EnumField { value :
                                2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "In some test mode."), name : "Testing".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24236u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3967(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24214u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "InterfaceOperStatus"),
                    opcua::types::LocalizedText::new("", "InterfaceOperStatus"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Ready to pass packets."), name : "Up".into(), },
                                opcua::types::EnumField { value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The interface does not pass any packets."), name : "Down"
                                .into(), }, opcua::types::EnumField { value : 2i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "In some test mode. No operational packets can be passed."),
                                name : "Testing".into(), }, opcua::types::EnumField { value
                                : 3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "Status cannot be determined for some reason."), name :
                                "Unknown".into(), }, opcua::types::EnumField { value : 4i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "Waiting for some external event."), name : "Dormant"
                                .into(), }, opcua::types::EnumField { value : 5i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "Some component (typically hardware) is missing."), name :
                                "NotPresent".into(), }, opcua::types::EnumField { value :
                                6i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "Down due to state of lower-layer interface(s)."), name :
                                "LowerLayerDown".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24237u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3969(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24216u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "NegotiationStatus"),
                    opcua::types::LocalizedText::new("", "NegotiationStatus"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The auto-negotiation protocol is running and negotiation is currently in-progress."),
                                name : "InProgress".into(), }, opcua::types::EnumField {
                                value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The auto-negotiation protocol has completed successfully."),
                                name : "Complete".into(), }, opcua::types::EnumField { value
                                : 2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The auto-negotiation protocol has failed."), name :
                                "Failed".into(), }, opcua::types::EnumField { value : 3i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The auto-negotiation status is not currently known, this could be because it is still negotiating or the protocol cannot run (e.g., if no medium is present)."),
                                name : "Unknown".into(), }, opcua::types::EnumField { value
                                : 4i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "No auto-negotiation is executed. The auto-negotiation function is either not supported on this interface or has not been enabled."),
                                name : "NoNegotiation".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24238u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3971(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24218u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "TsnFailureCode"),
                    opcua::types::LocalizedText::new("", "TsnFailureCode"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", "No failure"), name :
                                "NoFailure".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "Insufficient bandwidth"), name : "InsufficientBandwidth"
                                .into(), }, opcua::types::EnumField { value : 2i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "Insufficient bridge resources"), name :
                                "InsufficientResources".into(), }, opcua::types::EnumField {
                                value : 3i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Insufficient bandwidth for Traffic Class"), name :
                                "InsufficientTrafficClassBandwidth".into(), },
                                opcua::types::EnumField { value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "StreamID in use by another Talker"), name : "StreamIdInUse"
                                .into(), }, opcua::types::EnumField { value : 5i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "Stream destination address already in use"), name :
                                "StreamDestinationAddressInUse".into(), },
                                opcua::types::EnumField { value : 6i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Stream pre-empted by higher rank"), name :
                                "StreamPreemptedByHigherRank".into(), },
                                opcua::types::EnumField { value : 7i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Reported latency has changed"), name : "LatencyHasChanged"
                                .into(), }, opcua::types::EnumField { value : 8i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "Egress port is not AVBCapable"), name :
                                "EgressPortNotAvbCapable".into(), }, opcua::types::EnumField
                                { value : 9i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Use a different destination address"), name :
                                "UseDifferentDestinationAddress".into(), },
                                opcua::types::EnumField { value : 10i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Out of MSRP resources"), name : "OutOfMsrpResources"
                                .into(), }, opcua::types::EnumField { value : 11i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "Out of MMRP resources"), name : "OutOfMmrpResources"
                                .into(), }, opcua::types::EnumField { value : 12i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "Cannot store destination address"), name :
                                "CannotStoreDestinationAddress".into(), },
                                opcua::types::EnumField { value : 13i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Requested priority is not an SR Class priority"), name :
                                "PriorityIsNotAnSrcClass".into(), }, opcua::types::EnumField
                                { value : 14i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "MaxFrameSize is too large for media"), name :
                                "MaxFrameSizeTooLarge".into(), }, opcua::types::EnumField {
                                value : 15i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "MaxFanInPorts limit has been reached"), name :
                                "MaxFanInPortsLimitReached".into(), },
                                opcua::types::EnumField { value : 16i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Changes in FirstValue for a registered StreamID"), name :
                                "FirstValueChangedForStreamId".into(), },
                                opcua::types::EnumField { value : 17i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "VLAN is blocked on this egress port (Registration Forbidden)"),
                                name : "VlanBlockedOnEgress".into(), },
                                opcua::types::EnumField { value : 18i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "VLAN tagging is disabled on this egress port (untagged set)"),
                                name : "VlanTaggingDisabledOnEgress".into(), },
                                opcua::types::EnumField { value : 19i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "SR class priority mismatch"), name :
                                "SrClassPriorityMismatch".into(), }, opcua::types::EnumField
                                { value : 20i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Enhanced feature cannot be propagated to original Port"),
                                name : "FeatureNotPropagated".into(), },
                                opcua::types::EnumField { value : 21i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", "MaxLatency exceeded"),
                                name : "MaxLatencyExceeded".into(), },
                                opcua::types::EnumField { value : 22i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Nearest Bridge cannot provide network identification for stream transformation"),
                                name : "BridgeDoesNotProvideNetworkId".into(), },
                                opcua::types::EnumField { value : 23i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Stream transformation not supported"), name :
                                "StreamTransformNotSupported".into(), },
                                opcua::types::EnumField { value : 24i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Stream identification type not supported for stream transformation"),
                                name : "StreamIdTypeNotSupported".into(), },
                                opcua::types::EnumField { value : 25i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Enhanced feature cannot be supported without a CNC"), name
                                : "FeatureNotSupported".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24239u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3973(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24220u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "TsnStreamState"),
                    opcua::types::LocalizedText::new("", "TsnStreamState"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The related TSN Stream is currently disabled."), name :
                                "Disabled".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The related TSN Stream is in the process of receiving configuration parameters from the TSN Control Layer."),
                                name : "Configuring".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The related TSN Stream has successfully received and applied the configuration from the TSN Control Layer. The related TSN Stream is not fully operational as long as local preconditions (e.g. synchronization state) are not valid."),
                                name : "Ready".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The related TSN Stream object is configured and all other required preconditions (e.g. synchronization state) for sending / receiving data are valid."),
                                name : "Operational".into(), }, opcua::types::EnumField {
                                value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The related TSN Stream object is in an error state."), name
                                : "Error".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24240u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3975(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24222u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "TsnTalkerStatus"),
                    opcua::types::LocalizedText::new("", "TsnTalkerStatus"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", "No Talker detected."),
                                name : "None".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "Talker ready (configured)."), name : "Ready".into(), },
                                opcua::types::EnumField { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", "Talker failed."), name
                                : "Failed".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24241u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3977(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 24224u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "TsnListenerStatus"),
                    opcua::types::LocalizedText::new("", "TsnListenerStatus"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "No Listener detected."), name : "None".into(), },
                                opcua::types::EnumField { value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Listener ready (configured)."), name : "Ready".into(), },
                                opcua::types::EnumField { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "One or more Listeners ready, and one or more Listeners failed."),
                                name : "PartialFailed".into(), }, opcua::types::EnumField {
                                value : 3i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", "Listener failed."),
                                name : "Failed".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            24242u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_3979(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 25220u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "PriorityMappingEntryType"),
                    opcua::types::LocalizedText::new("", "PriorityMappingEntryType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "MappingUri".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "PriorityLabel"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "PriorityValue_PCP"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 3u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "PriorityValue_DSCP"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 7u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 27u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "Integer"),
                    opcua::types::LocalizedText::new("", "Integer"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            26u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4018(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32659u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "ReferenceDescriptionDataType",
                    ),
                    opcua::types::LocalizedText::new("", "ReferenceDescriptionDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "SourceNode".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ReferenceType"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "IsForward".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 1u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "TargetNode".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 18u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4019(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32660u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "ReferenceListEntryDataType"),
                    opcua::types::LocalizedText::new("", "ReferenceListEntryDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "ReferenceType"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "IsForward".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 1u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "TargetNode".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 18u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4020(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 256u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "IdType"),
                    opcua::types::LocalizedText::new("", "IdType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Numeric"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "String".into(), }, opcua::types::EnumField { value :
                                2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Guid".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Opaque".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            7591u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4022(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 257u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "NodeClass"),
                    opcua::types::LocalizedText::new("", "NodeClass"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "No value is specified."), name : "Unspecified".into(), },
                                opcua::types::EnumField { value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The Node is an Object."), name : "Object".into(), },
                                opcua::types::EnumField { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The Node is a Variable."), name : "Variable".into(), },
                                opcua::types::EnumField { value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The Node is a Method."), name : "Method".into(), },
                                opcua::types::EnumField { value : 8i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The Node is an ObjectType."), name : "ObjectType".into(),
                                }, opcua::types::EnumField { value : 16i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The Node is a VariableType."), name : "VariableType"
                                .into(), }, opcua::types::EnumField { value : 32i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The Node is a ReferenceType."), name : "ReferenceType"
                                .into(), }, opcua::types::EnumField { value : 64i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The Node is a DataType."), name : "DataType".into(), },
                                opcua::types::EnumField { value : 128i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", "The Node is a View."),
                                name : "View".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11878u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4024(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 94u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "PermissionType"),
                    opcua::types::LocalizedText::new("", "PermissionType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Browse"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "ReadRolePermissions".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "WriteAttribute".into(), }, opcua::types::EnumField { value
                                : 3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "WriteRolePermissions".into(), },
                                opcua::types::EnumField { value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "WriteHistorizing".into(), }, opcua::types::EnumField {
                                value : 5i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Read"
                                .into(), }, opcua::types::EnumField { value : 6i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "Write".into(), }, opcua::types::EnumField { value : 7i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "ReadHistory".into(), }, opcua::types::EnumField { value :
                                8i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "InsertHistory".into(), }, opcua::types::EnumField {
                                value : 9i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ModifyHistory".into(), }, opcua::types::EnumField { value :
                                10i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "DeleteHistory".into(), }, opcua::types::EnumField {
                                value : 11i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "ReceiveEvents".into(), }, opcua::types::EnumField { value :
                                12i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Call".into(), }, opcua::types::EnumField { value :
                                13i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "AddReference".into(), }, opcua::types::EnumField {
                                value : 14i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "RemoveReference".into(), }, opcua::types::EnumField { value
                                : 15i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "DeleteNode".into(), }, opcua::types::EnumField {
                                value : 16i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "AddNode"
                                .into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15030u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 7u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4026(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15031u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "AccessLevelType"),
                    opcua::types::LocalizedText::new("", "AccessLevelType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "CurrentRead".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "CurrentWrite".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "HistoryRead".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "HistoryWrite".into(), }, opcua::types::EnumField {
                                value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "SemanticChange".into(), }, opcua::types::EnumField { value
                                : 5i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "StatusWrite".into(), }, opcua::types::EnumField {
                                value : 6i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "TimestampWrite".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15032u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4028(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15406u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "AccessLevelExType"),
                    opcua::types::LocalizedText::new("", "AccessLevelExType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "CurrentRead".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "CurrentWrite".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "HistoryRead".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "HistoryWrite".into(), }, opcua::types::EnumField {
                                value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "SemanticChange".into(), }, opcua::types::EnumField { value
                                : 5i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "StatusWrite".into(), }, opcua::types::EnumField {
                                value : 6i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "TimestampWrite".into(), }, opcua::types::EnumField { value
                                : 8i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "NonatomicRead".into(), }, opcua::types::EnumField {
                                value : 9i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "NonatomicWrite".into(), }, opcua::types::EnumField { value
                                : 10i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "WriteFullArrayOnly".into(), },
                                opcua::types::EnumField { value : 11i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "NoSubDataTypes".into(), }, opcua::types::EnumField { value
                                : 12i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "NonVolatile".into(), }, opcua::types::EnumField {
                                value : 13i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Constant"
                                .into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15407u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 7u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4030(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15033u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "EventNotifierType"),
                    opcua::types::LocalizedText::new("", "EventNotifierType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "SubscribeToEvents".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "HistoryRead".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "HistoryWrite".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15034u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4032(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 95u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "AccessRestrictionType"),
                    opcua::types::LocalizedText::new("", "AccessRestrictionType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "SigningRequired".into(), }, opcua::types::EnumField { value
                                : 1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "EncryptionRequired".into(), },
                                opcua::types::EnumField { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "SessionRequired".into(), }, opcua::types::EnumField { value
                                : 3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ApplyRestrictionsToBrowse".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15035u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 5u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4034(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 96u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "RolePermissionType"),
                    opcua::types::LocalizedText::new("", "RolePermissionType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "RoleId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Permissions".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 94u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4035(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 97u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DataTypeDefinition"),
                    opcua::types::LocalizedText::new("", "DataTypeDefinition"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(vec![]),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4036(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 98u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "StructureType"),
                    opcua::types::LocalizedText::new("", "StructureType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Structure"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "StructureWithOptionalFields".into(), },
                                opcua::types::EnumField { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Union"
                                .into(), }, opcua::types::EnumField { value : 3i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "StructureWithSubtypedValues".into(), },
                                opcua::types::EnumField { value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "UnionWithSubtypedValues".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            14528u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4038(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 101u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "StructureField"),
                    opcua::types::LocalizedText::new("", "StructureField"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "Name".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Description".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 21u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DataType".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ValueRank".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 6u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ArrayDimensions"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 7u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "MaxStringLength"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 7u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "IsOptional".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 1u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4039(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 99u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "StructureDefinition"),
                    opcua::types::LocalizedText::new("", "StructureDefinition"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "DefaultEncodingId"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "BaseDataType".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "StructureType"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 98u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Fields".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 101u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            97u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4040(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 100u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "EnumDefinition"),
                    opcua::types::LocalizedText::new("", "EnumDefinition"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "Fields".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 102u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            97u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4041(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 296u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "Argument"),
                    opcua::types::LocalizedText::new("", "Argument"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "Name".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DataType".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ValueRank".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 6u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ArrayDimensions"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 7u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Description".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 21u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4042(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 7594u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "EnumValueType"),
                    opcua::types::LocalizedText::new("", "EnumValueType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "Value".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 8u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DisplayName".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 21u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Description".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 21u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4043(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 102u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "EnumField"),
                    opcua::types::LocalizedText::new("", "EnumField"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "Name".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            7594u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4044(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12755u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "OptionSet"),
                    opcua::types::LocalizedText::new("", "OptionSet"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "Value".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 15u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ValidBits".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 15u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4045(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12877u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "NormalizedString"),
                    opcua::types::LocalizedText::new("", "NormalizedString"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4046(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12878u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DecimalString"),
                    opcua::types::LocalizedText::new("", "DecimalString"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4047(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12879u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DurationString"),
                    opcua::types::LocalizedText::new("", "DurationString"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4048(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12880u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "TimeString"),
                    opcua::types::LocalizedText::new("", "TimeString"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4049(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12881u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DateString"),
                    opcua::types::LocalizedText::new("", "DateString"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4050(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 290u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "Duration"),
                    opcua::types::LocalizedText::new("", "Duration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4051(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 294u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "UtcTime"),
                    opcua::types::LocalizedText::new("", "UtcTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            13u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4052(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 295u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "LocaleId"),
                    opcua::types::LocalizedText::new("", "LocaleId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4053(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 8912u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "TimeZoneDataType"),
                    opcua::types::LocalizedText::new("", "TimeZoneDataType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "Offset".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 4u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name :
                                "DaylightSavingInOffset".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 1u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4054(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17588u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "Index"),
                    opcua::types::LocalizedText::new("", "Index"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            7u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4055(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 288u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "IntegerId"),
                    opcua::types::LocalizedText::new("", "IntegerId"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            7u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4056(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 307u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "ApplicationType"),
                    opcua::types::LocalizedText::new("", "ApplicationType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Server"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "Client".into(), }, opcua::types::EnumField { value :
                                2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ClientAndServer".into(), }, opcua::types::EnumField
                                { value : 3i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "DiscoveryServer".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            7597u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4058(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 308u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "ApplicationDescription"),
                    opcua::types::LocalizedText::new("", "ApplicationDescription"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "ApplicationUri"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ProductUri".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ApplicationName"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 21u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ApplicationType"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 307u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "GatewayServerUri"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DiscoveryProfileUri"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DiscoveryUrls"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4059(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 20998u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "VersionTime"),
                    opcua::types::LocalizedText::new("", "VersionTime"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            7u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4060(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12189u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "ServerOnNetwork"),
                    opcua::types::LocalizedText::new("", "ServerOnNetwork"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "RecordId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 7u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ServerName".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DiscoveryUrl".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ServerCapabilities"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4061(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 311u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "ApplicationInstanceCertificate",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "ApplicationInstanceCertificate",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4062(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 302u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "MessageSecurityMode"),
                    opcua::types::LocalizedText::new("", "MessageSecurityMode"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Invalid"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "None".into(), }, opcua::types::EnumField { value : 2i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "Sign".into(), }, opcua::types::EnumField { value : 3i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "SignAndEncrypt".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            7595u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4064(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 303u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "UserTokenType"),
                    opcua::types::LocalizedText::new("", "UserTokenType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Anonymous"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "UserName".into(), }, opcua::types::EnumField { value :
                                2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Certificate".into(), }, opcua::types::EnumField {
                                value : 3i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "IssuedToken".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            7596u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4066(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 304u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "UserTokenPolicy"),
                    opcua::types::LocalizedText::new("", "UserTokenPolicy"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "PolicyId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "TokenType".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 303u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "IssuedTokenType"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "IssuerEndpointUrl"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "SecurityPolicyUri"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4067(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 312u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "EndpointDescription"),
                    opcua::types::LocalizedText::new("", "EndpointDescription"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "EndpointUrl".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Server".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 308u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ServerCertificate"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 311u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "SecurityMode".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 302u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "SecurityPolicyUri"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "UserIdentityTokens"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 304u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "TransportProfileUri"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "SecurityLevel"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 3u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4068(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 432u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "RegisteredServer"),
                    opcua::types::LocalizedText::new("", "RegisteredServer"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "ServerUri".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ProductUri".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ServerNames".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 21u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ServerType".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 307u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "GatewayServerUri"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DiscoveryUrls"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "SemaphoreFilePath"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "IsOnline".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 1u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4069(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12890u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DiscoveryConfiguration"),
                    opcua::types::LocalizedText::new("", "DiscoveryConfiguration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(vec![]),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4070(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12891u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "MdnsDiscoveryConfiguration"),
                    opcua::types::LocalizedText::new("", "MdnsDiscoveryConfiguration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "MdnsServerName"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ServerCapabilities"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12890u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4071(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 315u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "SecurityTokenRequestType"),
                    opcua::types::LocalizedText::new("", "SecurityTokenRequestType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Issue"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "Renew".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            7598u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4073(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 344u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "SignedSoftwareCertificate"),
                    opcua::types::LocalizedText::new("", "SignedSoftwareCertificate"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "CertificateData"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 15u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Signature".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 15u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4074(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 388u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "SessionAuthenticationToken"),
                    opcua::types::LocalizedText::new("", "SessionAuthenticationToken"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4075(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 316u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "UserIdentityToken"),
                    opcua::types::LocalizedText::new("", "UserIdentityToken"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                true,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "PolicyId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4076(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 319u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "AnonymousIdentityToken"),
                    opcua::types::LocalizedText::new("", "AnonymousIdentityToken"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(vec![]),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            316u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4077(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 322u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "UserNameIdentityToken"),
                    opcua::types::LocalizedText::new("", "UserNameIdentityToken"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "UserName".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "Password".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 15u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "EncryptionAlgorithm"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            316u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4078(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 325u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "X509IdentityToken"),
                    opcua::types::LocalizedText::new("", "X509IdentityToken"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "CertificateData"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 15u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            316u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4079(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 938u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "IssuedIdentityToken"),
                    opcua::types::LocalizedText::new("", "IssuedIdentityToken"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "TokenData".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 15u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "EncryptionAlgorithm"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            316u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4080(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 348u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "NodeAttributesMask"),
                    opcua::types::LocalizedText::new("", "NodeAttributesMask"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "None"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "AccessLevel".into(), }, opcua::types::EnumField { value :
                                2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ArrayDimensions".into(), }, opcua::types::EnumField
                                { value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "BrowseName".into(), }, opcua::types::EnumField { value :
                                8i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ContainsNoLoops".into(), }, opcua::types::EnumField
                                { value : 16i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "DataType"
                                .into(), }, opcua::types::EnumField { value : 32i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "Description".into(), }, opcua::types::EnumField { value :
                                64i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "DisplayName".into(), }, opcua::types::EnumField {
                                value : 128i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "EventNotifier".into(), }, opcua::types::EnumField { value :
                                256i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Executable".into(), }, opcua::types::EnumField {
                                value : 512i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "Historizing".into(), }, opcua::types::EnumField { value :
                                1024i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "InverseName".into(), }, opcua::types::EnumField {
                                value : 2048i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "IsAbstract".into(), }, opcua::types::EnumField { value :
                                4096i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "MinimumSamplingInterval".into(), },
                                opcua::types::EnumField { value : 8192i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "NodeClass"
                                .into(), }, opcua::types::EnumField { value : 16384i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "NodeId".into(), }, opcua::types::EnumField { value :
                                32768i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Symmetric"
                                .into(), }, opcua::types::EnumField { value : 65536i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "UserAccessLevel".into(), }, opcua::types::EnumField {
                                value : 131072i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "UserExecutable".into(), }, opcua::types::EnumField { value
                                : 262144i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "UserWriteMask".into(), }, opcua::types::EnumField { value :
                                524288i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "ValueRank"
                                .into(), }, opcua::types::EnumField { value : 1048576i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "WriteMask".into(), }, opcua::types::EnumField { value :
                                2097152i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Value"
                                .into(), }, opcua::types::EnumField { value : 4194304i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "DataTypeDefinition".into(), }, opcua::types::EnumField {
                                value : 8388608i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "RolePermissions".into(), }, opcua::types::EnumField { value
                                : 16777216i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "AccessRestrictions".into(), }, opcua::types::EnumField {
                                value : 33554431i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "All"
                                .into(), }, opcua::types::EnumField { value : 26501220i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "BaseNode".into(), }, opcua::types::EnumField { value :
                                26501348i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Object"
                                .into(), }, opcua::types::EnumField { value : 26503268i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "ObjectType".into(), }, opcua::types::EnumField { value :
                                26571383i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Variable"
                                .into(), }, opcua::types::EnumField { value : 28600438i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "VariableType".into(), }, opcua::types::EnumField { value
                                : 26632548i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "Method"
                                .into(), }, opcua::types::EnumField { value : 26537060i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "ReferenceType".into(), }, opcua::types::EnumField { value
                                : 26501356i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "View"
                                .into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11881u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4082(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 376u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "AddNodesItem"),
                    opcua::types::LocalizedText::new("", "AddNodesItem"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "ParentNodeId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 18u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ReferenceTypeId"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "RequestedNewNodeId"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 18u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "BrowseName".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 20u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "NodeClass".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 257u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "NodeAttributes"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 22u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "TypeDefinition"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 18u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4083(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 379u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "AddReferencesItem"),
                    opcua::types::LocalizedText::new("", "AddReferencesItem"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "SourceNodeId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ReferenceTypeId"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "IsForward".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 1u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "TargetServerUri"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 12u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "TargetNodeId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 18u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "TargetNodeClass"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 257u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4084(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 382u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DeleteNodesItem"),
                    opcua::types::LocalizedText::new("", "DeleteNodesItem"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "NodeId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name :
                                "DeleteTargetReferences".into(), description :
                                opcua::types::LocalizedText::new("", ""), data_type :
                                opcua::types::NodeId::new(0u16, 1u32), value_rank : - 1i32,
                                array_dimensions : None, max_string_length : 0u32,
                                is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4085(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 385u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "DeleteReferencesItem"),
                    opcua::types::LocalizedText::new("", "DeleteReferencesItem"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::StructureDefinition {
                        fields: Some(
                            vec![
                                opcua::types::StructureField { name : "SourceNodeId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "ReferenceTypeId"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 17u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "IsForward".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 1u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "TargetNodeId".into(),
                                description : opcua::types::LocalizedText::new("", ""),
                                data_type : opcua::types::NodeId::new(0u16, 18u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                                opcua::types::StructureField { name : "DeleteBidirectional"
                                .into(), description : opcua::types::LocalizedText::new("",
                                ""), data_type : opcua::types::NodeId::new(0u16, 1u32),
                                value_rank : - 1i32, array_dimensions : None,
                                max_string_length : 0u32, is_optional : false, },
                            ],
                        ),
                        default_encoding_id: opcua::types::NodeId::null(),
                        base_data_type: opcua::types::NodeId::null(),
                        structure_type: opcua::types::StructureType::Structure,
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            22u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4086(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 347u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "AttributeWriteMask"),
                    opcua::types::LocalizedText::new("", "AttributeWriteMask"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "AccessLevel".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ArrayDimensions".into(), }, opcua::types::EnumField
                                { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "BrowseName".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ContainsNoLoops".into(), }, opcua::types::EnumField
                                { value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "DataType"
                                .into(), }, opcua::types::EnumField { value : 5i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "Description".into(), }, opcua::types::EnumField { value :
                                6i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "DisplayName".into(), }, opcua::types::EnumField {
                                value : 7i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "EventNotifier".into(), }, opcua::types::EnumField { value :
                                8i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Executable".into(), }, opcua::types::EnumField {
                                value : 9i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "Historizing".into(), }, opcua::types::EnumField { value :
                                10i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "InverseName".into(), }, opcua::types::EnumField {
                                value : 11i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "IsAbstract".into(), }, opcua::types::EnumField { value :
                                12i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "MinimumSamplingInterval".into(), },
                                opcua::types::EnumField { value : 13i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "NodeClass"
                                .into(), }, opcua::types::EnumField { value : 14i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "NodeId".into(), }, opcua::types::EnumField { value :
                                15i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "Symmetric".into(), }, opcua::types::EnumField {
                                value : 16i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "UserAccessLevel".into(), }, opcua::types::EnumField { value
                                : 17i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "UserExecutable".into(), }, opcua::types::EnumField {
                                value : 18i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "UserWriteMask".into(), }, opcua::types::EnumField { value :
                                19i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "ValueRank".into(), }, opcua::types::EnumField {
                                value : 20i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "WriteMask"
                                .into(), }, opcua::types::EnumField { value : 21i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "ValueForVariableType".into(), }, opcua::types::EnumField
                                { value : 22i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "DataTypeDefinition".into(), }, opcua::types::EnumField {
                                value : 23i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "RolePermissions".into(), }, opcua::types::EnumField { value
                                : 24i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "AccessRestrictions".into(), },
                                opcua::types::EnumField { value : 25i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "AccessLevelEx".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15036u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 7u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_4088(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 521u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "ContinuationPoint"),
                    opcua::types::LocalizedText::new("", "ContinuationPoint"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
