// This file was autogenerated from tools/schema/schemas/1.05/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua { pub use opcua_types as types; pub use opcua_nodes as nodes; }pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_variable_type_1389 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_variable_type_1392,
            &make_variable_type_1394,
            &make_variable_type_1397,
            &make_variable_type_1403,
            &make_variable_type_1405,
            &make_variable_type_1407,
            &make_variable_type_1410,
            &make_variable_type_1414,
            &make_variable_type_1459,
            &make_variable_type_1465,
            &make_variable_type_1824,
            &make_variable_type_1826,
            &make_variable_type_1902,
            &make_variable_type_1913,
            &make_variable_type_3572,
            &make_variable_type_3836,
            &make_variable_type_3839,
            &make_variable_type_4016,
            &make_variable_type_556,
            &make_variable_type_557,
            &make_variable_type_570,
            &make_variable_type_577,
            &make_variable_type_590,
            &make_variable_type_596,
            &make_variable_type_601,
            &make_variable_type_62,
            &make_variable_type_63,
            &make_variable_type_634,
            &make_variable_type_64,
            &make_variable_type_65,
            &make_variable_type_666,
            &make_variable_type_68,
            &make_variable_type_711,
            &make_variable_type_755,
            &make_variable_type_766,
            &make_variable_type_776,
            &make_variable_type_779,
            &make_variable_type_783,
            &make_variable_type_919,
            &make_variable_type_924,
            &make_variable_type_937,
            &make_variable_type_939,
            &make_variable_type_948,
            &make_variable_type_949,
            &make_variable_type_951,
            &make_variable_type_952,
            &make_variable_type_955,
            &make_variable_type_957,
            &make_variable_type_961,
            &make_variable_type_963,
            &make_variable_type_967,
            &make_variable_type_969,
            &make_variable_type_973,
            &make_variable_type_979,
            &make_variable_type_988,
        ]
            .into_iter()
            .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_variable_type_1389(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2373u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "TwoStateDiscreteType"),
                    opcua::types::LocalizedText::new("", "TwoStateDiscreteType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 1u32),
                false,
                -2i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2374u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2375u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2372u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1392(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2376u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "MultiStateDiscreteType"),
                    opcua::types::LocalizedText::new("", "MultiStateDiscreteType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 28u32),
                false,
                -2i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2377u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2372u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1394(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11238u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MultiStateValueDiscreteType",
                    ),
                    opcua::types::LocalizedText::new("", "MultiStateValueDiscreteType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 26u32),
                false,
                -2i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11241u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11461u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2372u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1397(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12021u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "ArrayItemType"),
                    opcua::types::LocalizedText::new("", "ArrayItemType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                true,
                0i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12024u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12025u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12026u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12027u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12028u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2365u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1403(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12029u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "YArrayItemType"),
                    opcua::types::LocalizedText::new("", "YArrayItemType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                1i32,
                Some(opcua::types::DataValue::null()),
                Some(vec![0u32]),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12037u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12021u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1405(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12038u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "XYArrayItemType"),
                    opcua::types::LocalizedText::new("", "XYArrayItemType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12080u32),
                false,
                1i32,
                Some(opcua::types::DataValue::null()),
                Some(vec![0u32]),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12046u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12021u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1407(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12047u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "ImageItemType"),
                    opcua::types::LocalizedText::new("", "ImageItemType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                2i32,
                Some(opcua::types::DataValue::null()),
                Some(vec![0u32, 0u32]),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12055u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12056u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12021u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1410(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12057u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "CubeItemType"),
                    opcua::types::LocalizedText::new("", "CubeItemType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                3i32,
                Some(opcua::types::DataValue::null()),
                Some(vec![0u32, 0u32, 0u32]),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12065u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12066u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12067u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12021u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1414(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 12068u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "NDimensionArrayItemType"),
                    opcua::types::LocalizedText::new("", "NDimensionArrayItemType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                0i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12076u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12021u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1459(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 8995u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "TwoStateVariableType"),
                    opcua::types::LocalizedText::new("", "TwoStateVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8996u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9000u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9001u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11110u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11111u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2755u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1465(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9002u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "ConditionVariableType"),
                    opcua::types::LocalizedText::new("", "ConditionVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                -2i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            9003u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1824(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17277u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "AlarmRateVariableType"),
                    opcua::types::LocalizedText::new("", "AlarmRateVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 11u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17278u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1826(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32244u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "AlarmStateVariableType"),
                    opcua::types::LocalizedText::new("", "AlarmStateVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 32251u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32245u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 32246u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32247u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 32248u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32249u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 32250u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1902(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2380u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "ProgramDiagnosticType"),
                    opcua::types::LocalizedText::new("", "ProgramDiagnosticType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 894u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2381u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2382u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2383u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2384u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2385u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2386u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2387u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2388u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2389u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2390u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_1913(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15383u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "ProgramDiagnostic2Type"),
                    opcua::types::LocalizedText::new("", "ProgramDiagnostic2Type"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24033u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15384u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15385u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15386u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15387u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15388u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15389u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15390u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15391u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15392u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15393u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15394u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15395u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_3572(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 19725u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "PubSubDiagnosticsCounterType",
                    ),
                    opcua::types::LocalizedText::new("", "PubSubDiagnosticsCounterType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 7u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            19726u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 19727u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            19728u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 19729u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_3836(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 19077u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MultiStateDictionaryEntryDiscreteBaseType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "MultiStateDictionaryEntryDiscreteBaseType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 26u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            19082u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 19083u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11238u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_3839(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 19084u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "MultiStateDictionaryEntryDiscreteType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "MultiStateDictionaryEntryDiscreteType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 26u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            19090u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 19077u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_4016(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32657u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "ReferenceDescriptionVariableType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "ReferenceDescriptionVariableType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 32659u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32658u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_556(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2137u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "ServerVendorCapabilityType"),
                    opcua::types::LocalizedText::new("", "ServerVendorCapabilityType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                true,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_557(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2138u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "ServerStatusType"),
                    opcua::types::LocalizedText::new("", "ServerStatusType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 862u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2139u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2140u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2141u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2142u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2752u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2753u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_570(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 3051u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "BuildInfoType"),
                    opcua::types::LocalizedText::new("", "BuildInfoType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 338u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3052u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3053u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3054u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3055u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3056u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3057u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_577(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2150u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "ServerDiagnosticsSummaryType",
                    ),
                    opcua::types::LocalizedText::new("", "ServerDiagnosticsSummaryType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 859u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2151u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2152u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2153u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2154u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2155u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2156u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2157u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2159u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2160u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2161u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2162u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2163u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_590(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2164u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SamplingIntervalDiagnosticsArrayType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "SamplingIntervalDiagnosticsArrayType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 856u32),
                false,
                1i32,
                Some(opcua::types::DataValue::null()),
                Some(vec![0u32]),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12779u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_596(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2165u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SamplingIntervalDiagnosticsType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "SamplingIntervalDiagnosticsType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 856u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2166u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11697u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11698u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11699u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_601(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2171u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SubscriptionDiagnosticsArrayType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "SubscriptionDiagnosticsArrayType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 874u32),
                false,
                1i32,
                Some(opcua::types::DataValue::null()),
                Some(vec![0u32]),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12784u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_62(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 62u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "BaseVariableType"),
                    opcua::types::LocalizedText::new("", "BaseVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                true,
                -2i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![],
    }
}
#[allow(unused)]
fn make_variable_type_63(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 63u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "BaseDataVariableType"),
                    opcua::types::LocalizedText::new("", "BaseDataVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                -2i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            62u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_634(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2172u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SubscriptionDiagnosticsType",
                    ),
                    opcua::types::LocalizedText::new("", "SubscriptionDiagnosticsType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 874u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2173u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2174u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2175u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2176u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2177u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8888u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2179u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2180u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2181u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2182u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2183u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2184u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2185u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2186u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2187u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2188u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2189u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2190u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2191u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2998u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2193u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8889u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8890u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8891u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8892u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8893u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8894u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8895u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8896u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8897u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            8902u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_64(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 68u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "PropertyType"),
                    opcua::types::LocalizedText::new("", "PropertyType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                -2i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            62u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_65(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 69u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "DataTypeDescriptionType"),
                    opcua::types::LocalizedText::new("", "DataTypeDescriptionType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 12u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            104u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 105u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_666(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2196u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SessionDiagnosticsArrayType",
                    ),
                    opcua::types::LocalizedText::new("", "SessionDiagnosticsArrayType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 865u32),
                false,
                1i32,
                Some(opcua::types::DataValue::null()),
                Some(vec![0u32]),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12816u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_68(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 72u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "DataTypeDictionaryType"),
                    opcua::types::LocalizedText::new("", "DataTypeDictionaryType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 15u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            106u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward : true,
            }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 107u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15001u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_711(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2197u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SessionDiagnosticsVariableType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "SessionDiagnosticsVariableType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 865u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2198u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2199u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2200u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2201u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2202u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2203u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2204u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 3050u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2205u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2206u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2207u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2208u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2209u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 8900u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11892u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2217u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2218u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2219u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2220u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2221u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2222u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2223u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2224u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2225u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2226u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2227u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2228u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2229u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2230u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2231u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2232u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2233u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2234u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2235u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2236u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2237u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2238u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2239u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2240u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2241u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2242u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2730u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2731u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_755(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2243u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SessionSecurityDiagnosticsArrayType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "SessionSecurityDiagnosticsArrayType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 868u32),
                false,
                1i32,
                Some(opcua::types::DataValue::null()),
                Some(vec![0u32]),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            12860u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_766(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2244u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "SessionSecurityDiagnosticsType",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "SessionSecurityDiagnosticsType",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 868u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2245u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2246u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2247u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2248u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2249u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2250u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2251u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2252u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            3058u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_776(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 11487u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "OptionSetType"),
                    opcua::types::LocalizedText::new("", "OptionSetType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11488u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 11701u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_779(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 16309u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "SelectionListType"),
                    opcua::types::LocalizedText::new("", "SelectionListType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 24u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17632u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 17633u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            16312u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_783(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17986u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "AudioVariableType"),
                    opcua::types::LocalizedText::new("", "AudioVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 16307u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17988u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 17989u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17990u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_919(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2755u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "StateVariableType"),
                    opcua::types::LocalizedText::new("", "StateVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2756u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2757u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2758u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2759u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_924(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2762u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "TransitionVariableType"),
                    opcua::types::LocalizedText::new("", "TransitionVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2763u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2764u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2765u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2766u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            11456u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_937(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2760u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "FiniteStateVariableType"),
                    opcua::types::LocalizedText::new("", "FiniteStateVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2761u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2755u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_939(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2767u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "FiniteTransitionVariableType",
                    ),
                    opcua::types::LocalizedText::new("", "FiniteTransitionVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            2768u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2762u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_948(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15113u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "GuardVariableType"),
                    opcua::types::LocalizedText::new("", "GuardVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_949(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15128u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(
                        0u16,
                        "ExpressionGuardVariableType",
                    ),
                    opcua::types::LocalizedText::new("", "ExpressionGuardVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15129u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 15113u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_951(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 15317u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "ElseGuardVariableType"),
                    opcua::types::LocalizedText::new("", "ElseGuardVariableType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 21u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15113u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_952(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17709u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "RationalNumberType"),
                    opcua::types::LocalizedText::new("", "RationalNumberType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 18806u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17712u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 17713u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            63u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_955(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17714u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "VectorType"),
                    opcua::types::LocalizedText::new("", "VectorType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 18807u32),
                true,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            17715u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_957(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 17716u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "3DVectorType"),
                    opcua::types::LocalizedText::new("", "3DVectorType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 18808u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18769u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18770u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18771u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 17714u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_961(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18772u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "CartesianCoordinatesType"),
                    opcua::types::LocalizedText::new("", "CartesianCoordinatesType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 18809u32),
                true,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18773u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_963(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18774u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "3DCartesianCoordinatesType"),
                    opcua::types::LocalizedText::new("", "3DCartesianCoordinatesType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 18810u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18776u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18777u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18778u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18772u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_967(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18779u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "OrientationType"),
                    opcua::types::LocalizedText::new("", "OrientationType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 18811u32),
                true,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18780u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_969(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18781u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "3DOrientationType"),
                    opcua::types::LocalizedText::new("", "3DOrientationType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 18812u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18783u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18784u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18785u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18779u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_973(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18786u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "FrameType"),
                    opcua::types::LocalizedText::new("", "FrameType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 18813u32),
                true,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18801u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18787u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18788u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18789u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18790u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_979(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 18791u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "3DFrameType"),
                    opcua::types::LocalizedText::new("", "3DFrameType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 18814u32),
                false,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18796u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 18792u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            18786u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward :
            false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_type_988(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::VariableType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(0u16, 32431u32),
                    opcua::types::NodeClass::VariableType,
                    opcua::types::QualifiedName::new(0u16, "BitFieldType"),
                    opcua::types::LocalizedText::new("", "BitFieldType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 28u32),
                true,
                -1i32,
                Some(opcua::types::DataValue::null()),
                None,
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            32432u32), type_id : opcua::types::NodeId::new(0u16, 46u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 32433u32), type_id :
            opcua::types::NodeId::new(0u16, 47u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            15014u32), type_id : opcua::types::NodeId::new(0u16, 47u32), is_forward :
            true, }, opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 63u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
