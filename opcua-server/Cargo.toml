[package]
name = "opcua-server"
version = "0.13.0" # OPCUARustVersion
description = "OPC UA server API"
authors = ["Adam Lock <locka99@gmail.com>", "Einar Omang <einar@omang.com>"]
homepage = "https://github.com/locka99/opcua"
repository = "https://github.com/locka99/opcua"
license = "MPL-2.0"
keywords = ["opcua","opc","ua"]
categories = ["embedded","network-programming"]
readme = "../README.md"
documentation = "https://docs.rs/opcua/"
edition = "2021"

[lib]
name = "opcua_server"

[features]
default = ["discovery-server-registration", "generated-address-space"]
# Includes all the code to populate the address space with the default node set. This is something that embedded
# systems may or may not require.
generated-address-space = []

# Allows a server to register itself with a local discovery server. It does so by becoming a client to the LDS,
# which brings in a dependency to opcua-client. Omitting the feature saves some memory.
discovery-server-registration = ["opcua-client"]

[dependencies]
arc-swap = { workspace = true }
async-trait = { workspace = true }
bitflags = { workspace = true }
chrono = { workspace = true }
futures = { workspace = true }
hashbrown = { workspace = true }
lazy_static = { workspace = true }
log = { workspace = true }
parking_lot = { workspace = true }
regex = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tokio = { workspace = true }
tokio-util = { workspace = true }


opcua-types = { path = "../opcua-types" }
opcua-crypto = { path = "../opcua-crypto" }
opcua-core = { path = "../opcua-core" }
opcua-nodes = { path = "../opcua-nodes" }

opcua-client = { path = "../opcua-client", optional = true }