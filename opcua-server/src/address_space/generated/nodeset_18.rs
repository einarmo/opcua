// This file was autogenerated from tools/schema/schemas/1.0.4/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as server;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::server::address_space::ImportedItem> + 'a> {
    Box::new(
        [
            &make_variable_1378 as &dyn Fn(_) -> opcua::server::address_space::ImportedItem,
            &make_variable_1379,
            &make_variable_138,
            &make_variable_1380,
            &make_variable_1381,
            &make_variable_1382,
            &make_variable_1383,
            &make_variable_1384,
            &make_variable_1385,
            &make_variable_1386,
            &make_variable_1387,
            &make_variable_1388,
            &make_variable_1389,
            &make_variable_139,
            &make_variable_1390,
            &make_variable_1391,
            &make_variable_1392,
            &make_variable_1393,
            &make_variable_1395,
            &make_variable_1396,
            &make_variable_1397,
            &make_variable_1398,
            &make_variable_1399,
            &make_variable_140,
            &make_variable_1400,
            &make_variable_1402,
            &make_variable_1405,
            &make_variable_1406,
            &make_variable_1407,
            &make_variable_1408,
            &make_variable_1409,
            &make_variable_141,
            &make_variable_1410,
            &make_variable_1411,
            &make_variable_1412,
            &make_variable_1413,
            &make_variable_1414,
            &make_variable_1415,
            &make_variable_1416,
            &make_variable_1418,
            &make_variable_1419,
            &make_variable_142,
            &make_variable_1420,
            &make_variable_1421,
            &make_variable_1422,
            &make_variable_1424,
            &make_variable_1425,
            &make_variable_143,
            &make_variable_1434,
            &make_variable_1435,
            &make_variable_1436,
            &make_variable_1437,
            &make_variable_1438,
            &make_variable_1439,
            &make_variable_144,
            &make_variable_1440,
            &make_variable_1441,
            &make_variable_1442,
            &make_variable_1443,
            &make_variable_1444,
            &make_variable_1445,
            &make_variable_1446,
            &make_variable_1447,
            &make_variable_1448,
            &make_variable_1449,
            &make_variable_145,
            &make_variable_1450,
            &make_variable_1451,
            &make_variable_1452,
            &make_variable_1453,
            &make_variable_1454,
            &make_variable_1455,
            &make_variable_1459,
            &make_variable_146,
            &make_variable_1460,
            &make_variable_1461,
            &make_variable_1463,
            &make_variable_1464,
            &make_variable_1465,
            &make_variable_1466,
            &make_variable_1467,
            &make_variable_1469,
            &make_variable_147,
            &make_variable_1471,
            &make_variable_1473,
            &make_variable_1475,
            &make_variable_1477,
            &make_variable_1479,
            &make_variable_148,
            &make_variable_1481,
            &make_variable_1483,
            &make_variable_1485,
            &make_variable_1487,
            &make_variable_1489,
            &make_variable_149,
            &make_variable_1493,
            &make_variable_1494,
            &make_variable_1495,
            &make_variable_1496,
            &make_variable_1497,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_variable_1378(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9164u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EffectiveDisplayName"),
                opcua::types::LocalizedText::new("", "EffectiveDisplayName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9160u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1379(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9165u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                opcua::types::LocalizedText::new("", "TransitionTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9160u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_138(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3077u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BuildInfo"),
                opcua::types::LocalizedText::new("", "BuildInfo"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 338u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3078u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3079u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3080u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3081u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3082u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3083u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3051u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2007u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1380(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9166u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EffectiveTransitionTime"),
                opcua::types::LocalizedText::new("", "EffectiveTransitionTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9160u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1381(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9167u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TrueState"),
                opcua::types::LocalizedText::new("", "TrueState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "Active"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9160u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1382(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9168u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "FalseState"),
                opcua::types::LocalizedText::new("", "FalseState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "Inactive"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9160u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1383(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11120u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputNode"),
                opcua::types::LocalizedText::new("", "InputNode"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1384(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9169u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SuppressedState"),
                opcua::types::LocalizedText::new("", "SuppressedState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9170u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9174u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9176u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9177u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9118u32),
                type_id: opcua::types::NodeId::new(0u16, 9004u32),
                is_forward: false,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8995u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1385(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9170u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9169u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1386(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9174u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                opcua::types::LocalizedText::new("", "TransitionTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9169u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1387(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9176u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TrueState"),
                opcua::types::LocalizedText::new("", "TrueState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "Suppressed"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9169u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1388(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9177u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "FalseState"),
                opcua::types::LocalizedText::new("", "FalseState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "Unsuppressed"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9169u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1389(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16371u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutOfServiceState"),
                opcua::types::LocalizedText::new("", "OutOfServiceState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16372u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16376u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16378u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16379u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8995u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_139(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3078u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ProductUri"),
                opcua::types::LocalizedText::new("", "ProductUri"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3077u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1390(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16372u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16371u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1391(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16376u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                opcua::types::LocalizedText::new("", "TransitionTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16371u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1392(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16378u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TrueState"),
                opcua::types::LocalizedText::new("", "TrueState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "Out of Service"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16371u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1393(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16379u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "FalseState"),
                opcua::types::LocalizedText::new("", "FalseState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "In Service"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16371u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1395(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9179u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CurrentState"),
                opcua::types::LocalizedText::new("", "CurrentState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9180u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2760u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9178u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1396(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9180u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9179u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1397(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9184u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "LastTransition"),
                opcua::types::LocalizedText::new("", "LastTransition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9185u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9188u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2767u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9178u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1398(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9185u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9184u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1399(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9188u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                opcua::types::LocalizedText::new("", "TransitionTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9184u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_140(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3079u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ManufacturerName"),
                opcua::types::LocalizedText::new("", "ManufacturerName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3077u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1400(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9189u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "UnshelveTime"),
                opcua::types::LocalizedText::new("", "UnshelveTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9178u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1402(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
                opcua::server::address_space::Base::new_full(
                    opcua::types::NodeId::new(0u16, 9214u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 290u32), description :
                            opcua::types::LocalizedText::new("",
                            "If not 0, this parameter specifies a fixed time for which the Alarm is to be shelved."),
                            name : "ShelvingTime".into(), value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::server::address_space::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 68u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::server::address_space::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::server::address_space::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 9213u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_1405(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9215u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SuppressedOrShelved"),
                opcua::types::LocalizedText::new("", "SuppressedOrShelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1406(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9216u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxTimeShelved"),
                opcua::types::LocalizedText::new("", "MaxTimeShelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1407(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16389u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "AudibleEnabled"),
                opcua::types::LocalizedText::new("", "AudibleEnabled"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1408(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16390u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "AudibleSound"),
                opcua::types::LocalizedText::new("", "AudibleSound"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 16307u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17986u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1409(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16380u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SilenceState"),
                opcua::types::LocalizedText::new("", "SilenceState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16381u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16385u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16387u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16388u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8995u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_141(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3080u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ProductName"),
                opcua::types::LocalizedText::new("", "ProductName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3077u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1410(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16381u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16380u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1411(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16385u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                opcua::types::LocalizedText::new("", "TransitionTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16380u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1412(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16387u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TrueState"),
                opcua::types::LocalizedText::new("", "TrueState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "Silenced"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16380u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1413(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16388u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "FalseState"),
                opcua::types::LocalizedText::new("", "FalseState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "Not Silenced"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16380u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1414(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16395u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OnDelay"),
                opcua::types::LocalizedText::new("", "OnDelay"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1415(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16396u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OffDelay"),
                opcua::types::LocalizedText::new("", "OffDelay"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1416(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16397u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "FirstInGroupFlag"),
                opcua::types::LocalizedText::new("", "FirstInGroupFlag"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1418(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18190u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "LatchedState"),
                opcua::types::LocalizedText::new("", "LatchedState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18191u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18195u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18197u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18198u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8995u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1419(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18191u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18190u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_142(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3081u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SoftwareVersion"),
                opcua::types::LocalizedText::new("", "SoftwareVersion"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3077u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1420(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18195u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionTime"),
                opcua::types::LocalizedText::new("", "TransitionTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18190u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1421(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18197u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TrueState"),
                opcua::types::LocalizedText::new("", "TrueState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "Latched"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18190u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1422(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18198u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "FalseState"),
                opcua::types::LocalizedText::new("", "FalseState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::LocalizedText::new("en", "Unlatched"),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 18190u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1424(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16400u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ReAlarmTime"),
                opcua::types::LocalizedText::new("", "ReAlarmTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1425(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16401u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ReAlarmRepeatCount"),
                opcua::types::LocalizedText::new("", "ReAlarmRepeatCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 4u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_143(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3082u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BuildNumber"),
                opcua::types::LocalizedText::new("", "BuildNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3077u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1434(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16407u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EventId"),
                opcua::types::LocalizedText::new("", "EventId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 15u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1435(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16408u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EventType"),
                opcua::types::LocalizedText::new("", "EventType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1436(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16409u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SourceNode"),
                opcua::types::LocalizedText::new("", "SourceNode"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1437(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16410u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SourceName"),
                opcua::types::LocalizedText::new("", "SourceName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1438(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16411u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Time"),
                opcua::types::LocalizedText::new("", "Time"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1439(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16412u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ReceiveTime"),
                opcua::types::LocalizedText::new("", "ReceiveTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_144(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3083u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BuildDate"),
                opcua::types::LocalizedText::new("", "BuildDate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3077u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1440(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16414u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Message"),
                opcua::types::LocalizedText::new("", "Message"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1441(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16415u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Severity"),
                opcua::types::LocalizedText::new("", "Severity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1442(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16416u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ConditionClassId"),
                opcua::types::LocalizedText::new("", "ConditionClassId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1443(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16417u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ConditionClassName"),
                opcua::types::LocalizedText::new("", "ConditionClassName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1444(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16420u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ConditionName"),
                opcua::types::LocalizedText::new("", "ConditionName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1445(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16421u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BranchId"),
                opcua::types::LocalizedText::new("", "BranchId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1446(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16422u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Retain"),
                opcua::types::LocalizedText::new("", "Retain"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1447(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16423u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EnabledState"),
                opcua::types::LocalizedText::new("", "EnabledState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16424u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8995u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1448(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16424u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16423u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1449(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16432u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Quality"),
                opcua::types::LocalizedText::new("", "Quality"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 19u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16433u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9002u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_145(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3084u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SecondsTillShutdown"),
                opcua::types::LocalizedText::new("", "SecondsTillShutdown"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2007u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1450(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16433u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SourceTimestamp"),
                opcua::types::LocalizedText::new("", "SourceTimestamp"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16432u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1451(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16434u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "LastSeverity"),
                opcua::types::LocalizedText::new("", "LastSeverity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16435u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9002u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1452(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16435u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SourceTimestamp"),
                opcua::types::LocalizedText::new("", "SourceTimestamp"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16434u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1453(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16436u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Comment"),
                opcua::types::LocalizedText::new("", "Comment"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16437u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9002u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1454(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16437u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SourceTimestamp"),
                opcua::types::LocalizedText::new("", "SourceTimestamp"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16436u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1455(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16438u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ClientUserId"),
                opcua::types::LocalizedText::new("", "ClientUserId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1459(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16442u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15u32),
                    description: opcua::types::LocalizedText::new(
                        "",
                        "The identifier for the event to comment.",
                    ),
                    name: "EventId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 21u32),
                    description: opcua::types::LocalizedText::new(
                        "",
                        "The comment to add to the condition.",
                    ),
                    name: "Comment".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16441u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_146(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3085u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ShutdownReason"),
                opcua::types::LocalizedText::new("", "ShutdownReason"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2007u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1460(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16443u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "AckedState"),
                opcua::types::LocalizedText::new("", "AckedState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16444u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8995u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1461(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16444u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16443u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1463(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16462u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15u32),
                    description: opcua::types::LocalizedText::new(
                        "",
                        "The identifier for the event to comment.",
                    ),
                    name: "EventId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 21u32),
                    description: opcua::types::LocalizedText::new(
                        "",
                        "The comment to add to the condition.",
                    ),
                    name: "Comment".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16461u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1464(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16465u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ActiveState"),
                opcua::types::LocalizedText::new("", "ActiveState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16466u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8995u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1465(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16466u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16465u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1466(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16474u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputNode"),
                opcua::types::LocalizedText::new("", "InputNode"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1467(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16519u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SuppressedOrShelved"),
                opcua::types::LocalizedText::new("", "SuppressedOrShelved"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16406u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1469(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9115u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "UnshelveTime"),
                opcua::types::LocalizedText::new("", "UnshelveTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2929u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_147(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2008u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ServiceLevel"),
                opcua::types::LocalizedText::new("", "ServiceLevel"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 3u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1471(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 6098u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateNumber"),
                opcua::types::LocalizedText::new("", "StateNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(1u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2930u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1473(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 6100u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateNumber"),
                opcua::types::LocalizedText::new("", "StateNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(2u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2932u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1475(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 6101u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateNumber"),
                opcua::types::LocalizedText::new("", "StateNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(3u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2933u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1477(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11322u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(12u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2935u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1479(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11323u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(13u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2936u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_148(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2742u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Auditing"),
                opcua::types::LocalizedText::new("", "Auditing"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1481(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11324u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(21u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2940u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1483(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11325u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(23u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2942u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1485(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11326u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(31u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2943u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1487(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11327u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(32u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2945u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1489(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
                opcua::server::address_space::Base::new_full(
                    opcua::types::NodeId::new(0u16, 2991u32),
                    opcua::types::NodeClass::Variable,
                    opcua::types::QualifiedName::new(0u16, "InputArguments"),
                    opcua::types::LocalizedText::new("", "InputArguments"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                opcua::types::NodeId::new(0u16, 296u32),
                false,
                1i32,
                opcua::types::DataValue::new_now(
                    opcua::types::Variant::from(
                        vec![
                            opcua::types::ExtensionObject::from_message(&
                            opcua::types::Argument { array_dimensions : None, data_type :
                            opcua::types::NodeId::new(0u16, 290u32), description :
                            opcua::types::LocalizedText::new("",
                            "If not 0, this parameter specifies a fixed time for which the Alarm is to be shelved."),
                            name : "ShelvingTime".into(), value_rank : - 1i32, }),
                        ],
                    ),
                ),
                1u8,
                1u8,
                Some(vec![0u32]),
                Some(0f64),
            )
            .into(),
        references: vec![
            opcua::server::address_space::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 68u32), type_id :
            opcua::types::NodeId::new(0u16, 40u32), is_forward : true, },
            opcua::server::address_space::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 78u32), type_id :
            opcua::types::NodeId::new(0u16, 37u32), is_forward : true, },
            opcua::server::address_space::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 2949u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_variable_149(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12882u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EstimatedReturnTime"),
                opcua::types::LocalizedText::new("", "EstimatedReturnTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 13u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2004u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1493(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11124u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "HighHighLimit"),
                opcua::types::LocalizedText::new("", "HighHighLimit"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 11u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2955u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1494(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11125u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "HighLimit"),
                opcua::types::LocalizedText::new("", "HighLimit"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 11u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2955u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1495(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11126u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "LowLimit"),
                opcua::types::LocalizedText::new("", "LowLimit"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 11u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2955u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1496(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11127u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "LowLowLimit"),
                opcua::types::LocalizedText::new("", "LowLowLimit"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 11u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2955u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1497(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16572u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BaseHighHighLimit"),
                opcua::types::LocalizedText::new("", "BaseHighHighLimit"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 11u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2955u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
