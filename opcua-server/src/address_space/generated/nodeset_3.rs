// This file was autogenerated from tools/schema/schemas/1.0.4/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as server;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::server::address_space::ImportedItem> + 'a> {
    Box::new(
        [
            &make_data_type_5 as &dyn Fn(_) -> opcua::server::address_space::ImportedItem,
            &make_data_type_6,
            &make_data_type_7,
            &make_data_type_71,
            &make_data_type_8,
            &make_data_type_861,
            &make_data_type_862,
            &make_data_type_863,
            &make_data_type_864,
            &make_data_type_865,
            &make_data_type_9,
            &make_data_type_940,
            &make_data_type_941,
            &make_data_type_942,
            &make_data_type_943,
            &make_data_type_944,
            &make_data_type_945,
            &make_data_type_946,
            &make_data_type_947,
            &make_data_type_948,
            &make_data_type_959,
            &make_method_1000,
            &make_method_1002,
            &make_method_1006,
            &make_method_1009,
            &make_method_1012,
            &make_method_1014,
            &make_method_1019,
            &make_method_1022,
            &make_method_1025,
            &make_method_1031,
            &make_method_1061,
            &make_method_1065,
            &make_method_1068,
            &make_method_1076,
            &make_method_1078,
            &make_method_1080,
            &make_method_1082,
            &make_method_1084,
            &make_method_1086,
            &make_method_1098,
            &make_method_1100,
            &make_method_1102,
            &make_method_1104,
            &make_method_1106,
            &make_method_1108,
            &make_method_1116,
            &make_method_1118,
            &make_method_1120,
            &make_method_1122,
            &make_method_1124,
            &make_method_1126,
            &make_method_1134,
            &make_method_1136,
            &make_method_1138,
            &make_method_1140,
            &make_method_1142,
            &make_method_1144,
            &make_method_1152,
            &make_method_1154,
            &make_method_1156,
            &make_method_1158,
            &make_method_1160,
            &make_method_1162,
            &make_method_1170,
            &make_method_1172,
            &make_method_1174,
            &make_method_1176,
            &make_method_1178,
            &make_method_1180,
            &make_method_1188,
            &make_method_1190,
            &make_method_1192,
            &make_method_1194,
            &make_method_1196,
            &make_method_1198,
            &make_method_1206,
            &make_method_1208,
            &make_method_1210,
            &make_method_1212,
            &make_method_1214,
            &make_method_1216,
            &make_method_1224,
            &make_method_1226,
            &make_method_1228,
            &make_method_1230,
            &make_method_1232,
            &make_method_1234,
            &make_method_1332,
            &make_method_1333,
            &make_method_1334,
            &make_method_1336,
            &make_method_1338,
            &make_method_1354,
            &make_method_1369,
            &make_method_1371,
            &make_method_1401,
            &make_method_1403,
            &make_method_1404,
            &make_method_1426,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_data_type_5(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 28u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "UInteger"),
                opcua::types::LocalizedText::new("", "UInteger"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 26u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_6(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 29u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Enumeration"),
                opcua::types::LocalizedText::new("", "Enumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 24u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_7(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 1u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Boolean"),
                opcua::types::LocalizedText::new("", "Boolean"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 24u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_71(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
                opcua::server::address_space::Base::new_full(
                    opcua::types::NodeId::new(0u16, 120u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(0u16, "NamingRuleType"),
                    opcua::types::LocalizedText::new("", "NamingRuleType"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The BrowseName must appear in all instances of the type."),
                                name : "Mandatory".into(), }, opcua::types::EnumField {
                                value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The BrowseName may appear in an instance of the type."),
                                name : "Optional".into(), }, opcua::types::EnumField { value
                                : 3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The modelling rule defines a constraint and the BrowseName is not used in an instance of the type."),
                                name : "Constraint".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::server::address_space::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 12169u32), type_id :
            opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::server::address_space::ImportedReference { target_id :
            opcua::types::NodeId::new(0u16, 29u32), type_id :
            opcua::types::NodeId::new(0u16, 45u32), is_forward : false, }
        ],
    }
}
#[allow(unused)]
fn make_data_type_8(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "SByte"),
                opcua::types::LocalizedText::new("", "SByte"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 27u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_861(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11737u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "BitFieldMaskDataType"),
                opcua::types::LocalizedText::new("", "BitFieldMaskDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 9u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_862(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 14533u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "KeyValuePair"),
                opcua::types::LocalizedText::new("", "KeyValuePair"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Key".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 20u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Value".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 24u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_863(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16313u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "AdditionalParametersType"),
                opcua::types::LocalizedText::new("", "AdditionalParametersType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![opcua::types::StructureField {
                        name: "Parameters".into(),
                        description: opcua::types::LocalizedText::new("", ""),
                        data_type: opcua::types::NodeId::new(0u16, 14533u32),
                        value_rank: 1i32,
                        array_dimensions: None,
                        max_string_length: 0u32,
                        is_optional: false,
                    }]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_864(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 17548u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "EphemeralKeyType"),
                opcua::types::LocalizedText::new("", "EphemeralKeyType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "PublicKey".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 15u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Signature".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 15u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_865(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15528u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "EndpointType"),
                opcua::types::LocalizedText::new("", "EndpointType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "EndpointUrl".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecurityMode".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 302u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SecurityPolicyUri".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "TransportProfileUri".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_9(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Byte"),
                opcua::types::LocalizedText::new("", "Byte"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 28u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_940(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18806u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "RationalNumber"),
                opcua::types::LocalizedText::new("", "RationalNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Numerator".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 6u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Denominator".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_941(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18807u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Vector"),
                opcua::types::LocalizedText::new("", "Vector"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_942(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18808u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "3DVector"),
                opcua::types::LocalizedText::new("", "3DVector"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "X".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Y".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Z".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 18807u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_943(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18809u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "CartesianCoordinates"),
                opcua::types::LocalizedText::new("", "CartesianCoordinates"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_944(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18810u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "3DCartesianCoordinates"),
                opcua::types::LocalizedText::new("", "3DCartesianCoordinates"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "X".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Y".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Z".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 18809u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_945(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18811u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Orientation"),
                opcua::types::LocalizedText::new("", "Orientation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_946(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18812u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "3DOrientation"),
                opcua::types::LocalizedText::new("", "3DOrientation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "A".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "B".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "C".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 11u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 18811u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_947(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18813u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "Frame"),
                opcua::types::LocalizedText::new("", "Frame"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 22u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_948(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18814u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "3DFrame"),
                opcua::types::LocalizedText::new("", "3DFrame"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "CartesianCoordinates".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 18810u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Orientation".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 18812u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 18813u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_data_type_959(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::DataType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11939u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(0u16, "OpenFileMode"),
                opcua::types::LocalizedText::new("", "OpenFileMode"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Read".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Write".into(),
                        },
                        opcua::types::EnumField {
                            value: 4i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "EraseExisting".into(),
                        },
                        opcua::types::EnumField {
                            value: 8i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "Append".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11940u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1000(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 13393u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Delete"),
                opcua::types::LocalizedText::new("", "Delete"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13394u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1002(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 13395u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "MoveOrCopy"),
                opcua::types::LocalizedText::new("", "MoveOrCopy"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13396u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13397u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13353u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1006(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16348u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CreateDirectory"),
                opcua::types::LocalizedText::new("", "CreateDirectory"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16349u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16350u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1009(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16351u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CreateFile"),
                opcua::types::LocalizedText::new("", "CreateFile"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16352u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16353u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1012(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16354u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Delete"),
                opcua::types::LocalizedText::new("", "Delete"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16355u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1014(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16356u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "MoveOrCopy"),
                opcua::types::LocalizedText::new("", "MoveOrCopy"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16357u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16358u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16314u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1019(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15746u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GenerateFileForRead"),
                opcua::types::LocalizedText::new("", "GenerateFileForRead"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15747u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15748u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1022(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15749u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "GenerateFileForWrite"),
                opcua::types::LocalizedText::new("", "GenerateFileForWrite"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16359u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15750u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1025(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15751u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "CloseAndCommit"),
                opcua::types::LocalizedText::new("", "CloseAndCommit"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15752u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15753u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1031(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15794u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15754u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1061(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15843u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Reset"),
                opcua::types::LocalizedText::new("", "Reset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1065(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15997u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddRole"),
                opcua::types::LocalizedText::new("", "AddRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15998u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15999u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15607u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1068(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16000u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveRole"),
                opcua::types::LocalizedText::new("", "RemoveRole"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16001u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15607u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1076(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15624u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15625u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1078(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15626u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15627u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1080(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16176u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16177u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1082(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16178u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16179u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1084(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16180u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16181u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1086(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16182u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16183u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1098(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15648u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15649u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15644u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1100(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15650u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15651u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15644u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1102(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16195u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16196u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15644u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1104(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16197u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16198u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15644u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1106(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16199u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16200u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15644u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1108(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16201u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16202u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15644u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1116(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15660u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15661u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15656u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1118(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15662u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15663u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15656u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1120(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16206u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16207u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15656u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1122(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16208u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16209u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15656u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1124(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16210u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16211u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15656u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1126(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16212u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16213u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15656u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1134(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15672u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15673u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1136(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15674u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15675u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1138(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16217u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16218u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1140(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16219u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16220u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1142(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16221u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16222u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1144(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16223u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16224u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15668u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1152(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15684u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15685u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1154(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15686u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15687u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1156(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16228u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16229u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1158(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16230u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16231u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1160(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16232u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16233u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1162(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16234u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16235u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15680u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1170(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16041u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16042u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1172(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16043u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16044u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1174(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16239u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16240u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1176(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16241u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16242u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1178(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16243u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16244u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1180(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16245u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16246u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16036u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1188(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15696u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15697u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1190(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15698u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15699u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1192(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16250u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16251u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1194(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16252u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16253u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1196(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16254u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16255u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1198(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16256u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16257u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15692u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1206(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15720u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15721u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1208(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15722u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15723u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1210(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16272u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16273u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1212(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16274u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16275u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1214(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16276u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16277u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1216(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16278u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16279u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15716u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1224(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15708u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddIdentity"),
                opcua::types::LocalizedText::new("", "AddIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15709u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1226(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15710u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveIdentity"),
                opcua::types::LocalizedText::new("", "RemoveIdentity"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15711u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1228(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16261u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddApplication"),
                opcua::types::LocalizedText::new("", "AddApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16262u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1230(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16263u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveApplication"),
                opcua::types::LocalizedText::new("", "RemoveApplication"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16264u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1232(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16265u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddEndpoint"),
                opcua::types::LocalizedText::new("", "AddEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16266u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1234(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16267u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "RemoveEndpoint"),
                opcua::types::LocalizedText::new("", "RemoveEndpoint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16268u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15704u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1332(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9028u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Disable"),
                opcua::types::LocalizedText::new("", "Disable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1333(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9027u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Enable"),
                opcua::types::LocalizedText::new("", "Enable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2803u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1334(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9029u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "AddComment"),
                opcua::types::LocalizedText::new("", "AddComment"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9030u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2829u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1336(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3875u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "ConditionRefresh"),
                opcua::types::LocalizedText::new("", "ConditionRefresh"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3876u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2787u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2788u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1338(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12912u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "ConditionRefresh2"),
                opcua::types::LocalizedText::new("", "ConditionRefresh2"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12913u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2787u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2788u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1354(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9069u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Respond"),
                opcua::types::LocalizedText::new("", "Respond"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9070u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8927u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2830u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1369(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9111u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Acknowledge"),
                opcua::types::LocalizedText::new("", "Acknowledge"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9112u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8944u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2881u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1371(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9113u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Confirm"),
                opcua::types::LocalizedText::new("", "Confirm"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9114u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 8961u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2881u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1401(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9213u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "TimedShelve"),
                opcua::types::LocalizedText::new("", "TimedShelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9214u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9178u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1403(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9211u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Unshelve"),
                opcua::types::LocalizedText::new("", "Unshelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9178u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1404(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9212u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "OneShotShelve"),
                opcua::types::LocalizedText::new("", "OneShotShelve"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11093u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 9178u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_1426(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Method::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16402u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(0u16, "Silence"),
                opcua::types::LocalizedText::new("", "Silence"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17242u32),
                type_id: opcua::types::NodeId::new(0u16, 3065u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2915u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
