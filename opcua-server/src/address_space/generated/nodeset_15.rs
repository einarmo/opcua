// This file was autogenerated from tools/schema/schemas/1.0.4/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as server;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::server::address_space::ImportedItem> + 'a> {
    Box::new(
        [
            &make_reference_type_1609 as &dyn Fn(_) -> opcua::server::address_space::ImportedItem,
            &make_reference_type_1610,
            &make_reference_type_1611,
            &make_reference_type_1612,
            &make_reference_type_1613,
            &make_reference_type_2509,
            &make_reference_type_2533,
            &make_reference_type_2752,
            &make_reference_type_2753,
            &make_reference_type_2823,
            &make_reference_type_2824,
            &make_reference_type_3184,
            &make_reference_type_33,
            &make_reference_type_34,
            &make_reference_type_35,
            &make_reference_type_36,
            &make_reference_type_37,
            &make_reference_type_38,
            &make_reference_type_39,
            &make_reference_type_40,
            &make_reference_type_41,
            &make_reference_type_42,
            &make_reference_type_43,
            &make_reference_type_44,
            &make_reference_type_45,
            &make_reference_type_46,
            &make_reference_type_47,
            &make_reference_type_48,
            &make_reference_type_49,
            &make_reference_type_50,
            &make_reference_type_51,
            &make_reference_type_52,
            &make_reference_type_53,
            &make_reference_type_54,
            &make_reference_type_55,
            &make_reference_type_56,
            &make_reference_type_899,
            &make_reference_type_95,
            &make_reference_type_96,
            &make_variable_100,
            &make_variable_1001,
            &make_variable_1003,
            &make_variable_1004,
            &make_variable_1007,
            &make_variable_1008,
            &make_variable_101,
            &make_variable_1010,
            &make_variable_1011,
            &make_variable_1013,
            &make_variable_1015,
            &make_variable_1016,
            &make_variable_1018,
            &make_variable_102,
            &make_variable_1020,
            &make_variable_1021,
            &make_variable_1023,
            &make_variable_1024,
            &make_variable_1026,
            &make_variable_1027,
            &make_variable_1029,
            &make_variable_103,
            &make_variable_1030,
            &make_variable_1034,
            &make_variable_1036,
            &make_variable_1038,
            &make_variable_104,
            &make_variable_1040,
            &make_variable_1042,
            &make_variable_1044,
            &make_variable_1046,
            &make_variable_1048,
            &make_variable_105,
            &make_variable_1050,
            &make_variable_1052,
            &make_variable_1054,
            &make_variable_1056,
            &make_variable_1058,
            &make_variable_106,
            &make_variable_1060,
            &make_variable_1064,
            &make_variable_1066,
            &make_variable_1067,
            &make_variable_1069,
            &make_variable_107,
            &make_variable_1071,
            &make_variable_1072,
            &make_variable_1073,
            &make_variable_1074,
            &make_variable_1075,
            &make_variable_1077,
            &make_variable_1079,
            &make_variable_108,
            &make_variable_1081,
            &make_variable_1083,
            &make_variable_1085,
            &make_variable_1087,
            &make_variable_1089,
            &make_variable_109,
            &make_variable_1093,
            &make_variable_1094,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_reference_type_1609(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 9006u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasCondition"),
                opcua::types::LocalizedText::new("", "HasCondition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsConditionOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1610(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 17276u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffectDisable"),
                opcua::types::LocalizedText::new("", "HasEffectDisable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeDisabledBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 54u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1611(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 17983u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffectEnable"),
                opcua::types::LocalizedText::new("", "HasEffectEnable"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeEnabledBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 54u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1612(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 17984u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffectSuppressed"),
                opcua::types::LocalizedText::new("", "HasEffectSuppressed"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeSuppressedBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 54u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_1613(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 17985u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffectUnsuppressed"),
                opcua::types::LocalizedText::new("", "HasEffectUnsuppressed"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeUnsuppressedBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 54u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_2509(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 14476u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasPubSubConnection"),
                opcua::types::LocalizedText::new("", "HasPubSubConnection"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "PubSubConnectionOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_2533(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 14936u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "DataSetToWriter"),
                opcua::types::LocalizedText::new("", "DataSetToWriter"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "WriterToDataSet")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_2752(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15296u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasDataSetWriter"),
                opcua::types::LocalizedText::new("", "HasDataSetWriter"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsWriterInGroup")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_2753(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18804u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasWriterGroup"),
                opcua::types::LocalizedText::new("", "HasWriterGroup"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsWriterGroupOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_2823(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15297u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasDataSetReader"),
                opcua::types::LocalizedText::new("", "HasDataSetReader"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsReaderInGroup")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_2824(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 18805u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasReaderGroup"),
                opcua::types::LocalizedText::new("", "HasReaderGroup"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "IsReaderGroupOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_3184(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 23469u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "AliasFor"),
                opcua::types::LocalizedText::new("", "AliasFor"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "HasAlias")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_33(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 31u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "References"),
                opcua::types::LocalizedText::new("", "References"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            true,
            None,
        )
        .into(),
        references: vec![],
    }
}
#[allow(unused)]
fn make_reference_type_34(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 32u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "NonHierarchicalReferences"),
                opcua::types::LocalizedText::new("", "NonHierarchicalReferences"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
            true,
            None,
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 31u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_35(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 33u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HierarchicalReferences"),
                opcua::types::LocalizedText::new("", "HierarchicalReferences"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            true,
            Some(opcua::types::LocalizedText::new(
                "",
                "HierarchicalReferences",
            )),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 31u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_36(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 34u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasChild"),
                opcua::types::LocalizedText::new("", "HasChild"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            true,
            Some(opcua::types::LocalizedText::new("", "ChildOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_37(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 35u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "Organizes"),
                opcua::types::LocalizedText::new("", "Organizes"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "OrganizedBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_38(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 36u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEventSource"),
                opcua::types::LocalizedText::new("", "HasEventSource"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "EventSourceOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 33u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_39(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 37u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasModellingRule"),
                opcua::types::LocalizedText::new("", "HasModellingRule"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "ModellingRuleOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_40(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 38u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEncoding"),
                opcua::types::LocalizedText::new("", "HasEncoding"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "EncodingOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_41(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 39u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasDescription"),
                opcua::types::LocalizedText::new("", "HasDescription"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "DescriptionOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_42(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 40u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasTypeDefinition"),
                opcua::types::LocalizedText::new("", "HasTypeDefinition"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "TypeDefinitionOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_43(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 41u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "GeneratesEvent"),
                opcua::types::LocalizedText::new("", "GeneratesEvent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "GeneratedBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_44(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3065u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "AlwaysGeneratesEvent"),
                opcua::types::LocalizedText::new("", "AlwaysGeneratesEvent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "AlwaysGeneratedBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 41u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_45(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 44u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "Aggregates"),
                opcua::types::LocalizedText::new("", "Aggregates"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            true,
            Some(opcua::types::LocalizedText::new("", "AggregatedBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 34u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_46(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 45u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasSubtype"),
                opcua::types::LocalizedText::new("", "HasSubtype"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "SubtypeOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 34u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_47(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 46u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasProperty"),
                opcua::types::LocalizedText::new("", "HasProperty"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "PropertyOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 44u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_48(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 47u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasComponent"),
                opcua::types::LocalizedText::new("", "HasComponent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "ComponentOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 44u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_49(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 48u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasNotifier"),
                opcua::types::LocalizedText::new("", "HasNotifier"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "NotifierOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 36u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_50(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 49u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasOrderedComponent"),
                opcua::types::LocalizedText::new("", "HasOrderedComponent"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "OrderedComponentOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_51(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 51u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "FromState"),
                opcua::types::LocalizedText::new("", "FromState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "ToTransition")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_52(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 52u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "ToState"),
                opcua::types::LocalizedText::new("", "ToState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "FromTransition")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_53(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 53u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasCause"),
                opcua::types::LocalizedText::new("", "HasCause"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeCausedBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_54(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 54u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasEffect"),
                opcua::types::LocalizedText::new("", "HasEffect"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "MayBeEffectedBy")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_55(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 117u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasSubStateMachine"),
                opcua::types::LocalizedText::new("", "HasSubStateMachine"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "SubStateMachineOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 32u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_56(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 56u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasHistoricalConfiguration"),
                opcua::types::LocalizedText::new("", "HasHistoricalConfiguration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "HistoricalConfigurationOf",
            )),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 44u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_899(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15112u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasGuard"),
                opcua::types::LocalizedText::new("", "HasGuard"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new("", "GuardOf")),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_95(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 129u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasArgumentDescription"),
                opcua::types::LocalizedText::new("", "HasArgumentDescription"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "ArgumentDescriptionOf",
            )),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 47u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_reference_type_96(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::ReferenceType::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 131u32),
                opcua::types::NodeClass::ReferenceType,
                opcua::types::QualifiedName::new(0u16, "HasOptionalInputArgumentDescription"),
                opcua::types::LocalizedText::new("", "HasOptionalInputArgumentDescription"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
            Some(opcua::types::LocalizedText::new(
                "",
                "OptionalInputArgumentDescriptionOf",
            )),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 129u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_variable_100(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15960u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "NamespacePublicationDate"),
                opcua::types::LocalizedText::new("", "NamespacePublicationDate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 13u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(
                opcua::types::DateTimeUtc::from_timestamp_micros(1611187200000000i64).unwrap(),
            )),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1001(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 13394u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "ObjectToDelete".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13393u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1003(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 13396u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "ObjectToMoveOrCopy".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "TargetDirectory".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 1u32),
                    description: Default::default(),
                    name: "CreateCopy".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "NewName".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13395u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1004(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 13397u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "NewNodeId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 13395u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1007(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16349u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "DirectoryName".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16348u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1008(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16350u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "DirectoryNodeId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16348u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_101(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15961u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "IsNamespaceSubset"),
                opcua::types::LocalizedText::new("", "IsNamespaceSubset"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(false)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1010(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16352u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "FileName".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 1u32),
                    description: Default::default(),
                    name: "RequestFileOpen".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16351u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1011(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16353u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "FileNodeId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16351u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1013(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16355u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "ObjectToDelete".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16354u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1015(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16357u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "ObjectToMoveOrCopy".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "TargetDirectory".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 1u32),
                    description: Default::default(),
                    name: "CreateCopy".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "NewName".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16356u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1016(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16358u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "NewNodeId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16356u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1018(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15745u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ClientProcessingTimeout"),
                opcua::types::LocalizedText::new("", "ClientProcessingTimeout"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15744u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_102(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15962u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StaticNodeIdTypes"),
                opcua::types::LocalizedText::new("", "StaticNodeIdTypes"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 256u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![0i32])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1020(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15747u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 24u32),
                    description: Default::default(),
                    name: "GenerateOptions".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15746u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1021(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15748u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "FileNodeId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "CompletionStateMachine".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15746u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1023(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16359u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 24u32),
                    description: Default::default(),
                    name: "GenerateOptions".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15749u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1024(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15750u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "FileNodeId".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15749u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1026(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15752u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 7u32),
                    description: Default::default(),
                    name: "FileHandle".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15751u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1027(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15753u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "CompletionStateMachine".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15751u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1029(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15755u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CurrentState"),
                opcua::types::LocalizedText::new("", "CurrentState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15756u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2760u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15754u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_103(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15963u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StaticNumericNodeIdRange"),
                opcua::types::LocalizedText::new("", "StaticNumericNodeIdRange"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 291u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                "1:2252",
                "2270",
                "2273",
                "2280",
                "2283",
                "2291:2293",
                "2297:2734",
                "2738:2991",
                "2995",
                "2998:3703",
                "3710:11191",
                "11194:11195",
                "11202:11241",
                "11243:11272",
                "11276:11280",
                "11284:11311",
                "11315:11491",
                "11495:11501",
                "11503:11701",
                "11706",
                "11708",
                "11716:12164",
                "12169:12748",
                "12752:12872",
                "12875:12884",
                "12888:12910",
                "12912:14414",
                "14416:15003",
                "15005:15605",
                "15607:16300",
                "16306:17633",
                "17635:19090",
                "19092:2147483647",
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1030(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15756u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Id"),
                opcua::types::LocalizedText::new("", "Id"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15755u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1034(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15816u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateNumber"),
                opcua::types::LocalizedText::new("", "StateNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(1u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15815u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1036(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15818u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateNumber"),
                opcua::types::LocalizedText::new("", "StateNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(2u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15817u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1038(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15820u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateNumber"),
                opcua::types::LocalizedText::new("", "StateNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(3u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15819u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_104(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15964u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StaticStringNodeIdPattern"),
                opcua::types::LocalizedText::new("", "StaticStringNodeIdPattern"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from("")),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1040(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15822u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateNumber"),
                opcua::types::LocalizedText::new("", "StateNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(4u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15821u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1042(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15824u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StateNumber"),
                opcua::types::LocalizedText::new("", "StateNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(5u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15823u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1044(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15826u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(12u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15825u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1046(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15828u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(23u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15827u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1048(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15830u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(31u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15829u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_105(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16134u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DefaultRolePermissions"),
                opcua::types::LocalizedText::new("", "DefaultRolePermissions"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 96u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1050(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15832u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(14u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15831u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1052(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15834u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(41u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15833u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1054(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15836u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(25u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15835u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1056(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15838u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(35u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15837u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1058(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15840u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(45u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15839u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_106(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16135u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DefaultUserRolePermissions"),
                opcua::types::LocalizedText::new("", "DefaultUserRolePermissions"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 96u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1060(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15842u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransitionNumber"),
                opcua::types::LocalizedText::new("", "TransitionNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(51u32)),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15841u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1064(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16162u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Identities"),
                opcua::types::LocalizedText::new("", "Identities"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 15634u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15608u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1066(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15998u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "RoleName".into(),
                    value_rank: -1i32,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "NamespaceUri".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15997u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1067(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15999u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OutputArguments"),
                opcua::types::LocalizedText::new("", "OutputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "RoleNodeId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15997u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1069(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16001u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 17u32),
                    description: Default::default(),
                    name: "RoleNodeId".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16000u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_107(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16136u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DefaultAccessRestrictions"),
                opcua::types::LocalizedText::new("", "DefaultAccessRestrictions"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 95u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15957u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1071(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16173u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Identities"),
                opcua::types::LocalizedText::new("", "Identities"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 15634u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1072(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16174u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Applications"),
                opcua::types::LocalizedText::new("", "Applications"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1073(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15410u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ApplicationsExclude"),
                opcua::types::LocalizedText::new("", "ApplicationsExclude"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1074(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16175u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Endpoints"),
                opcua::types::LocalizedText::new("", "Endpoints"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 15528u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1075(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15411u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EndpointsExclude"),
                opcua::types::LocalizedText::new("", "EndpointsExclude"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15620u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1077(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15625u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15634u32),
                    description: Default::default(),
                    name: "Rule".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15624u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1079(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15627u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15634u32),
                    description: Default::default(),
                    name: "Rule".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15626u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_108(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3068u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "NodeVersion"),
                opcua::types::LocalizedText::new("", "NodeVersion"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 68u32),
            type_id: opcua::types::NodeId::new(0u16, 40u32),
            is_forward: true,
        }],
    }
}
#[allow(unused)]
fn make_variable_1081(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16177u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "ApplicationUri".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16176u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1083(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16179u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 12u32),
                    description: Default::default(),
                    name: "ApplicationUri".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16178u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1085(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16181u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15528u32),
                    description: Default::default(),
                    name: "Endpoint".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16180u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1087(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16183u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 296u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::Argument {
                    array_dimensions: None,
                    data_type: opcua::types::NodeId::new(0u16, 15528u32),
                    description: Default::default(),
                    name: "Endpoint".into(),
                    value_rank: -1i32,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 16182u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1089(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 15633u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EnumValues"),
                opcua::types::LocalizedText::new("", "EnumValues"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7594u32),
            false,
            1i32,
            opcua::types::DataValue::new_now(opcua::types::Variant::from(vec![
                opcua::types::ExtensionObject::from_message(&opcua::types::EnumValueType {
                    description: Default::default(),
                    display_name: opcua::types::LocalizedText::new("", "UserName"),
                    value: 1i64,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::EnumValueType {
                    description: Default::default(),
                    display_name: opcua::types::LocalizedText::new("", "Thumbprint"),
                    value: 2i64,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::EnumValueType {
                    description: Default::default(),
                    display_name: opcua::types::LocalizedText::new("", "Role"),
                    value: 3i64,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::EnumValueType {
                    description: Default::default(),
                    display_name: opcua::types::LocalizedText::new("", "GroupId"),
                    value: 4i64,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::EnumValueType {
                    description: Default::default(),
                    display_name: opcua::types::LocalizedText::new("", "Anonymous"),
                    value: 5i64,
                }),
                opcua::types::ExtensionObject::from_message(&opcua::types::EnumValueType {
                    description: Default::default(),
                    display_name: opcua::types::LocalizedText::new("", "AuthenticatedUser"),
                    value: 6i64,
                }),
            ])),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15632u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_109(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12170u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ViewVersion"),
                opcua::types::LocalizedText::new("", "ViewVersion"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![opcua::server::address_space::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 68u32),
            type_id: opcua::types::NodeId::new(0u16, 40u32),
            is_forward: true,
        }],
    }
}
#[allow(unused)]
fn make_variable_1093(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16192u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Identities"),
                opcua::types::LocalizedText::new("", "Identities"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 15634u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15644u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_1094(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 16193u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Applications"),
                opcua::types::LocalizedText::new("", "Applications"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 15644u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
