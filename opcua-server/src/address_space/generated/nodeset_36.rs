// This file was autogenerated from tools/schema/schemas/1.0.4/Opc.Ua.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as server;
    pub use opcua_types as types;
}
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::server::address_space::ImportedItem> + 'a> {
    Box::new(
        [
            &make_variable_468 as &dyn Fn(_) -> opcua::server::address_space::ImportedItem,
            &make_variable_469,
            &make_variable_471,
            &make_variable_473,
            &make_variable_474,
            &make_variable_475,
            &make_variable_477,
            &make_variable_479,
            &make_variable_481,
            &make_variable_482,
            &make_variable_490,
            &make_variable_492,
            &make_variable_494,
            &make_variable_496,
            &make_variable_499,
            &make_variable_500,
            &make_variable_501,
            &make_variable_502,
            &make_variable_504,
            &make_variable_506,
            &make_variable_507,
            &make_variable_511,
            &make_variable_514,
            &make_variable_516,
            &make_variable_519,
            &make_variable_520,
            &make_variable_524,
            &make_variable_525,
            &make_variable_526,
            &make_variable_527,
            &make_variable_528,
            &make_variable_529,
            &make_variable_530,
            &make_variable_531,
            &make_variable_532,
            &make_variable_533,
            &make_variable_534,
            &make_variable_535,
            &make_variable_537,
            &make_variable_538,
            &make_variable_539,
            &make_variable_540,
            &make_variable_541,
            &make_variable_542,
            &make_variable_544,
            &make_variable_545,
            &make_variable_546,
            &make_variable_547,
            &make_variable_548,
            &make_variable_549,
            &make_variable_550,
            &make_variable_551,
            &make_variable_552,
            &make_variable_553,
            &make_variable_554,
            &make_variable_555,
            &make_variable_557,
            &make_variable_558,
            &make_variable_559,
            &make_variable_560,
            &make_variable_561,
            &make_variable_563,
            &make_variable_564,
            &make_variable_565,
            &make_variable_566,
            &make_variable_568,
            &make_variable_569,
            &make_variable_570,
            &make_variable_571,
            &make_variable_572,
            &make_variable_573,
            &make_variable_574,
            &make_variable_575,
            &make_variable_576,
            &make_variable_577,
            &make_variable_578,
            &make_variable_579,
            &make_variable_580,
            &make_variable_581,
            &make_variable_582,
            &make_variable_583,
            &make_variable_584,
            &make_variable_585,
            &make_variable_586,
            &make_variable_587,
            &make_variable_588,
            &make_variable_589,
            &make_variable_590,
            &make_variable_591,
            &make_variable_592,
            &make_variable_593,
            &make_variable_594,
            &make_variable_595,
            &make_variable_596,
            &make_variable_597,
            &make_variable_598,
            &make_variable_599,
            &make_variable_601,
            &make_variable_602,
            &make_variable_603,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_variable_468(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2747u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ClientCertificateThumbprint"),
                opcua::types::LocalizedText::new("", "ClientCertificateThumbprint"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2071u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_469(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2074u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "RevisedSessionTimeout"),
                opcua::types::LocalizedText::new("", "RevisedSessionTimeout"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2071u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_471(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2749u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EndpointUrl"),
                opcua::types::LocalizedText::new("", "EndpointUrl"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2748u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_473(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2076u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ClientSoftwareCertificates"),
                opcua::types::LocalizedText::new("", "ClientSoftwareCertificates"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 344u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2075u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_474(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2077u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "UserIdentityToken"),
                opcua::types::LocalizedText::new("", "UserIdentityToken"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 316u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2075u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_475(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11485u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SecureChannelId"),
                opcua::types::LocalizedText::new("", "SecureChannelId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2075u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_477(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2079u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "RequestHandle"),
                opcua::types::LocalizedText::new("", "RequestHandle"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2078u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_479(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2081u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Certificate"),
                opcua::types::LocalizedText::new("", "Certificate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 15u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2080u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_481(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2083u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InvalidHostname"),
                opcua::types::LocalizedText::new("", "InvalidHostname"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2082u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_482(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2084u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InvalidUri"),
                opcua::types::LocalizedText::new("", "InvalidUri"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2082u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_490(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2092u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "NodesToAdd"),
                opcua::types::LocalizedText::new("", "NodesToAdd"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 376u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2091u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_492(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2094u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "NodesToDelete"),
                opcua::types::LocalizedText::new("", "NodesToDelete"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 382u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2093u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_494(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2096u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ReferencesToAdd"),
                opcua::types::LocalizedText::new("", "ReferencesToAdd"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 379u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2095u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_496(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2098u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ReferencesToDelete"),
                opcua::types::LocalizedText::new("", "ReferencesToDelete"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 385u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2097u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_499(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2750u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "AttributeId"),
                opcua::types::LocalizedText::new("", "AttributeId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2100u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_500(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2101u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "IndexRange"),
                opcua::types::LocalizedText::new("", "IndexRange"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 291u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2100u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_501(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2102u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "OldValue"),
                opcua::types::LocalizedText::new("", "OldValue"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 24u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2100u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_502(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2103u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "NewValue"),
                opcua::types::LocalizedText::new("", "NewValue"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 24u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2100u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_504(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2751u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ParameterDataTypeId"),
                opcua::types::LocalizedText::new("", "ParameterDataTypeId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2104u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_506(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2128u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MethodId"),
                opcua::types::LocalizedText::new("", "MethodId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2127u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_507(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2129u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "InputArguments"),
                opcua::types::LocalizedText::new("", "InputArguments"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 24u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2127u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_511(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11696u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SystemState"),
                opcua::types::LocalizedText::new("", "SystemState"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 852u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11446u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_514(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2134u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Changes"),
                opcua::types::LocalizedText::new("", "Changes"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 877u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2133u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_516(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2739u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Changes"),
                opcua::types::LocalizedText::new("", "Changes"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 897u32),
            false,
            1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            Some(vec![0u32]),
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2738u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_519(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12502u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Context"),
                opcua::types::LocalizedText::new("", "Context"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 24u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11436u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_520(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12503u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Progress"),
                opcua::types::LocalizedText::new("", "Progress"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 5u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 68u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11436u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_524(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2139u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "StartTime"),
                opcua::types::LocalizedText::new("", "StartTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2138u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_525(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2140u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CurrentTime"),
                opcua::types::LocalizedText::new("", "CurrentTime"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2138u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_526(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2141u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "State"),
                opcua::types::LocalizedText::new("", "State"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 852u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2138u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_527(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2142u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BuildInfo"),
                opcua::types::LocalizedText::new("", "BuildInfo"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 338u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3698u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3699u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3700u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3701u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3702u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3703u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3051u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2138u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_528(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3698u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ProductUri"),
                opcua::types::LocalizedText::new("", "ProductUri"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_529(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3699u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ManufacturerName"),
                opcua::types::LocalizedText::new("", "ManufacturerName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_530(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3700u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ProductName"),
                opcua::types::LocalizedText::new("", "ProductName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_531(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3701u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SoftwareVersion"),
                opcua::types::LocalizedText::new("", "SoftwareVersion"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_532(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3702u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BuildNumber"),
                opcua::types::LocalizedText::new("", "BuildNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_533(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3703u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BuildDate"),
                opcua::types::LocalizedText::new("", "BuildDate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2142u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_534(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2752u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SecondsTillShutdown"),
                opcua::types::LocalizedText::new("", "SecondsTillShutdown"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2138u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_535(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2753u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ShutdownReason"),
                opcua::types::LocalizedText::new("", "ShutdownReason"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 21u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2138u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_537(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3052u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ProductUri"),
                opcua::types::LocalizedText::new("", "ProductUri"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3051u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_538(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3053u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ManufacturerName"),
                opcua::types::LocalizedText::new("", "ManufacturerName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3051u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_539(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3054u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ProductName"),
                opcua::types::LocalizedText::new("", "ProductName"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3051u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_540(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3055u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SoftwareVersion"),
                opcua::types::LocalizedText::new("", "SoftwareVersion"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3051u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_541(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3056u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BuildNumber"),
                opcua::types::LocalizedText::new("", "BuildNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 12u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3051u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_542(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 3057u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "BuildDate"),
                opcua::types::LocalizedText::new("", "BuildDate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 294u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(1000f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 3051u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_544(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2151u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ServerViewCount"),
                opcua::types::LocalizedText::new("", "ServerViewCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_545(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2152u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CurrentSessionCount"),
                opcua::types::LocalizedText::new("", "CurrentSessionCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_546(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2153u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CumulatedSessionCount"),
                opcua::types::LocalizedText::new("", "CumulatedSessionCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_547(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2154u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SecurityRejectedSessionCount"),
                opcua::types::LocalizedText::new("", "SecurityRejectedSessionCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_548(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2155u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "RejectedSessionCount"),
                opcua::types::LocalizedText::new("", "RejectedSessionCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_549(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2156u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SessionTimeoutCount"),
                opcua::types::LocalizedText::new("", "SessionTimeoutCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_550(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2157u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SessionAbortCount"),
                opcua::types::LocalizedText::new("", "SessionAbortCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_551(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2159u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "PublishingIntervalCount"),
                opcua::types::LocalizedText::new("", "PublishingIntervalCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_552(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2160u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CurrentSubscriptionCount"),
                opcua::types::LocalizedText::new("", "CurrentSubscriptionCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_553(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2161u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CumulatedSubscriptionCount"),
                opcua::types::LocalizedText::new("", "CumulatedSubscriptionCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_554(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2162u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SecurityRejectedRequestsCount"),
                opcua::types::LocalizedText::new("", "SecurityRejectedRequestsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_555(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2163u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "RejectedRequestsCount"),
                opcua::types::LocalizedText::new("", "RejectedRequestsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2150u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_557(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12779u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SamplingIntervalDiagnostics"),
                opcua::types::LocalizedText::new("", "SamplingIntervalDiagnostics"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 856u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12780u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12781u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12782u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12783u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2165u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 83u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2164u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_558(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12780u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SamplingInterval"),
                opcua::types::LocalizedText::new("", "SamplingInterval"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12779u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_559(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12781u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SampledMonitoredItemsCount"),
                opcua::types::LocalizedText::new("", "SampledMonitoredItemsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12779u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_560(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12782u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxSampledMonitoredItemsCount"),
                opcua::types::LocalizedText::new("", "MaxSampledMonitoredItemsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12779u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_561(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12783u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DisabledMonitoredItemsSamplingCount"),
                opcua::types::LocalizedText::new("", "DisabledMonitoredItemsSamplingCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12779u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_563(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2166u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SamplingInterval"),
                opcua::types::LocalizedText::new("", "SamplingInterval"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2165u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_564(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11697u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SampledMonitoredItemsCount"),
                opcua::types::LocalizedText::new("", "SampledMonitoredItemsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2165u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_565(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11698u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxSampledMonitoredItemsCount"),
                opcua::types::LocalizedText::new("", "MaxSampledMonitoredItemsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2165u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_566(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 11699u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DisabledMonitoredItemsSamplingCount"),
                opcua::types::LocalizedText::new("", "DisabledMonitoredItemsSamplingCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2165u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_568(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12784u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SubscriptionDiagnostics"),
                opcua::types::LocalizedText::new("", "SubscriptionDiagnostics"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 874u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12785u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12786u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12787u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12788u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12789u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12790u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12791u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12792u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12793u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12794u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12795u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12796u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12797u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12798u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12799u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12800u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12801u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12802u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12803u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12804u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12805u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12806u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12807u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12808u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12809u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12810u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12811u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12812u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12813u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12814u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12815u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2172u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 83u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2171u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_569(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12785u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SessionId"),
                opcua::types::LocalizedText::new("", "SessionId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_570(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12786u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SubscriptionId"),
                opcua::types::LocalizedText::new("", "SubscriptionId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_571(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12787u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Priority"),
                opcua::types::LocalizedText::new("", "Priority"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 3u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_572(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12788u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "PublishingInterval"),
                opcua::types::LocalizedText::new("", "PublishingInterval"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 290u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_573(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12789u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxKeepAliveCount"),
                opcua::types::LocalizedText::new("", "MaxKeepAliveCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_574(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12790u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxLifetimeCount"),
                opcua::types::LocalizedText::new("", "MaxLifetimeCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_575(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12791u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MaxNotificationsPerPublish"),
                opcua::types::LocalizedText::new("", "MaxNotificationsPerPublish"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_576(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12792u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "PublishingEnabled"),
                opcua::types::LocalizedText::new("", "PublishingEnabled"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 1u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_577(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12793u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "ModifyCount"),
                opcua::types::LocalizedText::new("", "ModifyCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_578(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12794u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EnableCount"),
                opcua::types::LocalizedText::new("", "EnableCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_579(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12795u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DisableCount"),
                opcua::types::LocalizedText::new("", "DisableCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_580(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12796u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "RepublishRequestCount"),
                opcua::types::LocalizedText::new("", "RepublishRequestCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_581(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12797u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "RepublishMessageRequestCount"),
                opcua::types::LocalizedText::new("", "RepublishMessageRequestCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_582(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12798u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "RepublishMessageCount"),
                opcua::types::LocalizedText::new("", "RepublishMessageCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_583(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12799u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransferRequestCount"),
                opcua::types::LocalizedText::new("", "TransferRequestCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_584(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12800u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransferredToAltClientCount"),
                opcua::types::LocalizedText::new("", "TransferredToAltClientCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_585(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12801u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "TransferredToSameClientCount"),
                opcua::types::LocalizedText::new("", "TransferredToSameClientCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_586(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12802u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "PublishRequestCount"),
                opcua::types::LocalizedText::new("", "PublishRequestCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_587(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12803u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DataChangeNotificationsCount"),
                opcua::types::LocalizedText::new("", "DataChangeNotificationsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_588(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12804u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EventNotificationsCount"),
                opcua::types::LocalizedText::new("", "EventNotificationsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_589(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12805u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "NotificationsCount"),
                opcua::types::LocalizedText::new("", "NotificationsCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_590(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12806u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "LatePublishRequestCount"),
                opcua::types::LocalizedText::new("", "LatePublishRequestCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_591(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12807u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CurrentKeepAliveCount"),
                opcua::types::LocalizedText::new("", "CurrentKeepAliveCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_592(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12808u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "CurrentLifetimeCount"),
                opcua::types::LocalizedText::new("", "CurrentLifetimeCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_593(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12809u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "UnacknowledgedMessageCount"),
                opcua::types::LocalizedText::new("", "UnacknowledgedMessageCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_594(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12810u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DiscardedMessageCount"),
                opcua::types::LocalizedText::new("", "DiscardedMessageCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_595(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12811u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MonitoredItemCount"),
                opcua::types::LocalizedText::new("", "MonitoredItemCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_596(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12812u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "DisabledMonitoredItemCount"),
                opcua::types::LocalizedText::new("", "DisabledMonitoredItemCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_597(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12813u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "MonitoringQueueOverflowCount"),
                opcua::types::LocalizedText::new("", "MonitoringQueueOverflowCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_598(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12814u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "NextSequenceNumber"),
                opcua::types::LocalizedText::new("", "NextSequenceNumber"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_599(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 12815u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "EventQueueOverflowCount"),
                opcua::types::LocalizedText::new("", "EventQueueOverflowCount"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12784u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_601(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2173u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SessionId"),
                opcua::types::LocalizedText::new("", "SessionId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 17u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2172u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_602(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2174u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "SubscriptionId"),
                opcua::types::LocalizedText::new("", "SubscriptionId"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 7u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2172u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_variable_603(
    ns_map: &opcua::server::address_space::NodeSetNamespaceMapper<'_>,
) -> opcua::server::address_space::ImportedItem {
    opcua::server::address_space::ImportedItem {
        node: opcua::server::address_space::Variable::new_full(
            opcua::server::address_space::Base::new_full(
                opcua::types::NodeId::new(0u16, 2175u32),
                opcua::types::NodeClass::Variable,
                opcua::types::QualifiedName::new(0u16, "Priority"),
                opcua::types::LocalizedText::new("", "Priority"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::types::NodeId::new(0u16, 3u32),
            false,
            -1i32,
            opcua::types::DataValue::null(),
            1u8,
            1u8,
            None,
            Some(0f64),
        )
        .into(),
        references: vec![
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 63u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::server::address_space::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 2172u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
