// This file was autogenerated from schema/Opc.Ua.Pn.NodeSet2.xml by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Einar Omang
pub(super) fn imported_nodes<'a>(
    ns_map: &'a opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> Box<dyn Iterator<Item = opcua::nodes::ImportedItem> + 'a> {
    Box::new(
        [
            &make_data_type_0 as &dyn Fn(_) -> opcua::nodes::ImportedItem,
            &make_data_type_10,
            &make_data_type_12,
            &make_data_type_14,
            &make_data_type_16,
            &make_data_type_18,
            &make_data_type_2,
            &make_data_type_20,
            &make_data_type_22,
            &make_data_type_24,
            &make_data_type_26,
            &make_data_type_28,
            &make_data_type_30,
            &make_data_type_32,
            &make_data_type_34,
            &make_data_type_36,
            &make_data_type_39,
            &make_data_type_4,
            &make_data_type_6,
            &make_data_type_8,
            &make_method_101,
            &make_method_119,
            &make_method_234,
            &make_method_263,
            &make_method_265,
            &make_method_267,
            &make_method_287,
            &make_object_100,
            &make_object_104,
            &make_object_113,
            &make_object_118,
            &make_object_121,
            &make_object_130,
            &make_object_132,
            &make_object_134,
            &make_object_143,
            &make_object_151,
            &make_object_153,
            &make_object_155,
            &make_object_171,
            &make_object_172,
            &make_object_175,
            &make_object_178,
            &make_object_181,
            &make_object_188,
            &make_object_194,
            &make_object_219,
            &make_object_220,
            &make_object_221,
            &make_object_223,
            &make_object_232,
            &make_object_233,
            &make_object_237,
            &make_object_243,
            &make_object_245,
            &make_object_250,
            &make_object_276,
            &make_object_281,
            &make_object_286,
            &make_object_289,
            &make_object_292,
            &make_object_302,
            &make_object_308,
            &make_object_310,
            &make_object_311,
            &make_object_316,
            &make_object_326,
            &make_object_328,
            &make_object_329,
            &make_object_335,
            &make_object_353,
            &make_object_361,
            &make_object_362,
            &make_object_363,
            &make_object_364,
            &make_object_365,
            &make_object_366,
            &make_object_367,
            &make_object_368,
            &make_object_369,
            &make_object_85,
            &make_object_87,
            &make_object_88,
            &make_object_90,
            &make_object_99,
            &make_object_type_103,
            &make_object_type_105,
            &make_object_type_108,
            &make_object_type_123,
            &make_object_type_128,
            &make_object_type_131,
            &make_object_type_144,
            &make_object_type_150,
            &make_object_type_152,
            &make_object_type_164,
            &make_object_type_165,
            &make_object_type_170,
            &make_object_type_174,
            &make_object_type_177,
            &make_object_type_180,
        ]
        .into_iter()
        .map(|f| f(ns_map)),
    )
}
#[allow(unused)]
fn make_data_type_0(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3021u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "IMTagSelectorEnumeration",
                ),
                opcua::types::LocalizedText::new("", "IMTagSelectorEnumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "FUNCTION".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "LOCATION".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "BOTH".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6194u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_10(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3011u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        ns_map.get_index(1u16).unwrap(),
                        "PnChannelAccumulativeEnumeration",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "PnChannelAccumulativeEnumeration",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Single channel \nDiagnosis only for the reported channel\n"),
                                name : "SINGLE".into(), }, opcua::types::EnumField { value :
                                256i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "Multiple channel \nAccumulative diagnosis from more than one channel\n"),
                                name : "ACCUMULATIVE".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6016u32), type_id
            : opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            29u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_12(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3014u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnChannelDirectionEnumeration",
                ),
                opcua::types::LocalizedText::new("", "PnChannelDirectionEnumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Manufacturer specific",
                            ),
                            name: "MANUFACTURER_SPECIFIC".into(),
                        },
                        opcua::types::EnumField {
                            value: 8192i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Input"),
                            name: "INPUT_CHANNEL".into(),
                        },
                        opcua::types::EnumField {
                            value: 16384i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Output"),
                            name: "OUTPUT_CHANNEL".into(),
                        },
                        opcua::types::EnumField {
                            value: 24576i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Input/Output"),
                            name: "BIDIRECTIONAL_CHANNEL".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6019u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_14(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3012u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnChannelMaintenanceEnumeration",
                ),
                opcua::types::LocalizedText::new("", "PnChannelMaintenanceEnumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Fault"),
                            name: "FAULT".into(),
                        },
                        opcua::types::EnumField {
                            value: 512i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Maintenance required",
                            ),
                            name: "MAINTENANCE_REQUIRED".into(),
                        },
                        opcua::types::EnumField {
                            value: 1024i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Maintenance demanded",
                            ),
                            name: "MAINTENANCE_DEMANDED".into(),
                        },
                        opcua::types::EnumField {
                            value: 1536i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Use QualifiedChannelQualifier variable",
                            ),
                            name: "USE_QUALIFIED_CHANNEL_QUALIFIER".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6017u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_16(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3013u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        ns_map.get_index(1u16).unwrap(),
                        "PnChannelSpecifierEnumeration",
                    ),
                    opcua::types::LocalizedText::new(
                        "",
                        "PnChannelSpecifierEnumeration",
                    ),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The Diagnosis ASE contains no longer any entries (of any severity) for this channel"),
                                name : "ALL_DISAPPEARS".into(), }, opcua::types::EnumField {
                                value : 2048i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "An event appears and/or exists further\nThe Diagnosis ASE contains this and possible other entries for this channel.\n"),
                                name : "APPEARS".into(), }, opcua::types::EnumField { value
                                : 4096i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "An event disappears and/or exists no longer\nThe Diagnosis ASE contains no longer any entries of the same severity for this channel\n"),
                                name : "DISAPPEARS".into(), }, opcua::types::EnumField {
                                value : 6144i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "An event disappears\nThe Diagnosis ASE still contains other entries of the same severity for this channel\n"),
                                name : "DISAPPEARS_OTHER_REMAIN".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6018u32), type_id
            : opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            29u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_18(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3010u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        ns_map.get_index(1u16).unwrap(),
                        "PnChannelTypeEnumeration",
                    ),
                    opcua::types::LocalizedText::new("", "PnChannelTypeEnumeration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Shall be used if the field ChannelNumber contains the value 0x8000 (submodule)\nFurthermore, it shall be used if none of the below defined types are appropriate.\n"),
                                name : "UNSPECIFIC".into(), }, opcua::types::EnumField {
                                value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The data length of this channel is 1 Bit."), name : "1BIT"
                                .into(), }, opcua::types::EnumField { value : 2i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The data length of this channel is 2 Bit."), name : "2BIT"
                                .into(), }, opcua::types::EnumField { value : 3i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The data length of this channel is 4 Bit."), name : "4BIT"
                                .into(), }, opcua::types::EnumField { value : 4i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The data length of this channel is 8 Bit."), name : "8BIT"
                                .into(), }, opcua::types::EnumField { value : 5i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The data length of this channel is 16 Bit."), name :
                                "16BIT".into(), }, opcua::types::EnumField { value : 6i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The data length of this channel is 32 Bit."), name :
                                "32BIT".into(), }, opcua::types::EnumField { value : 7i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The data length of this channel is 64 Bit."), name :
                                "64BIT".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6015u32), type_id
            : opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            29u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_2(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3004u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        ns_map.get_index(1u16).unwrap(),
                        "PnARStateEnumeration",
                    ),
                    opcua::types::LocalizedText::new("", "PnARStateEnumeration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The AR connection to the device is established"), name :
                                "CONNECTED".into(), }, opcua::types::EnumField { value :
                                1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The AR connection to the device is not established"), name
                                : "UNCONNECTED".into(), }, opcua::types::EnumField { value :
                                2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The AR connection to the device is not established because the device is not available in the network"),
                                name : "UNCONNECTED_ERR_DEVICE_NOT_FOUND".into(), },
                                opcua::types::EnumField { value : 3i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The AR connection to the device is not established because the IP address of the device exists multiple times"),
                                name : "UNCONNECTED_ERR_DUPLICATE_IP".into(), },
                                opcua::types::EnumField { value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The AR connection to the device is not established because the Name of Station of the device exists multiple times"),
                                name : "UNCONNECTED_ERR_DUPLICATE_NOS".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6009u32), type_id
            : opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            29u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_20(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3003u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        ns_map.get_index(1u16).unwrap(),
                        "PnDeviceStateEnumeration",
                    ),
                    opcua::types::LocalizedText::new("", "PnDeviceStateEnumeration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The device is not online, or no information is available. The device is offline if no ARs other than possible Device Access AR’s exist."),
                                name : "OFFLINE".into(), }, opcua::types::EnumField { value
                                : 1i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The device is a docking device and currently not online."),
                                name : "OFFLINE_DOCKING".into(), }, opcua::types::EnumField
                                { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The device is online. This is the case if at least one AR other than possible Device Access AR’s exists."),
                                name : "ONLINE".into(), }, opcua::types::EnumField { value :
                                3i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The device is a docking device and currently online."),
                                name : "ONLINE_DOCKING".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6008u32), type_id
            : opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            29u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_22(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3017u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnLinkStateEnumeration",
                ),
                opcua::types::LocalizedText::new("", "PnLinkStateEnumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Ready to pass packets",
                            ),
                            name: "UP".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "No packets are passed",
                            ),
                            name: "DOWN".into(),
                        },
                        opcua::types::EnumField {
                            value: 3i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "In some test mode"),
                            name: "TESTING".into(),
                        },
                        opcua::types::EnumField {
                            value: 4i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Status cannot be determined",
                            ),
                            name: "UNKNOWN".into(),
                        },
                        opcua::types::EnumField {
                            value: 5i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "In pending state waiting  for some external event",
                            ),
                            name: "DORMANT".into(),
                        },
                        opcua::types::EnumField {
                            value: 6i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Port not present"),
                            name: "NOT_PRESENT".into(),
                        },
                        opcua::types::EnumField {
                            value: 7i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Down due to lower layer",
                            ),
                            name: "LOWER_LAYER_DOWN".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6022u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_24(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3006u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        ns_map.get_index(1u16).unwrap(),
                        "PnModuleStateEnumeration",
                    ),
                    opcua::types::LocalizedText::new("", "PnModuleStateEnumeration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "For example module not plugged"), name : "NO_MODULE"
                                .into(), }, opcua::types::EnumField { value : 1i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "For example ModuleIdentNumber wrong"), name :
                                "WRONG_MODULE".into(), }, opcua::types::EnumField { value :
                                2i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "Module is okay but at least one submodule is locked, wrong or missing"),
                                name : "PROPER_MODULE".into(), }, opcua::types::EnumField {
                                value : 3i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Module is not the same as requested – but the IO device was able to adapt by its own knowledge"),
                                name : "SUBSTITUTE".into(), }, opcua::types::EnumField {
                                value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", "Default state"), name
                                : "OK".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6011u32), type_id
            : opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            29u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_26(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3018u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        ns_map.get_index(1u16).unwrap(),
                        "PnPortStateEnumeration",
                    ),
                    opcua::types::LocalizedText::new("", "PnPortStateEnumeration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "Status cannot be determined"), name : "UNKNOWN".into(), },
                                opcua::types::EnumField { value : 1i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The port is administratively disabled and discarding frames"),
                                name : "DISABLED_DISCARDING".into(), },
                                opcua::types::EnumField { value : 2i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The port blocks incoming frames"), name : "BLOCKING"
                                .into(), }, opcua::types::EnumField { value : 3i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("",
                                "The port is listening to and sending BPDUs (Bridge Protocol Data Units)."),
                                name : "LISTENING".into(), }, opcua::types::EnumField {
                                value : 4i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name : "LEARNING"
                                .into(), }, opcua::types::EnumField { value : 5i64,
                                display_name : opcua::types::LocalizedText::new("", ""),
                                description : opcua::types::LocalizedText::new("", ""), name
                                : "FORWARDING".into(), }, opcua::types::EnumField { value :
                                6i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("", ""),
                                name : "BROKEN".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6023u32), type_id
            : opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            29u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_28(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3007u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnSubmoduleAddInfoEnumeration",
                ),
                opcua::types::LocalizedText::new("", "PnSubmoduleAddInfoEnumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", ""),
                            name: "NO_ADD_INFO".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "This Submodule is not available for takeover by IOSAR.",
                            ),
                            name: "TAKEOVER_NOT_ALLOWED".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6012u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_30(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3008u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        ns_map.get_index(1u16).unwrap(),
                        "PnSubmoduleARInfoEnumeration",
                    ),
                    opcua::types::LocalizedText::new("", "PnSubmoduleARInfoEnumeration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "This AR is owner of the submodule"), name : "OWN".into(),
                                }, opcua::types::EnumField { value : 128i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "This AR is owner of the submodule but it is blocked. For example parameter checking pending"),
                                name : "APPLICATION_READY_PENDING".into(), },
                                opcua::types::EnumField { value : 256i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "This AR is not owner of the submodule. It is blocked by superordinated means"),
                                name : "SUPERORDINATED_LOCKED".into(), },
                                opcua::types::EnumField { value : 384i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "This AR is not owner of the submodule. It is owned by another IOAR"),
                                name : "LOCKED_BY_IO_CONTROLLER".into(), },
                                opcua::types::EnumField { value : 512i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "This AR is not owner of the submodule. It is owned by another IOSAR"),
                                name : "LOCKED_BY_IO_SUPERVISOR".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6013u32), type_id
            : opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            29u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_32(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3009u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnSubmoduleIdentInfoEnumeration",
                ),
                opcua::types::LocalizedText::new("", "PnSubmoduleIdentInfoEnumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "OK"),
                            name: "OK".into(),
                        },
                        opcua::types::EnumField {
                            value: 2048i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Substitute (SU)"),
                            name: "SUBSTITUTE".into(),
                        },
                        opcua::types::EnumField {
                            value: 4096i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Wrong (WR)"),
                            name: "WRONG".into(),
                        },
                        opcua::types::EnumField {
                            value: 6144i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "NoSubmodule (NO)"),
                            name: "NO_SUBMODULE".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6014u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_34(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3002u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnDeviceRoleOptionSet",
                ),
                opcua::types::LocalizedText::new("", "PnDeviceRoleOptionSet"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "The device contains an IO device interface.",
                            ),
                            name: "IO_DEVICE".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "The device contains an IO controller interface.",
                            ),
                            name: "IO_CONTROLLER".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "The device contains multiple IO device interfaces.",
                            ),
                            name: "IO_MULTIDEVICE".into(),
                        },
                        opcua::types::EnumField {
                            value: 3i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "The device contains an IO supervisor interface.",
                            ),
                            name: "IO_SUPERVISOR".into(),
                        },
                        opcua::types::EnumField {
                            value: 4i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "The device contains an CIM device interface.",
                            ),
                            name: "IO_CIM".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5001u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5003u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5002u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6001u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 12755u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_36(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3019u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnDeviceDiagnosisDataType",
                ),
                opcua::types::LocalizedText::new("", "PnDeviceDiagnosisDataType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "API".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Slot".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 5u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Subslot".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 5u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ChannelNumber".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 5u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Type".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(
                                ns_map.get_index(1u16).unwrap(),
                                3010u32,
                            ),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Accumulative".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(
                                ns_map.get_index(1u16).unwrap(),
                                3011u32,
                            ),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Maintenance".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(
                                ns_map.get_index(1u16).unwrap(),
                                3012u32,
                            ),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Specifier".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(
                                ns_map.get_index(1u16).unwrap(),
                                3013u32,
                            ),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Direction".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(
                                ns_map.get_index(1u16).unwrap(),
                                3014u32,
                            ),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "UserStructureIdentifier".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 5u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ChannelErrorType".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 5u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ExtChannelErrorType".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 5u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ExtChannelAddValue".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "QualifiedChannelQualifier".into(),
                            description: opcua::types::LocalizedText::new("", ""),
                            data_type: opcua::types::NodeId::new(0u16, 7u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "ManufacturerData".into(),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Manufacturer specific diagnosis data",
                            ),
                            data_type: opcua::types::NodeId::new(0u16, 15u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "Message".into(),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Diagnosis message read from the GSDML",
                            ),
                            data_type: opcua::types::NodeId::new(0u16, 21u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "HelpText".into(),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Help text read from the GSDML",
                            ),
                            data_type: opcua::types::NodeId::new(0u16, 21u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5004u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5006u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5005u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 22u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_39(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3020u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "PnIM5DataType"),
                opcua::types::LocalizedText::new("", "PnIM5DataType"),
                Some(opcua::types::LocalizedText::new(
                    "",
                    "Contains the fields of the APDU element I&M5 | I&M5Data",
                )),
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::StructureDefinition {
                    fields: Some(vec![
                        opcua::types::StructureField {
                            name: "Annotation".into(),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "I&M5Data | IM_Annotation",
                            ),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "OrderId".into(),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "I&M5Data | IM_OrderID",
                            ),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "VendorId".into(),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "I&M5Data | VendorID",
                            ),
                            data_type: opcua::types::NodeId::new(0u16, 5u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SerialNumber".into(),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "I&M5Data | IM_Serial_Number",
                            ),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "HardwareRevision".into(),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "I&M5Data | IM_Hardware_Revision",
                            ),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                        opcua::types::StructureField {
                            name: "SoftwareRevision".into(),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "I&M5Data | IM_Software_Revision",
                            ),
                            data_type: opcua::types::NodeId::new(0u16, 12u32),
                            value_rank: -1i32,
                            array_dimensions: None,
                            max_string_length: 0u32,
                            is_optional: false,
                        },
                    ]),
                    default_encoding_id: opcua::types::NodeId::null(),
                    base_data_type: opcua::types::NodeId::null(),
                    structure_type: opcua::types::StructureType::Structure,
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5007u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5009u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5008u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 22u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_4(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
                opcua::nodes::Base::new_full(
                    opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3005u32),
                    opcua::types::NodeClass::DataType,
                    opcua::types::QualifiedName::new(
                        ns_map.get_index(1u16).unwrap(),
                        "PnARTypeEnumeration",
                    ),
                    opcua::types::LocalizedText::new("", "PnARTypeEnumeration"),
                    None,
                    Some(0u32),
                    Some(0u32),
                ),
                false,
                Some(
                    opcua::types::EnumDefinition {
                        fields: Some(
                            vec![
                                opcua::types::EnumField { value : 0i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("", ""), name :
                                "IOCARSingle".into(), }, opcua::types::EnumField { value :
                                6i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "The supervisor AR is a special form of the IOCARSingle allowing takeover of the ownership of a submodule"),
                                name : "IOSAR".into(), }, opcua::types::EnumField { value :
                                16i64, display_name : opcua::types::LocalizedText::new("",
                                ""), description : opcua::types::LocalizedText::new("",
                                "This is a special form of the IOCARSingle indicating RT_CLASS_3 communication"),
                                name : "IOCARSingleUsingRT_CLASS_3".into(), },
                                opcua::types::EnumField { value : 32i64, display_name :
                                opcua::types::LocalizedText::new("", ""), description :
                                opcua::types::LocalizedText::new("",
                                "The SR AR is a special form of the IOCARSingle indicating system redundancy or dynamic reconfiguration usage"),
                                name : "IOCARSR".into(), },
                            ],
                        ),
                    }
                        .into(),
                ),
            )
            .into(),
        references: vec![
            opcua::nodes::ImportedReference { target_id :
            opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6010u32), type_id
            : opcua::types::NodeId::new(0u16, 46u32), is_forward : true, },
            opcua::nodes::ImportedReference { target_id : opcua::types::NodeId::new(0u16,
            29u32), type_id : opcua::types::NodeId::new(0u16, 45u32), is_forward : false,
            }
        ],
    }
}
#[allow(unused)]
fn make_data_type_6(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3016u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnAssetChangeEnumeration",
                ),
                opcua::types::LocalizedText::new("", "PnAssetChangeEnumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Asset has been added",
                            ),
                            name: "INSERTED".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Asset has been removed",
                            ),
                            name: "REMOVED".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new(
                                "",
                                "Asset has been changed",
                            ),
                            name: "CHANGED".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6021u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_data_type_8(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::DataType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3015u32),
                opcua::types::NodeClass::DataType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnAssetTypeEnumeration",
                ),
                opcua::types::LocalizedText::new("", "PnAssetTypeEnumeration"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            Some(
                opcua::types::EnumDefinition {
                    fields: Some(vec![
                        opcua::types::EnumField {
                            value: 0i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Device"),
                            name: "DEVICE".into(),
                        },
                        opcua::types::EnumField {
                            value: 1i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Real Module"),
                            name: "MODULE".into(),
                        },
                        opcua::types::EnumField {
                            value: 2i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Real Submodule"),
                            name: "SUBMODULE".into(),
                        },
                        opcua::types::EnumField {
                            value: 3i64,
                            display_name: opcua::types::LocalizedText::new("", ""),
                            description: opcua::types::LocalizedText::new("", "Asset"),
                            name: "ASSET".into(),
                        },
                    ]),
                }
                .into(),
            ),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6020u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 29u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_101(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7005u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "ShowLocation"),
                opcua::types::LocalizedText::new("", "ShowLocation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1032u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_119(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7004u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "SetNameOfStation",
                ),
                opcua::types::LocalizedText::new("", "SetNameOfStation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6095u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1008u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_234(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7006u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "ShowLocation"),
                opcua::types::LocalizedText::new("", "ShowLocation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5042u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_263(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7002u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "SetDate"),
                opcua::types::LocalizedText::new("", "SetDate"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6063u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1005u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_265(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7003u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "SetDescriptor"),
                opcua::types::LocalizedText::new("", "SetDescriptor"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6064u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1005u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_267(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7001u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "SetTags"),
                opcua::types::LocalizedText::new("", "SetTags"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6062u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1005u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_method_287(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Method::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7007u32),
                opcua::types::NodeClass::Method,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "SetNameOfStation",
                ),
                opcua::types::LocalizedText::new("", "SetNameOfStation"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6236u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5012u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_100(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5038u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Modules"),
                opcua::types::LocalizedText::new("", "Modules"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1032u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1026u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_104(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5043u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "ARs"),
                opcua::types::LocalizedText::new("", "ARs"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1035u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1030u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_113(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5011u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "EthernetInterface",
                ),
                opcua::types::LocalizedText::new("", "EthernetInterface"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1008u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1014u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6115u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_118(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5020u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Ports"),
                opcua::types::LocalizedText::new("", "Ports"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1011u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1008u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_121(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5021u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Statistic"),
                opcua::types::LocalizedText::new("", "Statistic"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1012u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1008u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_130(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5032u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Submodules"),
                opcua::types::LocalizedText::new("", "Submodules"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1023u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1027u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_132(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5030u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Alarms"),
                opcua::types::LocalizedText::new("", "Alarms"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1025u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_134(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5029u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "IM"),
                opcua::types::LocalizedText::new("", "IM"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6148u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1025u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6149u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1005u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6150u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6151u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6152u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6153u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6154u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6155u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_143(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5028u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Submodules"),
                opcua::types::LocalizedText::new("", "Submodules"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1021u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1025u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_151(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5026u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "State"),
                opcua::types::LocalizedText::new("", "State"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1018u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1022u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_153(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5024u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Alarms"),
                opcua::types::LocalizedText::new("", "Alarms"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1020u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_155(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5023u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "IM"),
                opcua::types::LocalizedText::new("", "IM"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6135u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1020u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6136u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1005u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6137u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6138u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6139u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6140u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6141u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6142u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_171(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5015u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "<ComponentName>",
                ),
                opcua::types::LocalizedText::new("", "<ComponentName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1013u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1013u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_172(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5014u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<FeatureName>"),
                opcua::types::LocalizedText::new("", "<FeatureName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1013u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1016u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_175(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5017u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<PortName>"),
                opcua::types::LocalizedText::new("", "<PortName>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1014u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1015u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11510u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_178(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5016u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<EthernetPort>"),
                opcua::types::LocalizedText::new("", "<EthernetPort>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1015u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1015u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_181(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5035u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<ARs>"),
                opcua::types::LocalizedText::new("", "<ARs>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1030u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4016u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6164u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1029u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6165u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6166u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_188(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5034u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Modules"),
                opcua::types::LocalizedText::new("", "Modules"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1029u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1028u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_194(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5010u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<Assets>"),
                opcua::types::LocalizedText::new("", "<Assets>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1007u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4006u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6077u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6078u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6079u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6080u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6081u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6082u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1006u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6083u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6084u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6085u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6086u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_219(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5042u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<PnEquipments>"),
                opcua::types::LocalizedText::new("", "<PnEquipments>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1033u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5049u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5047u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6204u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5048u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5044u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1032u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5046u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1003u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1002u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7006u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6203u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_220(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5049u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Alarms"),
                opcua::types::LocalizedText::new("", "Alarms"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5042u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_221(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5047u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Assets"),
                opcua::types::LocalizedText::new("", "Assets"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5042u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1007u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_223(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5048u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "IM"),
                opcua::types::LocalizedText::new("", "IM"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6195u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5042u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6196u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1005u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6197u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6198u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6199u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6200u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6201u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6202u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_232(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5044u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Interfaces"),
                opcua::types::LocalizedText::new("", "Interfaces"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5042u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1009u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_233(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5046u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Modules"),
                opcua::types::LocalizedText::new("", "Modules"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5042u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1026u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_237(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5033u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<Modules>"),
                opcua::types::LocalizedText::new("", "<Modules>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1028u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4004u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6217u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6216u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6182u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1027u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6181u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6183u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5053u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_243(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5053u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Submodules"),
                opcua::types::LocalizedText::new("", "Submodules"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1023u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5033u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_245(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5027u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<Submodules>"),
                opcua::types::LocalizedText::new("", "<Submodules>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1023u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4005u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6187u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6230u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6229u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6189u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1022u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5056u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6188u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_250(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5056u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "State"),
                opcua::types::LocalizedText::new("", "State"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1018u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5027u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_276(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5012u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<Interfaces>"),
                opcua::types::LocalizedText::new("", "<Interfaces>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1009u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4007u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6193u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6232u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6191u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6231u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5057u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1008u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6190u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6234u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6233u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5045u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7007u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5058u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6192u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_281(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5057u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "EthernetInterface",
                ),
                opcua::types::LocalizedText::new("", "EthernetInterface"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5012u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1014u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6235u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_286(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5045u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Ports"),
                opcua::types::LocalizedText::new("", "Ports"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1011u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5012u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_289(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5058u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Statistic"),
                opcua::types::LocalizedText::new("", "Statistic"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1012u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5012u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_292(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5013u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<Ports>"),
                opcua::types::LocalizedText::new("", "<Ports>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1011u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4008u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1010u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_302(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5018u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "EthernetPort"),
                opcua::types::LocalizedText::new("", "EthernetPort"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1010u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1015u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_308(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5019u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Statistic"),
                opcua::types::LocalizedText::new("", "Statistic"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1012u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1010u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_310(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5031u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<Modules>"),
                opcua::types::LocalizedText::new("", "<Modules>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1026u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4002u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5052u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6215u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6206u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6205u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6180u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5051u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1025u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1003u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1002u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6098u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5050u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_311(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5052u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Alarms"),
                opcua::types::LocalizedText::new("", "Alarms"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5031u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_316(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5051u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "IM"),
                opcua::types::LocalizedText::new("", "IM"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6207u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5031u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6208u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1005u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6209u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6210u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6211u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6212u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6213u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6214u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_326(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5050u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Submodules"),
                opcua::types::LocalizedText::new("", "Submodules"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1021u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5031u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_328(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5025u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "<Submodules>"),
                opcua::types::LocalizedText::new("", "<Submodules>"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1021u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4003u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5055u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6184u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6228u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6219u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6218u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6186u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5054u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1020u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11508u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1003u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1002u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6185u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_329(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5055u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Alarms"),
                opcua::types::LocalizedText::new("", "Alarms"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5025u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_335(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5054u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "IM"),
                opcua::types::LocalizedText::new("", "IM"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6220u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5025u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6221u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1005u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6222u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6223u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6224u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6225u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6226u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6227u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_353(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5022u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "http://opcfoundation.org/UA/PROFINET/",
                ),
                opcua::types::LocalizedText::new("", "http://opcfoundation.org/UA/PROFINET/"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6116u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11616u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 11715u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6117u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6118u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6119u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6120u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6121u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6122u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_361(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5001u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default Binary"),
                opcua::types::LocalizedText::new("", "Default Binary"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 76u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3002u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6006u32),
                type_id: opcua::types::NodeId::new(0u16, 39u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_362(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5002u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default XML"),
                opcua::types::LocalizedText::new("", "Default XML"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 76u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3002u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6007u32),
                type_id: opcua::types::NodeId::new(0u16, 39u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_363(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5003u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default JSON"),
                opcua::types::LocalizedText::new("", "Default JSON"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 76u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3002u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_364(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5004u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default Binary"),
                opcua::types::LocalizedText::new("", "Default Binary"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 76u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3019u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6042u32),
                type_id: opcua::types::NodeId::new(0u16, 39u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_365(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5005u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default XML"),
                opcua::types::LocalizedText::new("", "Default XML"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 76u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3019u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6043u32),
                type_id: opcua::types::NodeId::new(0u16, 39u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_366(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5006u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default JSON"),
                opcua::types::LocalizedText::new("", "Default JSON"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 76u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3019u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_367(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5007u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default Binary"),
                opcua::types::LocalizedText::new("", "Default Binary"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 76u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3020u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6044u32),
                type_id: opcua::types::NodeId::new(0u16, 39u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_368(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5008u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default XML"),
                opcua::types::LocalizedText::new("", "Default XML"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 76u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3020u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6045u32),
                type_id: opcua::types::NodeId::new(0u16, 39u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_369(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5009u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(0u16, "Default JSON"),
                opcua::types::LocalizedText::new("", "Default JSON"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 76u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 3020u32),
                type_id: opcua::types::NodeId::new(0u16, 38u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_85(ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5036u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Nodes"),
                opcua::types::LocalizedText::new("", "Nodes"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1031u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1033u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_87(ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5041u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Alarms"),
                opcua::types::LocalizedText::new("", "Alarms"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1032u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 61u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_88(ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5039u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Assets"),
                opcua::types::LocalizedText::new("", "Assets"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1032u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1007u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_90(ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5040u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "IM"),
                opcua::types::LocalizedText::new("", "IM"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6167u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1032u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 80u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6168u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1005u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6169u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6170u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6171u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6172u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6173u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6174u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_99(ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::Object::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5037u32),
                opcua::types::NodeClass::Object,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "Interfaces"),
                opcua::types::LocalizedText::new("", "Interfaces"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            opcua::nodes::EventNotifier::from_bits_truncate(0u8),
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1032u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 78u32),
                type_id: opcua::types::NodeId::new(0u16, 37u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1009u32),
                type_id: opcua::types::NodeId::new(0u16, 40u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_103(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1035u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "IPnControllerType",
                ),
                opcua::types::LocalizedText::new("", "IPnControllerType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5043u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1032u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_105(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1034u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "IPnDeviceType"),
                opcua::types::LocalizedText::new("", "IPnDeviceType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6177u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1032u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6178u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_108(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1008u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "IPnInterfaceType",
                ),
                opcua::types::LocalizedText::new("", "IPnInterfaceType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6091u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6092u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6088u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6089u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5011u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17602u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6087u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6094u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6093u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5020u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 7004u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5021u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6090u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5012u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_123(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1024u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(ns_map.get_index(1u16).unwrap(), "IPnModuleType"),
                opcua::types::LocalizedText::new("", "IPnModuleType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6147u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6146u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6145u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17602u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6144u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_128(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1027u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "IPnExpectedModuleType",
                ),
                opcua::types::LocalizedText::new("", "IPnExpectedModuleType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1024u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6157u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5032u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5033u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_131(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1025u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "IPnRealModuleType",
                ),
                opcua::types::LocalizedText::new("", "IPnRealModuleType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5030u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6156u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5029u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1024u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1003u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1002u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5028u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5031u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_144(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1019u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "IPnSubmoduleType",
                ),
                opcua::types::LocalizedText::new("", "IPnSubmoduleType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6130u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6134u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6133u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6132u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 17602u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6131u32),
                type_id: opcua::types::NodeId::new(0u16, 46u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_150(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1022u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "IPnExpectedSubmoduleType",
                ),
                opcua::types::LocalizedText::new("", "IPnExpectedSubmoduleType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1019u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5026u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5027u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_152(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1020u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "IPnRealSubmoduleType",
                ),
                opcua::types::LocalizedText::new("", "IPnRealSubmoduleType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5024u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6143u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5023u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1019u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1003u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1002u32),
                type_id: opcua::types::NodeId::new(0u16, 41u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5025u32),
                type_id: opcua::types::NodeId::new(0u16, 17603u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_164(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1016u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "NetworkComponentFeatureType",
                ),
                opcua::types::LocalizedText::new("", "NetworkComponentFeatureType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![opcua::nodes::ImportedReference {
            target_id: opcua::types::NodeId::new(0u16, 58u32),
            type_id: opcua::types::NodeId::new(0u16, 45u32),
            is_forward: false,
        }],
    }
}
#[allow(unused)]
fn make_object_type_165(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1017u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "IPv4FeatureType",
                ),
                opcua::types::LocalizedText::new("", "IPv4FeatureType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6113u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6114u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6111u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1016u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6112u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_170(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1013u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "NetworkComponentType",
                ),
                opcua::types::LocalizedText::new("", "NetworkComponentType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            true,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5015u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5014u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6109u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_174(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1014u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "EthernetInterfaceType",
                ),
                opcua::types::LocalizedText::new("", "EthernetInterfaceType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5017u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1013u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6110u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_177(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1015u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "EthernetPortType",
                ),
                opcua::types::LocalizedText::new("", "EthernetPortType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5016u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4015u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1013u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 6179u32),
                type_id: opcua::types::NodeId::new(0u16, 47u32),
                is_forward: true,
            },
        ],
    }
}
#[allow(unused)]
fn make_object_type_180(
    ns_map: &opcua::nodes::NodeSetNamespaceMapper<'_>,
) -> opcua::nodes::ImportedItem {
    opcua::nodes::ImportedItem {
        node: opcua::nodes::ObjectType::new_full(
            opcua::nodes::Base::new_full(
                opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 1030u32),
                opcua::types::NodeClass::ObjectType,
                opcua::types::QualifiedName::new(
                    ns_map.get_index(1u16).unwrap(),
                    "PnApplicationRelationContainerType",
                ),
                opcua::types::LocalizedText::new("", "PnApplicationRelationContainerType"),
                None,
                Some(0u32),
                Some(0u32),
            ),
            false,
        )
        .into(),
        references: vec![
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 5035u32),
                type_id: opcua::types::NodeId::new(ns_map.get_index(1u16).unwrap(), 4016u32),
                is_forward: true,
            },
            opcua::nodes::ImportedReference {
                target_id: opcua::types::NodeId::new(0u16, 58u32),
                type_id: opcua::types::NodeId::new(0u16, 45u32),
                is_forward: false,
            },
        ],
    }
}
