// This file was autogenerated from schema/Opc.Ua.Pn.NodeIds.csv by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Einar Omang
#[allow(non_camel_case_types, clippy::enum_variant_names)]
#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash)]
#[repr(u32)]
pub enum DataTypeId {
    PnDeviceRoleOptionSet = 3002u32,
    PnDeviceStateEnumeration = 3003u32,
    PnARStateEnumeration = 3004u32,
    PnARTypeEnumeration = 3005u32,
    PnModuleStateEnumeration = 3006u32,
    PnSubmoduleAddInfoEnumeration = 3007u32,
    PnSubmoduleARInfoEnumeration = 3008u32,
    PnSubmoduleIdentInfoEnumeration = 3009u32,
    PnChannelTypeEnumeration = 3010u32,
    PnChannelAccumulativeEnumeration = 3011u32,
    PnChannelMaintenanceEnumeration = 3012u32,
    PnChannelSpecifierEnumeration = 3013u32,
    PnChannelDirectionEnumeration = 3014u32,
    PnAssetTypeEnumeration = 3015u32,
    PnAssetChangeEnumeration = 3016u32,
    PnLinkStateEnumeration = 3017u32,
    PnPortStateEnumeration = 3018u32,
    PnDeviceDiagnosisDataType = 3019u32,
    PnIM5DataType = 3020u32,
    IMTagSelectorEnumeration = 3021u32,
}
impl<'a> From<&'a DataTypeId> for opcua::types::NodeId {
    fn from(r: &'a DataTypeId) -> Self {
        opcua::types::NodeId::new(0, *r as u32)
    }
}
impl From<DataTypeId> for opcua::types::NodeId {
    fn from(r: DataTypeId) -> Self {
        opcua::types::NodeId::new(0, r as u32)
    }
}
impl From<DataTypeId> for opcua::types::ExpandedNodeId {
    fn from(r: DataTypeId) -> Self {
        Self {
            node_id: opcua::types::NodeId::new(0, r as u32),
            namespace_uri: Default::default(),
            server_index: 0,
        }
    }
}
impl TryFrom<u32> for DataTypeId {
    type Error = ();
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        Ok(match value {
            3002u32 => Self::PnDeviceRoleOptionSet,
            3003u32 => Self::PnDeviceStateEnumeration,
            3004u32 => Self::PnARStateEnumeration,
            3005u32 => Self::PnARTypeEnumeration,
            3006u32 => Self::PnModuleStateEnumeration,
            3007u32 => Self::PnSubmoduleAddInfoEnumeration,
            3008u32 => Self::PnSubmoduleARInfoEnumeration,
            3009u32 => Self::PnSubmoduleIdentInfoEnumeration,
            3010u32 => Self::PnChannelTypeEnumeration,
            3011u32 => Self::PnChannelAccumulativeEnumeration,
            3012u32 => Self::PnChannelMaintenanceEnumeration,
            3013u32 => Self::PnChannelSpecifierEnumeration,
            3014u32 => Self::PnChannelDirectionEnumeration,
            3015u32 => Self::PnAssetTypeEnumeration,
            3016u32 => Self::PnAssetChangeEnumeration,
            3017u32 => Self::PnLinkStateEnumeration,
            3018u32 => Self::PnPortStateEnumeration,
            3019u32 => Self::PnDeviceDiagnosisDataType,
            3020u32 => Self::PnIM5DataType,
            3021u32 => Self::IMTagSelectorEnumeration,
            _ => return Err(()),
        })
    }
}
#[allow(non_camel_case_types, clippy::enum_variant_names)]
#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash)]
#[repr(u32)]
pub enum MethodId {
    PnIdentificationType_SetTags = 7001u32,
    PnIdentificationType_SetDate = 7002u32,
    PnIdentificationType_SetDescriptor = 7003u32,
    IPnInterfaceType_SetNameOfStation = 7004u32,
    IPnEquipmentType_ShowLocation = 7005u32,
    PnEquipmentContainerType_PnEquipments_ShowLocation = 7006u32,
    PnInterfaceContainerType_Interfaces_SetNameOfStation = 7007u32,
}
impl<'a> From<&'a MethodId> for opcua::types::NodeId {
    fn from(r: &'a MethodId) -> Self {
        opcua::types::NodeId::new(0, *r as u32)
    }
}
impl From<MethodId> for opcua::types::NodeId {
    fn from(r: MethodId) -> Self {
        opcua::types::NodeId::new(0, r as u32)
    }
}
impl From<MethodId> for opcua::types::ExpandedNodeId {
    fn from(r: MethodId) -> Self {
        Self {
            node_id: opcua::types::NodeId::new(0, r as u32),
            namespace_uri: Default::default(),
            server_index: 0,
        }
    }
}
impl TryFrom<u32> for MethodId {
    type Error = ();
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        Ok(match value {
            7001u32 => Self::PnIdentificationType_SetTags,
            7002u32 => Self::PnIdentificationType_SetDate,
            7003u32 => Self::PnIdentificationType_SetDescriptor,
            7004u32 => Self::IPnInterfaceType_SetNameOfStation,
            7005u32 => Self::IPnEquipmentType_ShowLocation,
            7006u32 => Self::PnEquipmentContainerType_PnEquipments_ShowLocation,
            7007u32 => Self::PnInterfaceContainerType_Interfaces_SetNameOfStation,
            _ => return Err(()),
        })
    }
}
#[allow(non_camel_case_types, clippy::enum_variant_names)]
#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash)]
#[repr(u32)]
pub enum ObjectId {
    PnDeviceRoleOptionSet_Encoding_DefaultBinary = 5001u32,
    PnDeviceRoleOptionSet_Encoding_DefaultXml = 5002u32,
    PnDeviceRoleOptionSet_Encoding_DefaultJson = 5003u32,
    PnDeviceDiagnosisDataType_Encoding_DefaultBinary = 5004u32,
    PnDeviceDiagnosisDataType_Encoding_DefaultXml = 5005u32,
    PnDeviceDiagnosisDataType_Encoding_DefaultJson = 5006u32,
    PnIM5DataType_Encoding_DefaultBinary = 5007u32,
    PnIM5DataType_Encoding_DefaultXml = 5008u32,
    PnIM5DataType_Encoding_DefaultJson = 5009u32,
    PnAssetContainerType_Assets = 5010u32,
    IPnInterfaceType_EthernetInterface = 5011u32,
    PnInterfaceContainerType_Interfaces = 5012u32,
    PnPortContainerType_Ports = 5013u32,
    NetworkComponentType_FeatureName = 5014u32,
    NetworkComponentType_ComponentName = 5015u32,
    EthernetPortType_EthernetPort = 5016u32,
    EthernetInterfaceType_PortName = 5017u32,
    PnPortType_EthernetPort = 5018u32,
    PnPortType_Statistic = 5019u32,
    IPnInterfaceType_Ports = 5020u32,
    IPnInterfaceType_Statistic = 5021u32,
    Server_Namespaces_http___opcfoundation_org_UA_PROFINET_ = 5022u32,
    IPnRealSubmoduleType_IM = 5023u32,
    IPnRealSubmoduleType_Alarms = 5024u32,
    PnRealSubmoduleContainerType_Submodules = 5025u32,
    IPnExpectedSubmoduleType_State = 5026u32,
    PnExpectedSubmoduleContainerType_Submodules = 5027u32,
    IPnRealModuleType_Submodules = 5028u32,
    IPnRealModuleType_IM = 5029u32,
    IPnRealModuleType_Alarms = 5030u32,
    PnRealModuleContainerType_Modules = 5031u32,
    IPnExpectedModuleType_Submodules = 5032u32,
    PnExpectedModuleContainerType_Modules = 5033u32,
    PnApplicationRelationType_Modules = 5034u32,
    PnApplicationRelationContainerType_ARs = 5035u32,
    IPnDomainType_Nodes = 5036u32,
    IPnEquipmentType_Interfaces = 5037u32,
    IPnEquipmentType_Modules = 5038u32,
    IPnEquipmentType_Assets = 5039u32,
    IPnEquipmentType_IM = 5040u32,
    IPnEquipmentType_Alarms = 5041u32,
    PnEquipmentContainerType_PnEquipments = 5042u32,
    IPnControllerType_ARs = 5043u32,
    PnEquipmentContainerType_PnEquipments_Interfaces = 5044u32,
    PnInterfaceContainerType_Interfaces_Ports = 5045u32,
    PnEquipmentContainerType_PnEquipments_Modules = 5046u32,
    PnEquipmentContainerType_PnEquipments_Assets = 5047u32,
    PnEquipmentContainerType_PnEquipments_IM = 5048u32,
    PnEquipmentContainerType_PnEquipments_Alarms = 5049u32,
    PnRealModuleContainerType_Modules_Submodules = 5050u32,
    PnRealModuleContainerType_Modules_IM = 5051u32,
    PnRealModuleContainerType_Modules_Alarms = 5052u32,
    PnExpectedModuleContainerType_Modules_Submodules = 5053u32,
    PnRealSubmoduleContainerType_Submodules_IM = 5054u32,
    PnRealSubmoduleContainerType_Submodules_Alarms = 5055u32,
    PnExpectedSubmoduleContainerType_Submodules_State = 5056u32,
    PnInterfaceContainerType_Interfaces_EthernetInterface = 5057u32,
    PnInterfaceContainerType_Interfaces_Statistic = 5058u32,
}
impl<'a> From<&'a ObjectId> for opcua::types::NodeId {
    fn from(r: &'a ObjectId) -> Self {
        opcua::types::NodeId::new(0, *r as u32)
    }
}
impl From<ObjectId> for opcua::types::NodeId {
    fn from(r: ObjectId) -> Self {
        opcua::types::NodeId::new(0, r as u32)
    }
}
impl From<ObjectId> for opcua::types::ExpandedNodeId {
    fn from(r: ObjectId) -> Self {
        Self {
            node_id: opcua::types::NodeId::new(0, r as u32),
            namespace_uri: Default::default(),
            server_index: 0,
        }
    }
}
impl TryFrom<u32> for ObjectId {
    type Error = ();
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        Ok(match value {
            5001u32 => Self::PnDeviceRoleOptionSet_Encoding_DefaultBinary,
            5002u32 => Self::PnDeviceRoleOptionSet_Encoding_DefaultXml,
            5003u32 => Self::PnDeviceRoleOptionSet_Encoding_DefaultJson,
            5004u32 => Self::PnDeviceDiagnosisDataType_Encoding_DefaultBinary,
            5005u32 => Self::PnDeviceDiagnosisDataType_Encoding_DefaultXml,
            5006u32 => Self::PnDeviceDiagnosisDataType_Encoding_DefaultJson,
            5007u32 => Self::PnIM5DataType_Encoding_DefaultBinary,
            5008u32 => Self::PnIM5DataType_Encoding_DefaultXml,
            5009u32 => Self::PnIM5DataType_Encoding_DefaultJson,
            5010u32 => Self::PnAssetContainerType_Assets,
            5011u32 => Self::IPnInterfaceType_EthernetInterface,
            5012u32 => Self::PnInterfaceContainerType_Interfaces,
            5013u32 => Self::PnPortContainerType_Ports,
            5014u32 => Self::NetworkComponentType_FeatureName,
            5015u32 => Self::NetworkComponentType_ComponentName,
            5016u32 => Self::EthernetPortType_EthernetPort,
            5017u32 => Self::EthernetInterfaceType_PortName,
            5018u32 => Self::PnPortType_EthernetPort,
            5019u32 => Self::PnPortType_Statistic,
            5020u32 => Self::IPnInterfaceType_Ports,
            5021u32 => Self::IPnInterfaceType_Statistic,
            5022u32 => Self::Server_Namespaces_http___opcfoundation_org_UA_PROFINET_,
            5023u32 => Self::IPnRealSubmoduleType_IM,
            5024u32 => Self::IPnRealSubmoduleType_Alarms,
            5025u32 => Self::PnRealSubmoduleContainerType_Submodules,
            5026u32 => Self::IPnExpectedSubmoduleType_State,
            5027u32 => Self::PnExpectedSubmoduleContainerType_Submodules,
            5028u32 => Self::IPnRealModuleType_Submodules,
            5029u32 => Self::IPnRealModuleType_IM,
            5030u32 => Self::IPnRealModuleType_Alarms,
            5031u32 => Self::PnRealModuleContainerType_Modules,
            5032u32 => Self::IPnExpectedModuleType_Submodules,
            5033u32 => Self::PnExpectedModuleContainerType_Modules,
            5034u32 => Self::PnApplicationRelationType_Modules,
            5035u32 => Self::PnApplicationRelationContainerType_ARs,
            5036u32 => Self::IPnDomainType_Nodes,
            5037u32 => Self::IPnEquipmentType_Interfaces,
            5038u32 => Self::IPnEquipmentType_Modules,
            5039u32 => Self::IPnEquipmentType_Assets,
            5040u32 => Self::IPnEquipmentType_IM,
            5041u32 => Self::IPnEquipmentType_Alarms,
            5042u32 => Self::PnEquipmentContainerType_PnEquipments,
            5043u32 => Self::IPnControllerType_ARs,
            5044u32 => Self::PnEquipmentContainerType_PnEquipments_Interfaces,
            5045u32 => Self::PnInterfaceContainerType_Interfaces_Ports,
            5046u32 => Self::PnEquipmentContainerType_PnEquipments_Modules,
            5047u32 => Self::PnEquipmentContainerType_PnEquipments_Assets,
            5048u32 => Self::PnEquipmentContainerType_PnEquipments_IM,
            5049u32 => Self::PnEquipmentContainerType_PnEquipments_Alarms,
            5050u32 => Self::PnRealModuleContainerType_Modules_Submodules,
            5051u32 => Self::PnRealModuleContainerType_Modules_IM,
            5052u32 => Self::PnRealModuleContainerType_Modules_Alarms,
            5053u32 => Self::PnExpectedModuleContainerType_Modules_Submodules,
            5054u32 => Self::PnRealSubmoduleContainerType_Submodules_IM,
            5055u32 => Self::PnRealSubmoduleContainerType_Submodules_Alarms,
            5056u32 => Self::PnExpectedSubmoduleContainerType_Submodules_State,
            5057u32 => Self::PnInterfaceContainerType_Interfaces_EthernetInterface,
            5058u32 => Self::PnInterfaceContainerType_Interfaces_Statistic,
            _ => return Err(()),
        })
    }
}
#[allow(non_camel_case_types, clippy::enum_variant_names)]
#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash)]
#[repr(u32)]
pub enum ObjectTypeId {
    PnDiagnosisAlarmType = 1002u32,
    PnAssetChangedEventType = 1003u32,
    PnTopologyChangedEventType = 1004u32,
    PnIdentificationType = 1005u32,
    PnAssetType = 1006u32,
    PnAssetContainerType = 1007u32,
    IPnInterfaceType = 1008u32,
    PnInterfaceContainerType = 1009u32,
    PnPortType = 1010u32,
    PnPortContainerType = 1011u32,
    PnPortStatisticType = 1012u32,
    NetworkComponentType = 1013u32,
    EthernetInterfaceType = 1014u32,
    EthernetPortType = 1015u32,
    NetworkComponentFeatureType = 1016u32,
    IPv4FeatureType = 1017u32,
    PnSubmoduleStateType = 1018u32,
    IPnSubmoduleType = 1019u32,
    IPnRealSubmoduleType = 1020u32,
    PnRealSubmoduleContainerType = 1021u32,
    IPnExpectedSubmoduleType = 1022u32,
    PnExpectedSubmoduleContainerType = 1023u32,
    IPnModuleType = 1024u32,
    IPnRealModuleType = 1025u32,
    PnRealModuleContainerType = 1026u32,
    IPnExpectedModuleType = 1027u32,
    PnExpectedModuleContainerType = 1028u32,
    PnApplicationRelationType = 1029u32,
    PnApplicationRelationContainerType = 1030u32,
    IPnDomainType = 1031u32,
    IPnEquipmentType = 1032u32,
    PnEquipmentContainerType = 1033u32,
    IPnDeviceType = 1034u32,
    IPnControllerType = 1035u32,
}
impl<'a> From<&'a ObjectTypeId> for opcua::types::NodeId {
    fn from(r: &'a ObjectTypeId) -> Self {
        opcua::types::NodeId::new(0, *r as u32)
    }
}
impl From<ObjectTypeId> for opcua::types::NodeId {
    fn from(r: ObjectTypeId) -> Self {
        opcua::types::NodeId::new(0, r as u32)
    }
}
impl From<ObjectTypeId> for opcua::types::ExpandedNodeId {
    fn from(r: ObjectTypeId) -> Self {
        Self {
            node_id: opcua::types::NodeId::new(0, r as u32),
            namespace_uri: Default::default(),
            server_index: 0,
        }
    }
}
impl TryFrom<u32> for ObjectTypeId {
    type Error = ();
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        Ok(match value {
            1002u32 => Self::PnDiagnosisAlarmType,
            1003u32 => Self::PnAssetChangedEventType,
            1004u32 => Self::PnTopologyChangedEventType,
            1005u32 => Self::PnIdentificationType,
            1006u32 => Self::PnAssetType,
            1007u32 => Self::PnAssetContainerType,
            1008u32 => Self::IPnInterfaceType,
            1009u32 => Self::PnInterfaceContainerType,
            1010u32 => Self::PnPortType,
            1011u32 => Self::PnPortContainerType,
            1012u32 => Self::PnPortStatisticType,
            1013u32 => Self::NetworkComponentType,
            1014u32 => Self::EthernetInterfaceType,
            1015u32 => Self::EthernetPortType,
            1016u32 => Self::NetworkComponentFeatureType,
            1017u32 => Self::IPv4FeatureType,
            1018u32 => Self::PnSubmoduleStateType,
            1019u32 => Self::IPnSubmoduleType,
            1020u32 => Self::IPnRealSubmoduleType,
            1021u32 => Self::PnRealSubmoduleContainerType,
            1022u32 => Self::IPnExpectedSubmoduleType,
            1023u32 => Self::PnExpectedSubmoduleContainerType,
            1024u32 => Self::IPnModuleType,
            1025u32 => Self::IPnRealModuleType,
            1026u32 => Self::PnRealModuleContainerType,
            1027u32 => Self::IPnExpectedModuleType,
            1028u32 => Self::PnExpectedModuleContainerType,
            1029u32 => Self::PnApplicationRelationType,
            1030u32 => Self::PnApplicationRelationContainerType,
            1031u32 => Self::IPnDomainType,
            1032u32 => Self::IPnEquipmentType,
            1033u32 => Self::PnEquipmentContainerType,
            1034u32 => Self::IPnDeviceType,
            1035u32 => Self::IPnControllerType,
            _ => return Err(()),
        })
    }
}
#[allow(non_camel_case_types, clippy::enum_variant_names)]
#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash)]
#[repr(u32)]
pub enum ReferenceTypeId {
    HasPnRealModule = 4002u32,
    HasPnRealSubmodule = 4003u32,
    HasPnExpectedModule = 4004u32,
    HasPnExpectedSubmodule = 4005u32,
    HasPnAsset = 4006u32,
    HasPnInterface = 4007u32,
    HasPnPort = 4008u32,
    IsPnRealModule = 4009u32,
    IsPnRealSubmodule = 4010u32,
    IsPnApplicationRelationDeviceInterface = 4011u32,
    IsPnApplicationRelationControllerInterface = 4012u32,
    IsPnInterface = 4013u32,
    IsPnPort = 4014u32,
    CommLinkTo = 4015u32,
    HasPnApplicationRelation = 4016u32,
}
impl<'a> From<&'a ReferenceTypeId> for opcua::types::NodeId {
    fn from(r: &'a ReferenceTypeId) -> Self {
        opcua::types::NodeId::new(0, *r as u32)
    }
}
impl From<ReferenceTypeId> for opcua::types::NodeId {
    fn from(r: ReferenceTypeId) -> Self {
        opcua::types::NodeId::new(0, r as u32)
    }
}
impl From<ReferenceTypeId> for opcua::types::ExpandedNodeId {
    fn from(r: ReferenceTypeId) -> Self {
        Self {
            node_id: opcua::types::NodeId::new(0, r as u32),
            namespace_uri: Default::default(),
            server_index: 0,
        }
    }
}
impl TryFrom<u32> for ReferenceTypeId {
    type Error = ();
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        Ok(match value {
            4002u32 => Self::HasPnRealModule,
            4003u32 => Self::HasPnRealSubmodule,
            4004u32 => Self::HasPnExpectedModule,
            4005u32 => Self::HasPnExpectedSubmodule,
            4006u32 => Self::HasPnAsset,
            4007u32 => Self::HasPnInterface,
            4008u32 => Self::HasPnPort,
            4009u32 => Self::IsPnRealModule,
            4010u32 => Self::IsPnRealSubmodule,
            4011u32 => Self::IsPnApplicationRelationDeviceInterface,
            4012u32 => Self::IsPnApplicationRelationControllerInterface,
            4013u32 => Self::IsPnInterface,
            4014u32 => Self::IsPnPort,
            4015u32 => Self::CommLinkTo,
            4016u32 => Self::HasPnApplicationRelation,
            _ => return Err(()),
        })
    }
}
#[allow(non_camel_case_types, clippy::enum_variant_names)]
#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash)]
#[repr(u32)]
pub enum VariableId {
    PnDeviceRoleOptionSet_OptionSetValues = 6001u32,
    BinarySchema_TypeDictionary_BinarySchema = 6002u32,
    BinarySchema_TypeDictionary_BinarySchema_NamespaceUri = 6003u32,
    XmlSchema_TypeDictionary_XmlSchema = 6004u32,
    XmlSchema_TypeDictionary_XmlSchema_NamespaceUri = 6005u32,
    BinarySchema_TypeDictionary_BinarySchema_PnDeviceRoleOptionSet = 6006u32,
    XmlSchema_TypeDictionary_XmlSchema_PnDeviceRoleOptionSet = 6007u32,
    PnDeviceStateEnumeration_EnumValues = 6008u32,
    PnARStateEnumeration_EnumValues = 6009u32,
    PnARTypeEnumeration_EnumValues = 6010u32,
    PnModuleStateEnumeration_EnumValues = 6011u32,
    PnSubmoduleAddInfoEnumeration_EnumValues = 6012u32,
    PnSubmoduleARInfoEnumeration_EnumValues = 6013u32,
    PnSubmoduleIdentInfoEnumeration_EnumValues = 6014u32,
    PnChannelTypeEnumeration_EnumValues = 6015u32,
    PnChannelAccumulativeEnumeration_EnumValues = 6016u32,
    PnChannelMaintenanceEnumeration_EnumValues = 6017u32,
    PnChannelSpecifierEnumeration_EnumValues = 6018u32,
    PnChannelDirectionEnumeration_EnumValues = 6019u32,
    PnAssetTypeEnumeration_EnumValues = 6020u32,
    PnAssetChangeEnumeration_EnumValues = 6021u32,
    PnLinkStateEnumeration_EnumValues = 6022u32,
    PnPortStateEnumeration_EnumValues = 6023u32,
    PnDiagnosisAlarmType_API = 6024u32,
    PnDiagnosisAlarmType_Slot = 6025u32,
    PnDiagnosisAlarmType_Subslot = 6026u32,
    PnDiagnosisAlarmType_ChannelNumber = 6027u32,
    PnDiagnosisAlarmType_Type = 6028u32,
    PnDiagnosisAlarmType_Accumulative = 6029u32,
    PnDiagnosisAlarmType_Maintenance = 6030u32,
    PnDiagnosisAlarmType_Specifier = 6031u32,
    PnDiagnosisAlarmType_Direction = 6032u32,
    PnDiagnosisAlarmType_UserStructureIdentifier = 6033u32,
    PnDiagnosisAlarmType_ChannelErrorType = 6034u32,
    PnDiagnosisAlarmType_ExtChannelErrorType = 6035u32,
    PnDiagnosisAlarmType_ExtChannelAddValue = 6036u32,
    PnDiagnosisAlarmType_QualifiedChannelQualifier = 6037u32,
    PnDiagnosisAlarmType_ManufacturerData = 6038u32,
    PnDiagnosisAlarmType_HelpText = 6039u32,
    PnAssetChangedEventType_AssetType = 6040u32,
    PnAssetChangedEventType_AssetChange = 6041u32,
    BinarySchema_TypeDictionary_BinarySchema_PnDeviceDiagnosisDataType = 6042u32,
    XmlSchema_TypeDictionary_XmlSchema_PnDeviceDiagnosisDataType = 6043u32,
    BinarySchema_TypeDictionary_BinarySchema_PnIM5DataType = 6044u32,
    XmlSchema_TypeDictionary_XmlSchema_PnIM5DataType = 6045u32,
    PnIdentificationType_VendorId = 6046u32,
    PnIdentificationType_OrderId = 6047u32,
    PnIdentificationType_SerialNumber = 6048u32,
    PnIdentificationType_SoftwareRevision = 6049u32,
    PnIdentificationType_HardwareRevision = 6050u32,
    PnIdentificationType_ProfileId = 6051u32,
    PnIdentificationType_ProfileSpecificType = 6052u32,
    PnIdentificationType_Version = 6053u32,
    PnIdentificationType_RevisionCounter = 6054u32,
    PnIdentificationType_IMSupported = 6055u32,
    PnIdentificationType_TagFunction = 6056u32,
    PnIdentificationType_TagLocation = 6057u32,
    PnIdentificationType_Date = 6058u32,
    PnIdentificationType_Descriptor = 6059u32,
    PnIdentificationType_Signature = 6060u32,
    PnIdentificationType_IM5 = 6061u32,
    PnIdentificationType_SetTags_InputArguments = 6062u32,
    PnIdentificationType_SetDate_InputArguments = 6063u32,
    PnIdentificationType_SetDescriptor_InputArguments = 6064u32,
    PnAssetType_UniqueIdentifier = 6065u32,
    PnAssetType_Location = 6066u32,
    PnAssetType_Annotation = 6067u32,
    PnAssetType_OrderId = 6068u32,
    PnAssetType_SoftwareRevision = 6069u32,
    PnAssetType_HardwareRevision = 6070u32,
    PnAssetType_SerialNumber = 6071u32,
    PnAssetType_TypeIdentification = 6072u32,
    PnAssetType_Organization = 6073u32,
    PnAssetType_VendorId = 6074u32,
    PnAssetType_DeviceId = 6075u32,
    PnAssetType_DeviceSubId = 6076u32,
    PnAssetContainerType_Assets_Annotation = 6077u32,
    PnAssetContainerType_Assets_DeviceId = 6078u32,
    PnAssetContainerType_Assets_DeviceSubId = 6079u32,
    PnAssetContainerType_Assets_Location = 6080u32,
    PnAssetContainerType_Assets_OrderId = 6081u32,
    PnAssetContainerType_Assets_Organization = 6082u32,
    PnAssetContainerType_Assets_SerialNumber = 6083u32,
    PnAssetContainerType_Assets_TypeIdentification = 6084u32,
    PnAssetContainerType_Assets_UniqueIdentifier = 6085u32,
    PnAssetContainerType_Assets_VendorId = 6086u32,
    IPnInterfaceType_NameOfStation = 6087u32,
    IPnInterfaceType_DeviceRole = 6088u32,
    IPnInterfaceType_DeviceVendor = 6089u32,
    IPnInterfaceType_VendorId = 6090u32,
    IPnInterfaceType_DeviceId = 6091u32,
    IPnInterfaceType_DeviceInstance = 6092u32,
    IPnInterfaceType_OEMVendorId = 6093u32,
    IPnInterfaceType_OEMDeviceId = 6094u32,
    IPnInterfaceType_SetNameOfStation_InputArguments = 6095u32,
    PnPortType_LinkState = 6096u32,
    PnPortType_PortState = 6097u32,
    PnRealModuleContainerType_Modules_Slot = 6098u32,
    PnPortType_MAUType = 6099u32,
    PnPortType_CableDelay = 6100u32,
    PnPortType_PowerBudget = 6101u32,
    PnPortType_IsWireless = 6102u32,
    PnPortStatisticType_InOctets = 6103u32,
    PnPortStatisticType_OutOctets = 6104u32,
    PnPortStatisticType_InDiscards = 6105u32,
    PnPortStatisticType_OutDiscards = 6106u32,
    PnPortStatisticType_InErrors = 6107u32,
    PnPortStatisticType_OutErrors = 6108u32,
    NetworkComponentType_Enabled = 6109u32,
    EthernetInterfaceType_MacAddress = 6110u32,
    IPv4FeatureType_IpAddress = 6111u32,
    IPv4FeatureType_SubnetMask = 6112u32,
    IPv4FeatureType_DefaultGateway = 6113u32,
    IPv4FeatureType_DhcpEnabled = 6114u32,
    IPnInterfaceType_EthernetInterface_MacAddress = 6115u32,
    Server_Namespaces_http___opcfoundation_org_UA_PROFINET__IsNamespaceSubset = 6116u32,
    Server_Namespaces_http___opcfoundation_org_UA_PROFINET__NamespacePublicationDate = 6117u32,
    Server_Namespaces_http___opcfoundation_org_UA_PROFINET__NamespaceUri = 6118u32,
    Server_Namespaces_http___opcfoundation_org_UA_PROFINET__NamespaceVersion = 6119u32,
    Server_Namespaces_http___opcfoundation_org_UA_PROFINET__StaticNodeIdTypes = 6120u32,
    Server_Namespaces_http___opcfoundation_org_UA_PROFINET__StaticNumericNodeIdRange = 6121u32,
    Server_Namespaces_http___opcfoundation_org_UA_PROFINET__StaticStringNodeIdPattern = 6122u32,
    PnSubmoduleStateType_AddInfo = 6123u32,
    PnSubmoduleStateType_QualifiedInfo = 6124u32,
    PnSubmoduleStateType_MaintenanceRequired = 6125u32,
    PnSubmoduleStateType_MaintenanceDemanded = 6126u32,
    PnSubmoduleStateType_DiagInfo = 6127u32,
    PnSubmoduleStateType_ARInfo = 6128u32,
    PnSubmoduleStateType_IdentInfo = 6129u32,
    IPnSubmoduleType_API = 6130u32,
    IPnSubmoduleType_Subslot = 6131u32,
    IPnSubmoduleType_IdentNumber = 6132u32,
    IPnSubmoduleType_GSDName = 6133u32,
    IPnSubmoduleType_GSDDescription = 6134u32,
    IPnRealSubmoduleType_IM_HardwareRevision = 6135u32,
    IPnRealSubmoduleType_IM_OrderId = 6136u32,
    IPnRealSubmoduleType_IM_ProfileId = 6137u32,
    IPnRealSubmoduleType_IM_ProfileSpecificType = 6138u32,
    IPnRealSubmoduleType_IM_SerialNumber = 6139u32,
    IPnRealSubmoduleType_IM_SoftwareRevision = 6140u32,
    IPnRealSubmoduleType_IM_VendorId = 6141u32,
    IPnRealSubmoduleType_IM_Version = 6142u32,
    IPnRealSubmoduleType_Diagnosis = 6143u32,
    IPnModuleType_Slot = 6144u32,
    IPnModuleType_IdentNumber = 6145u32,
    IPnModuleType_GSDName = 6146u32,
    IPnModuleType_GSDDescription = 6147u32,
    IPnRealModuleType_IM_HardwareRevision = 6148u32,
    IPnRealModuleType_IM_OrderId = 6149u32,
    IPnRealModuleType_IM_ProfileId = 6150u32,
    IPnRealModuleType_IM_ProfileSpecificType = 6151u32,
    IPnRealModuleType_IM_SerialNumber = 6152u32,
    IPnRealModuleType_IM_SoftwareRevision = 6153u32,
    IPnRealModuleType_IM_VendorId = 6154u32,
    IPnRealModuleType_IM_Version = 6155u32,
    IPnRealModuleType_Diagnosis = 6156u32,
    IPnExpectedModuleType_State = 6157u32,
    PnApplicationRelationType_State = 6158u32,
    PnApplicationRelationType_Id = 6159u32,
    PnApplicationRelationType_Type = 6160u32,
    PnApplicationRelationType_SendClockFactor = 6161u32,
    PnApplicationRelationType_ReductionRatio = 6162u32,
    PnApplicationRelationType_DataHoldFactor = 6163u32,
    PnApplicationRelationContainerType_ARs_Id = 6164u32,
    PnApplicationRelationContainerType_ARs_State = 6165u32,
    PnApplicationRelationContainerType_ARs_Type = 6166u32,
    IPnEquipmentType_IM_HardwareRevision = 6167u32,
    IPnEquipmentType_IM_OrderId = 6168u32,
    IPnEquipmentType_IM_ProfileId = 6169u32,
    IPnEquipmentType_IM_ProfileSpecificType = 6170u32,
    IPnEquipmentType_IM_SerialNumber = 6171u32,
    IPnEquipmentType_IM_SoftwareRevision = 6172u32,
    IPnEquipmentType_IM_VendorId = 6173u32,
    IPnEquipmentType_IM_Version = 6174u32,
    IPnEquipmentType_Vendor = 6175u32,
    IPnEquipmentType_Diagnosis = 6176u32,
    IPnDeviceType_GSDDescription = 6177u32,
    IPnDeviceType_State = 6178u32,
    EthernetPortType_PhysAddress = 6179u32,
    PnRealModuleContainerType_Modules_IdentNumber = 6180u32,
    PnExpectedModuleContainerType_Modules_Slot = 6181u32,
    PnExpectedModuleContainerType_Modules_IdentNumber = 6182u32,
    PnExpectedModuleContainerType_Modules_State = 6183u32,
    PnRealSubmoduleContainerType_Submodules_API = 6184u32,
    PnRealSubmoduleContainerType_Submodules_Subslot = 6185u32,
    PnRealSubmoduleContainerType_Submodules_IdentNumber = 6186u32,
    PnExpectedSubmoduleContainerType_Submodules_API = 6187u32,
    PnExpectedSubmoduleContainerType_Submodules_Subslot = 6188u32,
    PnExpectedSubmoduleContainerType_Submodules_IdentNumber = 6189u32,
    PnInterfaceContainerType_Interfaces_NameOfStation = 6190u32,
    PnInterfaceContainerType_Interfaces_DeviceRole = 6191u32,
    PnInterfaceContainerType_Interfaces_VendorId = 6192u32,
    PnInterfaceContainerType_Interfaces_DeviceId = 6193u32,
    IMTagSelectorEnumeration_EnumStrings = 6194u32,
    PnEquipmentContainerType_PnEquipments_IM_HardwareRevision = 6195u32,
    PnEquipmentContainerType_PnEquipments_IM_OrderId = 6196u32,
    PnEquipmentContainerType_PnEquipments_IM_ProfileId = 6197u32,
    PnEquipmentContainerType_PnEquipments_IM_ProfileSpecificType = 6198u32,
    PnEquipmentContainerType_PnEquipments_IM_SerialNumber = 6199u32,
    PnEquipmentContainerType_PnEquipments_IM_SoftwareRevision = 6200u32,
    PnEquipmentContainerType_PnEquipments_IM_VendorId = 6201u32,
    PnEquipmentContainerType_PnEquipments_IM_Version = 6202u32,
    PnEquipmentContainerType_PnEquipments_Vendor = 6203u32,
    PnEquipmentContainerType_PnEquipments_Diagnosis = 6204u32,
    PnRealModuleContainerType_Modules_GSDName = 6205u32,
    PnRealModuleContainerType_Modules_GSDDescription = 6206u32,
    PnRealModuleContainerType_Modules_IM_HardwareRevision = 6207u32,
    PnRealModuleContainerType_Modules_IM_OrderId = 6208u32,
    PnRealModuleContainerType_Modules_IM_ProfileId = 6209u32,
    PnRealModuleContainerType_Modules_IM_ProfileSpecificType = 6210u32,
    PnRealModuleContainerType_Modules_IM_SerialNumber = 6211u32,
    PnRealModuleContainerType_Modules_IM_SoftwareRevision = 6212u32,
    PnRealModuleContainerType_Modules_IM_VendorId = 6213u32,
    PnRealModuleContainerType_Modules_IM_Version = 6214u32,
    PnRealModuleContainerType_Modules_Diagnosis = 6215u32,
    PnExpectedModuleContainerType_Modules_GSDName = 6216u32,
    PnExpectedModuleContainerType_Modules_GSDDescription = 6217u32,
    PnRealSubmoduleContainerType_Submodules_GSDName = 6218u32,
    PnRealSubmoduleContainerType_Submodules_GSDDescription = 6219u32,
    PnRealSubmoduleContainerType_Submodules_IM_HardwareRevision = 6220u32,
    PnRealSubmoduleContainerType_Submodules_IM_OrderId = 6221u32,
    PnRealSubmoduleContainerType_Submodules_IM_ProfileId = 6222u32,
    PnRealSubmoduleContainerType_Submodules_IM_ProfileSpecificType = 6223u32,
    PnRealSubmoduleContainerType_Submodules_IM_SerialNumber = 6224u32,
    PnRealSubmoduleContainerType_Submodules_IM_SoftwareRevision = 6225u32,
    PnRealSubmoduleContainerType_Submodules_IM_VendorId = 6226u32,
    PnRealSubmoduleContainerType_Submodules_IM_Version = 6227u32,
    PnRealSubmoduleContainerType_Submodules_Diagnosis = 6228u32,
    PnExpectedSubmoduleContainerType_Submodules_GSDName = 6229u32,
    PnExpectedSubmoduleContainerType_Submodules_GSDDescription = 6230u32,
    PnInterfaceContainerType_Interfaces_DeviceVendor = 6231u32,
    PnInterfaceContainerType_Interfaces_DeviceInstance = 6232u32,
    PnInterfaceContainerType_Interfaces_OEMVendorId = 6233u32,
    PnInterfaceContainerType_Interfaces_OEMDeviceId = 6234u32,
    PnInterfaceContainerType_Interfaces_EthernetInterface_MacAddress = 6235u32,
    PnInterfaceContainerType_Interfaces_SetNameOfStation_InputArguments = 6236u32,
}
impl<'a> From<&'a VariableId> for opcua::types::NodeId {
    fn from(r: &'a VariableId) -> Self {
        opcua::types::NodeId::new(0, *r as u32)
    }
}
impl From<VariableId> for opcua::types::NodeId {
    fn from(r: VariableId) -> Self {
        opcua::types::NodeId::new(0, r as u32)
    }
}
impl From<VariableId> for opcua::types::ExpandedNodeId {
    fn from(r: VariableId) -> Self {
        Self {
            node_id: opcua::types::NodeId::new(0, r as u32),
            namespace_uri: Default::default(),
            server_index: 0,
        }
    }
}
impl TryFrom<u32> for VariableId {
    type Error = ();
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        Ok(
            match value {
                6001u32 => Self::PnDeviceRoleOptionSet_OptionSetValues,
                6002u32 => Self::BinarySchema_TypeDictionary_BinarySchema,
                6003u32 => Self::BinarySchema_TypeDictionary_BinarySchema_NamespaceUri,
                6004u32 => Self::XmlSchema_TypeDictionary_XmlSchema,
                6005u32 => Self::XmlSchema_TypeDictionary_XmlSchema_NamespaceUri,
                6006u32 => {
                    Self::BinarySchema_TypeDictionary_BinarySchema_PnDeviceRoleOptionSet
                }
                6007u32 => Self::XmlSchema_TypeDictionary_XmlSchema_PnDeviceRoleOptionSet,
                6008u32 => Self::PnDeviceStateEnumeration_EnumValues,
                6009u32 => Self::PnARStateEnumeration_EnumValues,
                6010u32 => Self::PnARTypeEnumeration_EnumValues,
                6011u32 => Self::PnModuleStateEnumeration_EnumValues,
                6012u32 => Self::PnSubmoduleAddInfoEnumeration_EnumValues,
                6013u32 => Self::PnSubmoduleARInfoEnumeration_EnumValues,
                6014u32 => Self::PnSubmoduleIdentInfoEnumeration_EnumValues,
                6015u32 => Self::PnChannelTypeEnumeration_EnumValues,
                6016u32 => Self::PnChannelAccumulativeEnumeration_EnumValues,
                6017u32 => Self::PnChannelMaintenanceEnumeration_EnumValues,
                6018u32 => Self::PnChannelSpecifierEnumeration_EnumValues,
                6019u32 => Self::PnChannelDirectionEnumeration_EnumValues,
                6020u32 => Self::PnAssetTypeEnumeration_EnumValues,
                6021u32 => Self::PnAssetChangeEnumeration_EnumValues,
                6022u32 => Self::PnLinkStateEnumeration_EnumValues,
                6023u32 => Self::PnPortStateEnumeration_EnumValues,
                6024u32 => Self::PnDiagnosisAlarmType_API,
                6025u32 => Self::PnDiagnosisAlarmType_Slot,
                6026u32 => Self::PnDiagnosisAlarmType_Subslot,
                6027u32 => Self::PnDiagnosisAlarmType_ChannelNumber,
                6028u32 => Self::PnDiagnosisAlarmType_Type,
                6029u32 => Self::PnDiagnosisAlarmType_Accumulative,
                6030u32 => Self::PnDiagnosisAlarmType_Maintenance,
                6031u32 => Self::PnDiagnosisAlarmType_Specifier,
                6032u32 => Self::PnDiagnosisAlarmType_Direction,
                6033u32 => Self::PnDiagnosisAlarmType_UserStructureIdentifier,
                6034u32 => Self::PnDiagnosisAlarmType_ChannelErrorType,
                6035u32 => Self::PnDiagnosisAlarmType_ExtChannelErrorType,
                6036u32 => Self::PnDiagnosisAlarmType_ExtChannelAddValue,
                6037u32 => Self::PnDiagnosisAlarmType_QualifiedChannelQualifier,
                6038u32 => Self::PnDiagnosisAlarmType_ManufacturerData,
                6039u32 => Self::PnDiagnosisAlarmType_HelpText,
                6040u32 => Self::PnAssetChangedEventType_AssetType,
                6041u32 => Self::PnAssetChangedEventType_AssetChange,
                6042u32 => {
                    Self::BinarySchema_TypeDictionary_BinarySchema_PnDeviceDiagnosisDataType
                }
                6043u32 => {
                    Self::XmlSchema_TypeDictionary_XmlSchema_PnDeviceDiagnosisDataType
                }
                6044u32 => Self::BinarySchema_TypeDictionary_BinarySchema_PnIM5DataType,
                6045u32 => Self::XmlSchema_TypeDictionary_XmlSchema_PnIM5DataType,
                6046u32 => Self::PnIdentificationType_VendorId,
                6047u32 => Self::PnIdentificationType_OrderId,
                6048u32 => Self::PnIdentificationType_SerialNumber,
                6049u32 => Self::PnIdentificationType_SoftwareRevision,
                6050u32 => Self::PnIdentificationType_HardwareRevision,
                6051u32 => Self::PnIdentificationType_ProfileId,
                6052u32 => Self::PnIdentificationType_ProfileSpecificType,
                6053u32 => Self::PnIdentificationType_Version,
                6054u32 => Self::PnIdentificationType_RevisionCounter,
                6055u32 => Self::PnIdentificationType_IMSupported,
                6056u32 => Self::PnIdentificationType_TagFunction,
                6057u32 => Self::PnIdentificationType_TagLocation,
                6058u32 => Self::PnIdentificationType_Date,
                6059u32 => Self::PnIdentificationType_Descriptor,
                6060u32 => Self::PnIdentificationType_Signature,
                6061u32 => Self::PnIdentificationType_IM5,
                6062u32 => Self::PnIdentificationType_SetTags_InputArguments,
                6063u32 => Self::PnIdentificationType_SetDate_InputArguments,
                6064u32 => Self::PnIdentificationType_SetDescriptor_InputArguments,
                6065u32 => Self::PnAssetType_UniqueIdentifier,
                6066u32 => Self::PnAssetType_Location,
                6067u32 => Self::PnAssetType_Annotation,
                6068u32 => Self::PnAssetType_OrderId,
                6069u32 => Self::PnAssetType_SoftwareRevision,
                6070u32 => Self::PnAssetType_HardwareRevision,
                6071u32 => Self::PnAssetType_SerialNumber,
                6072u32 => Self::PnAssetType_TypeIdentification,
                6073u32 => Self::PnAssetType_Organization,
                6074u32 => Self::PnAssetType_VendorId,
                6075u32 => Self::PnAssetType_DeviceId,
                6076u32 => Self::PnAssetType_DeviceSubId,
                6077u32 => Self::PnAssetContainerType_Assets_Annotation,
                6078u32 => Self::PnAssetContainerType_Assets_DeviceId,
                6079u32 => Self::PnAssetContainerType_Assets_DeviceSubId,
                6080u32 => Self::PnAssetContainerType_Assets_Location,
                6081u32 => Self::PnAssetContainerType_Assets_OrderId,
                6082u32 => Self::PnAssetContainerType_Assets_Organization,
                6083u32 => Self::PnAssetContainerType_Assets_SerialNumber,
                6084u32 => Self::PnAssetContainerType_Assets_TypeIdentification,
                6085u32 => Self::PnAssetContainerType_Assets_UniqueIdentifier,
                6086u32 => Self::PnAssetContainerType_Assets_VendorId,
                6087u32 => Self::IPnInterfaceType_NameOfStation,
                6088u32 => Self::IPnInterfaceType_DeviceRole,
                6089u32 => Self::IPnInterfaceType_DeviceVendor,
                6090u32 => Self::IPnInterfaceType_VendorId,
                6091u32 => Self::IPnInterfaceType_DeviceId,
                6092u32 => Self::IPnInterfaceType_DeviceInstance,
                6093u32 => Self::IPnInterfaceType_OEMVendorId,
                6094u32 => Self::IPnInterfaceType_OEMDeviceId,
                6095u32 => Self::IPnInterfaceType_SetNameOfStation_InputArguments,
                6096u32 => Self::PnPortType_LinkState,
                6097u32 => Self::PnPortType_PortState,
                6098u32 => Self::PnRealModuleContainerType_Modules_Slot,
                6099u32 => Self::PnPortType_MAUType,
                6100u32 => Self::PnPortType_CableDelay,
                6101u32 => Self::PnPortType_PowerBudget,
                6102u32 => Self::PnPortType_IsWireless,
                6103u32 => Self::PnPortStatisticType_InOctets,
                6104u32 => Self::PnPortStatisticType_OutOctets,
                6105u32 => Self::PnPortStatisticType_InDiscards,
                6106u32 => Self::PnPortStatisticType_OutDiscards,
                6107u32 => Self::PnPortStatisticType_InErrors,
                6108u32 => Self::PnPortStatisticType_OutErrors,
                6109u32 => Self::NetworkComponentType_Enabled,
                6110u32 => Self::EthernetInterfaceType_MacAddress,
                6111u32 => Self::IPv4FeatureType_IpAddress,
                6112u32 => Self::IPv4FeatureType_SubnetMask,
                6113u32 => Self::IPv4FeatureType_DefaultGateway,
                6114u32 => Self::IPv4FeatureType_DhcpEnabled,
                6115u32 => Self::IPnInterfaceType_EthernetInterface_MacAddress,
                6116u32 => {
                    Self::Server_Namespaces_http___opcfoundation_org_UA_PROFINET__IsNamespaceSubset
                }
                6117u32 => {
                    Self::Server_Namespaces_http___opcfoundation_org_UA_PROFINET__NamespacePublicationDate
                }
                6118u32 => {
                    Self::Server_Namespaces_http___opcfoundation_org_UA_PROFINET__NamespaceUri
                }
                6119u32 => {
                    Self::Server_Namespaces_http___opcfoundation_org_UA_PROFINET__NamespaceVersion
                }
                6120u32 => {
                    Self::Server_Namespaces_http___opcfoundation_org_UA_PROFINET__StaticNodeIdTypes
                }
                6121u32 => {
                    Self::Server_Namespaces_http___opcfoundation_org_UA_PROFINET__StaticNumericNodeIdRange
                }
                6122u32 => {
                    Self::Server_Namespaces_http___opcfoundation_org_UA_PROFINET__StaticStringNodeIdPattern
                }
                6123u32 => Self::PnSubmoduleStateType_AddInfo,
                6124u32 => Self::PnSubmoduleStateType_QualifiedInfo,
                6125u32 => Self::PnSubmoduleStateType_MaintenanceRequired,
                6126u32 => Self::PnSubmoduleStateType_MaintenanceDemanded,
                6127u32 => Self::PnSubmoduleStateType_DiagInfo,
                6128u32 => Self::PnSubmoduleStateType_ARInfo,
                6129u32 => Self::PnSubmoduleStateType_IdentInfo,
                6130u32 => Self::IPnSubmoduleType_API,
                6131u32 => Self::IPnSubmoduleType_Subslot,
                6132u32 => Self::IPnSubmoduleType_IdentNumber,
                6133u32 => Self::IPnSubmoduleType_GSDName,
                6134u32 => Self::IPnSubmoduleType_GSDDescription,
                6135u32 => Self::IPnRealSubmoduleType_IM_HardwareRevision,
                6136u32 => Self::IPnRealSubmoduleType_IM_OrderId,
                6137u32 => Self::IPnRealSubmoduleType_IM_ProfileId,
                6138u32 => Self::IPnRealSubmoduleType_IM_ProfileSpecificType,
                6139u32 => Self::IPnRealSubmoduleType_IM_SerialNumber,
                6140u32 => Self::IPnRealSubmoduleType_IM_SoftwareRevision,
                6141u32 => Self::IPnRealSubmoduleType_IM_VendorId,
                6142u32 => Self::IPnRealSubmoduleType_IM_Version,
                6143u32 => Self::IPnRealSubmoduleType_Diagnosis,
                6144u32 => Self::IPnModuleType_Slot,
                6145u32 => Self::IPnModuleType_IdentNumber,
                6146u32 => Self::IPnModuleType_GSDName,
                6147u32 => Self::IPnModuleType_GSDDescription,
                6148u32 => Self::IPnRealModuleType_IM_HardwareRevision,
                6149u32 => Self::IPnRealModuleType_IM_OrderId,
                6150u32 => Self::IPnRealModuleType_IM_ProfileId,
                6151u32 => Self::IPnRealModuleType_IM_ProfileSpecificType,
                6152u32 => Self::IPnRealModuleType_IM_SerialNumber,
                6153u32 => Self::IPnRealModuleType_IM_SoftwareRevision,
                6154u32 => Self::IPnRealModuleType_IM_VendorId,
                6155u32 => Self::IPnRealModuleType_IM_Version,
                6156u32 => Self::IPnRealModuleType_Diagnosis,
                6157u32 => Self::IPnExpectedModuleType_State,
                6158u32 => Self::PnApplicationRelationType_State,
                6159u32 => Self::PnApplicationRelationType_Id,
                6160u32 => Self::PnApplicationRelationType_Type,
                6161u32 => Self::PnApplicationRelationType_SendClockFactor,
                6162u32 => Self::PnApplicationRelationType_ReductionRatio,
                6163u32 => Self::PnApplicationRelationType_DataHoldFactor,
                6164u32 => Self::PnApplicationRelationContainerType_ARs_Id,
                6165u32 => Self::PnApplicationRelationContainerType_ARs_State,
                6166u32 => Self::PnApplicationRelationContainerType_ARs_Type,
                6167u32 => Self::IPnEquipmentType_IM_HardwareRevision,
                6168u32 => Self::IPnEquipmentType_IM_OrderId,
                6169u32 => Self::IPnEquipmentType_IM_ProfileId,
                6170u32 => Self::IPnEquipmentType_IM_ProfileSpecificType,
                6171u32 => Self::IPnEquipmentType_IM_SerialNumber,
                6172u32 => Self::IPnEquipmentType_IM_SoftwareRevision,
                6173u32 => Self::IPnEquipmentType_IM_VendorId,
                6174u32 => Self::IPnEquipmentType_IM_Version,
                6175u32 => Self::IPnEquipmentType_Vendor,
                6176u32 => Self::IPnEquipmentType_Diagnosis,
                6177u32 => Self::IPnDeviceType_GSDDescription,
                6178u32 => Self::IPnDeviceType_State,
                6179u32 => Self::EthernetPortType_PhysAddress,
                6180u32 => Self::PnRealModuleContainerType_Modules_IdentNumber,
                6181u32 => Self::PnExpectedModuleContainerType_Modules_Slot,
                6182u32 => Self::PnExpectedModuleContainerType_Modules_IdentNumber,
                6183u32 => Self::PnExpectedModuleContainerType_Modules_State,
                6184u32 => Self::PnRealSubmoduleContainerType_Submodules_API,
                6185u32 => Self::PnRealSubmoduleContainerType_Submodules_Subslot,
                6186u32 => Self::PnRealSubmoduleContainerType_Submodules_IdentNumber,
                6187u32 => Self::PnExpectedSubmoduleContainerType_Submodules_API,
                6188u32 => Self::PnExpectedSubmoduleContainerType_Submodules_Subslot,
                6189u32 => Self::PnExpectedSubmoduleContainerType_Submodules_IdentNumber,
                6190u32 => Self::PnInterfaceContainerType_Interfaces_NameOfStation,
                6191u32 => Self::PnInterfaceContainerType_Interfaces_DeviceRole,
                6192u32 => Self::PnInterfaceContainerType_Interfaces_VendorId,
                6193u32 => Self::PnInterfaceContainerType_Interfaces_DeviceId,
                6194u32 => Self::IMTagSelectorEnumeration_EnumStrings,
                6195u32 => {
                    Self::PnEquipmentContainerType_PnEquipments_IM_HardwareRevision
                }
                6196u32 => Self::PnEquipmentContainerType_PnEquipments_IM_OrderId,
                6197u32 => Self::PnEquipmentContainerType_PnEquipments_IM_ProfileId,
                6198u32 => {
                    Self::PnEquipmentContainerType_PnEquipments_IM_ProfileSpecificType
                }
                6199u32 => Self::PnEquipmentContainerType_PnEquipments_IM_SerialNumber,
                6200u32 => {
                    Self::PnEquipmentContainerType_PnEquipments_IM_SoftwareRevision
                }
                6201u32 => Self::PnEquipmentContainerType_PnEquipments_IM_VendorId,
                6202u32 => Self::PnEquipmentContainerType_PnEquipments_IM_Version,
                6203u32 => Self::PnEquipmentContainerType_PnEquipments_Vendor,
                6204u32 => Self::PnEquipmentContainerType_PnEquipments_Diagnosis,
                6205u32 => Self::PnRealModuleContainerType_Modules_GSDName,
                6206u32 => Self::PnRealModuleContainerType_Modules_GSDDescription,
                6207u32 => Self::PnRealModuleContainerType_Modules_IM_HardwareRevision,
                6208u32 => Self::PnRealModuleContainerType_Modules_IM_OrderId,
                6209u32 => Self::PnRealModuleContainerType_Modules_IM_ProfileId,
                6210u32 => Self::PnRealModuleContainerType_Modules_IM_ProfileSpecificType,
                6211u32 => Self::PnRealModuleContainerType_Modules_IM_SerialNumber,
                6212u32 => Self::PnRealModuleContainerType_Modules_IM_SoftwareRevision,
                6213u32 => Self::PnRealModuleContainerType_Modules_IM_VendorId,
                6214u32 => Self::PnRealModuleContainerType_Modules_IM_Version,
                6215u32 => Self::PnRealModuleContainerType_Modules_Diagnosis,
                6216u32 => Self::PnExpectedModuleContainerType_Modules_GSDName,
                6217u32 => Self::PnExpectedModuleContainerType_Modules_GSDDescription,
                6218u32 => Self::PnRealSubmoduleContainerType_Submodules_GSDName,
                6219u32 => Self::PnRealSubmoduleContainerType_Submodules_GSDDescription,
                6220u32 => {
                    Self::PnRealSubmoduleContainerType_Submodules_IM_HardwareRevision
                }
                6221u32 => Self::PnRealSubmoduleContainerType_Submodules_IM_OrderId,
                6222u32 => Self::PnRealSubmoduleContainerType_Submodules_IM_ProfileId,
                6223u32 => {
                    Self::PnRealSubmoduleContainerType_Submodules_IM_ProfileSpecificType
                }
                6224u32 => Self::PnRealSubmoduleContainerType_Submodules_IM_SerialNumber,
                6225u32 => {
                    Self::PnRealSubmoduleContainerType_Submodules_IM_SoftwareRevision
                }
                6226u32 => Self::PnRealSubmoduleContainerType_Submodules_IM_VendorId,
                6227u32 => Self::PnRealSubmoduleContainerType_Submodules_IM_Version,
                6228u32 => Self::PnRealSubmoduleContainerType_Submodules_Diagnosis,
                6229u32 => Self::PnExpectedSubmoduleContainerType_Submodules_GSDName,
                6230u32 => {
                    Self::PnExpectedSubmoduleContainerType_Submodules_GSDDescription
                }
                6231u32 => Self::PnInterfaceContainerType_Interfaces_DeviceVendor,
                6232u32 => Self::PnInterfaceContainerType_Interfaces_DeviceInstance,
                6233u32 => Self::PnInterfaceContainerType_Interfaces_OEMVendorId,
                6234u32 => Self::PnInterfaceContainerType_Interfaces_OEMDeviceId,
                6235u32 => {
                    Self::PnInterfaceContainerType_Interfaces_EthernetInterface_MacAddress
                }
                6236u32 => {
                    Self::PnInterfaceContainerType_Interfaces_SetNameOfStation_InputArguments
                }
                _ => return Err(()),
            },
        )
    }
}
