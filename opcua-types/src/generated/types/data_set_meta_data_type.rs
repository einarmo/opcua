// This file was autogenerated from schemas/1.0.4/Opc.Ua.Types.bsd by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua {
    pub use crate as types;
}
#[derive(Debug, Clone, PartialEq, opcua::types::BinaryEncodable, opcua::types::BinaryDecodable)]
#[cfg_attr(
    feature = "json",
    derive(opcua::types::JsonEncodable, opcua::types::JsonDecodable)
)]
#[cfg_attr(feature = "xml", derive(opcua::types::FromXml))]
#[derive(Default)]
pub struct DataSetMetaDataType {
    pub namespaces: Option<Vec<opcua::types::string::UAString>>,
    pub structure_data_types: Option<Vec<super::structure_description::StructureDescription>>,
    pub enum_data_types: Option<Vec<super::enum_description::EnumDescription>>,
    pub simple_data_types: Option<Vec<super::simple_type_description::SimpleTypeDescription>>,
    pub name: opcua::types::string::UAString,
    pub description: opcua::types::localized_text::LocalizedText,
    pub fields: Option<Vec<super::field_meta_data::FieldMetaData>>,
    pub data_set_class_id: opcua::types::guid::Guid,
    pub configuration_version: super::configuration_version_data_type::ConfigurationVersionDataType,
}
impl opcua::types::MessageInfo for DataSetMetaDataType {
    fn type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::DataSetMetaDataType_Encoding_DefaultBinary
    }
    fn json_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::DataSetMetaDataType_Encoding_DefaultJson
    }
    fn xml_type_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::DataSetMetaDataType_Encoding_DefaultXml
    }
}
