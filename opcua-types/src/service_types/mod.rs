// This file was autogenerated from schemas/1.0.4/Opc.Ua.Types.bsd by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua { pub use crate as types; }
pub mod enums;
pub use enums::*;
pub mod activate_session_request;
pub use activate_session_request::*;
pub mod activate_session_response;
pub use activate_session_response::*;
pub mod additional_parameters_type;
pub use additional_parameters_type::*;
pub mod add_nodes_item;
pub use add_nodes_item::*;
pub mod add_nodes_request;
pub use add_nodes_request::*;
pub mod add_nodes_response;
pub use add_nodes_response::*;
pub mod add_nodes_result;
pub use add_nodes_result::*;
pub mod add_references_item;
pub use add_references_item::*;
pub mod add_references_request;
pub use add_references_request::*;
pub mod add_references_response;
pub use add_references_response::*;
pub mod aggregate_configuration;
pub use aggregate_configuration::*;
pub mod aggregate_filter;
pub use aggregate_filter::*;
pub mod aggregate_filter_result;
pub use aggregate_filter_result::*;
pub mod alias_name_data_type;
pub use alias_name_data_type::*;
pub mod annotation;
pub use annotation::*;
pub mod anonymous_identity_token;
pub use anonymous_identity_token::*;
pub mod application_description;
pub use application_description::*;
pub mod argument;
pub use argument::*;
pub mod attribute_operand;
pub use attribute_operand::*;
pub mod axis_information;
pub use axis_information::*;
pub mod broker_connection_transport_data_type;
pub use broker_connection_transport_data_type::*;
pub mod broker_data_set_reader_transport_data_type;
pub use broker_data_set_reader_transport_data_type::*;
pub mod broker_data_set_writer_transport_data_type;
pub use broker_data_set_writer_transport_data_type::*;
pub mod broker_writer_group_transport_data_type;
pub use broker_writer_group_transport_data_type::*;
pub mod browse_description;
pub use browse_description::*;
pub mod browse_next_request;
pub use browse_next_request::*;
pub mod browse_next_response;
pub use browse_next_response::*;
pub mod browse_path;
pub use browse_path::*;
pub mod browse_path_result;
pub use browse_path_result::*;
pub mod browse_path_target;
pub use browse_path_target::*;
pub mod browse_request;
pub use browse_request::*;
pub mod browse_response;
pub use browse_response::*;
pub mod browse_result;
pub use browse_result::*;
pub mod build_info;
pub use build_info::*;
pub mod call_method_request;
pub use call_method_request::*;
pub mod call_method_result;
pub use call_method_result::*;
pub mod call_request;
pub use call_request::*;
pub mod call_response;
pub use call_response::*;
pub mod cancel_request;
pub use cancel_request::*;
pub mod cancel_response;
pub use cancel_response::*;
pub mod cartesian_coordinates;
pub use cartesian_coordinates::*;
pub mod channel_security_token;
pub use channel_security_token::*;
pub mod close_secure_channel_request;
pub use close_secure_channel_request::*;
pub mod close_secure_channel_response;
pub use close_secure_channel_response::*;
pub mod close_session_request;
pub use close_session_request::*;
pub mod close_session_response;
pub use close_session_response::*;
pub mod complex_number_type;
pub use complex_number_type::*;
pub mod configuration_version_data_type;
pub use configuration_version_data_type::*;
pub mod connection_transport_data_type;
pub use connection_transport_data_type::*;
pub mod content_filter;
pub use content_filter::*;
pub mod content_filter_element;
pub use content_filter_element::*;
pub mod content_filter_element_result;
pub use content_filter_element_result::*;
pub mod content_filter_result;
pub use content_filter_result::*;
pub mod create_monitored_items_request;
pub use create_monitored_items_request::*;
pub mod create_monitored_items_response;
pub use create_monitored_items_response::*;
pub mod create_session_request;
pub use create_session_request::*;
pub mod create_session_response;
pub use create_session_response::*;
pub mod create_subscription_request;
pub use create_subscription_request::*;
pub mod create_subscription_response;
pub use create_subscription_response::*;
pub mod currency_unit_type;
pub use currency_unit_type::*;
pub mod data_change_filter;
pub use data_change_filter::*;
pub mod data_change_notification;
pub use data_change_notification::*;
pub mod datagram_connection_transport_data_type;
pub use datagram_connection_transport_data_type::*;
pub mod datagram_writer_group_transport_data_type;
pub use datagram_writer_group_transport_data_type::*;
pub mod data_set_meta_data_type;
pub use data_set_meta_data_type::*;
pub mod data_set_reader_data_type;
pub use data_set_reader_data_type::*;
pub mod data_set_reader_message_data_type;
pub use data_set_reader_message_data_type::*;
pub mod data_set_reader_transport_data_type;
pub use data_set_reader_transport_data_type::*;
pub mod data_set_writer_data_type;
pub use data_set_writer_data_type::*;
pub mod data_set_writer_message_data_type;
pub use data_set_writer_message_data_type::*;
pub mod data_set_writer_transport_data_type;
pub use data_set_writer_transport_data_type::*;
pub mod data_type_attributes;
pub use data_type_attributes::*;
pub mod data_type_description;
pub use data_type_description::*;
pub mod data_type_schema_header;
pub use data_type_schema_header::*;
pub mod decimal_data_type;
pub use decimal_data_type::*;
pub mod delete_at_time_details;
pub use delete_at_time_details::*;
pub mod delete_event_details;
pub use delete_event_details::*;
pub mod delete_monitored_items_request;
pub use delete_monitored_items_request::*;
pub mod delete_monitored_items_response;
pub use delete_monitored_items_response::*;
pub mod delete_nodes_item;
pub use delete_nodes_item::*;
pub mod delete_nodes_request;
pub use delete_nodes_request::*;
pub mod delete_nodes_response;
pub use delete_nodes_response::*;
pub mod delete_raw_modified_details;
pub use delete_raw_modified_details::*;
pub mod delete_references_item;
pub use delete_references_item::*;
pub mod delete_references_request;
pub use delete_references_request::*;
pub mod delete_references_response;
pub use delete_references_response::*;
pub mod delete_subscriptions_request;
pub use delete_subscriptions_request::*;
pub mod delete_subscriptions_response;
pub use delete_subscriptions_response::*;
pub mod discovery_configuration;
pub use discovery_configuration::*;
pub mod double_complex_number_type;
pub use double_complex_number_type::*;
pub mod element_operand;
pub use element_operand::*;
pub mod endpoint_configuration;
pub use endpoint_configuration::*;
pub mod endpoint_description;
pub use endpoint_description::*;
pub mod endpoint_type;
pub use endpoint_type::*;
pub mod endpoint_url_list_data_type;
pub use endpoint_url_list_data_type::*;
pub mod enum_definition;
pub use enum_definition::*;
pub mod enum_description;
pub use enum_description::*;
pub mod enum_field;
pub use enum_field::*;
pub mod enum_value_type;
pub use enum_value_type::*;
pub mod ephemeral_key_type;
pub use ephemeral_key_type::*;
pub mod eu_information;
pub use eu_information::*;
pub mod event_field_list;
pub use event_field_list::*;
pub mod event_filter;
pub use event_filter::*;
pub mod event_filter_result;
pub use event_filter_result::*;
pub mod event_notification_list;
pub use event_notification_list::*;
pub mod field_meta_data;
pub use field_meta_data::*;
pub mod field_target_data_type;
pub use field_target_data_type::*;
pub mod filter_operand;
pub use filter_operand::*;
pub mod find_servers_on_network_request;
pub use find_servers_on_network_request::*;
pub mod find_servers_on_network_response;
pub use find_servers_on_network_response::*;
pub mod find_servers_request;
pub use find_servers_request::*;
pub mod find_servers_response;
pub use find_servers_response::*;
pub mod frame;
pub use frame::*;
pub mod generic_attributes;
pub use generic_attributes::*;
pub mod generic_attribute_value;
pub use generic_attribute_value::*;
pub mod get_endpoints_request;
pub use get_endpoints_request::*;
pub mod get_endpoints_response;
pub use get_endpoints_response::*;
pub mod history_data;
pub use history_data::*;
pub mod history_event;
pub use history_event::*;
pub mod history_event_field_list;
pub use history_event_field_list::*;
pub mod history_modified_data;
pub use history_modified_data::*;
pub mod history_read_details;
pub use history_read_details::*;
pub mod history_read_request;
pub use history_read_request::*;
pub mod history_read_response;
pub use history_read_response::*;
pub mod history_read_result;
pub use history_read_result::*;
pub mod history_read_value_id;
pub use history_read_value_id::*;
pub mod history_update_details;
pub use history_update_details::*;
pub mod history_update_request;
pub use history_update_request::*;
pub mod history_update_response;
pub use history_update_response::*;
pub mod history_update_result;
pub use history_update_result::*;
pub mod identity_mapping_rule_type;
pub use identity_mapping_rule_type::*;
pub mod issued_identity_token;
pub use issued_identity_token::*;
pub mod json_data_set_reader_message_data_type;
pub use json_data_set_reader_message_data_type::*;
pub mod json_data_set_writer_message_data_type;
pub use json_data_set_writer_message_data_type::*;
pub mod json_writer_group_message_data_type;
pub use json_writer_group_message_data_type::*;
pub mod key_value_pair;
pub use key_value_pair::*;
pub mod literal_operand;
pub use literal_operand::*;
pub mod mdns_discovery_configuration;
pub use mdns_discovery_configuration::*;
pub mod method_attributes;
pub use method_attributes::*;
pub mod model_change_structure_data_type;
pub use model_change_structure_data_type::*;
pub mod modification_info;
pub use modification_info::*;
pub mod modify_monitored_items_request;
pub use modify_monitored_items_request::*;
pub mod modify_monitored_items_response;
pub use modify_monitored_items_response::*;
pub mod modify_subscription_request;
pub use modify_subscription_request::*;
pub mod modify_subscription_response;
pub use modify_subscription_response::*;
pub mod monitored_item_create_request;
pub use monitored_item_create_request::*;
pub mod monitored_item_create_result;
pub use monitored_item_create_result::*;
pub mod monitored_item_modify_request;
pub use monitored_item_modify_request::*;
pub mod monitored_item_modify_result;
pub use monitored_item_modify_result::*;
pub mod monitored_item_notification;
pub use monitored_item_notification::*;
pub mod monitoring_filter;
pub use monitoring_filter::*;
pub mod monitoring_filter_result;
pub use monitoring_filter_result::*;
pub mod monitoring_parameters;
pub use monitoring_parameters::*;
pub mod network_address_data_type;
pub use network_address_data_type::*;
pub mod network_address_url_data_type;
pub use network_address_url_data_type::*;
pub mod network_group_data_type;
pub use network_group_data_type::*;
pub mod node_attributes;
pub use node_attributes::*;
pub mod node_reference;
pub use node_reference::*;
pub mod node_type_description;
pub use node_type_description::*;
pub mod notification_data;
pub use notification_data::*;
pub mod notification_message;
pub use notification_message::*;
pub mod object_attributes;
pub use object_attributes::*;
pub mod object_type_attributes;
pub use object_type_attributes::*;
pub mod open_secure_channel_request;
pub use open_secure_channel_request::*;
pub mod open_secure_channel_response;
pub use open_secure_channel_response::*;
pub mod option_set;
pub use option_set::*;
pub mod orientation;
pub use orientation::*;
pub mod parsing_result;
pub use parsing_result::*;
pub mod program_diagnostic_2_data_type;
pub use program_diagnostic_2_data_type::*;
pub mod program_diagnostic_data_type;
pub use program_diagnostic_data_type::*;
pub mod published_data_items_data_type;
pub use published_data_items_data_type::*;
pub mod published_data_set_data_type;
pub use published_data_set_data_type::*;
pub mod published_data_set_source_data_type;
pub use published_data_set_source_data_type::*;
pub mod published_events_data_type;
pub use published_events_data_type::*;
pub mod published_variable_data_type;
pub use published_variable_data_type::*;
pub mod publish_request;
pub use publish_request::*;
pub mod publish_response;
pub use publish_response::*;
pub mod pub_sub_configuration_data_type;
pub use pub_sub_configuration_data_type::*;
pub mod pub_sub_connection_data_type;
pub use pub_sub_connection_data_type::*;
pub mod pub_sub_group_data_type;
pub use pub_sub_group_data_type::*;
pub mod query_data_description;
pub use query_data_description::*;
pub mod query_data_set;
pub use query_data_set::*;
pub mod query_first_request;
pub use query_first_request::*;
pub mod query_first_response;
pub use query_first_response::*;
pub mod query_next_request;
pub use query_next_request::*;
pub mod query_next_response;
pub use query_next_response::*;
pub mod range;
pub use range::*;
pub mod rational_number;
pub use rational_number::*;
pub mod read_annotation_data_details;
pub use read_annotation_data_details::*;
pub mod read_at_time_details;
pub use read_at_time_details::*;
pub mod reader_group_data_type;
pub use reader_group_data_type::*;
pub mod reader_group_message_data_type;
pub use reader_group_message_data_type::*;
pub mod reader_group_transport_data_type;
pub use reader_group_transport_data_type::*;
pub mod read_event_details;
pub use read_event_details::*;
pub mod read_processed_details;
pub use read_processed_details::*;
pub mod read_raw_modified_details;
pub use read_raw_modified_details::*;
pub mod read_request;
pub use read_request::*;
pub mod read_response;
pub use read_response::*;
pub mod read_value_id;
pub use read_value_id::*;
pub mod redundant_server_data_type;
pub use redundant_server_data_type::*;
pub mod reference_description;
pub use reference_description::*;
pub mod reference_type_attributes;
pub use reference_type_attributes::*;
pub mod registered_server;
pub use registered_server::*;
pub mod register_nodes_request;
pub use register_nodes_request::*;
pub mod register_nodes_response;
pub use register_nodes_response::*;
pub mod register_server_2_request;
pub use register_server_2_request::*;
pub mod register_server_2_response;
pub use register_server_2_response::*;
pub mod register_server_request;
pub use register_server_request::*;
pub mod register_server_response;
pub use register_server_response::*;
pub mod relative_path;
pub use relative_path::*;
pub mod relative_path_element;
pub use relative_path_element::*;
pub mod republish_request;
pub use republish_request::*;
pub mod republish_response;
pub use republish_response::*;
pub mod role_permission_type;
pub use role_permission_type::*;
pub mod sampling_interval_diagnostics_data_type;
pub use sampling_interval_diagnostics_data_type::*;
pub mod semantic_change_structure_data_type;
pub use semantic_change_structure_data_type::*;
pub mod server_diagnostics_summary_data_type;
pub use server_diagnostics_summary_data_type::*;
pub mod server_on_network;
pub use server_on_network::*;
pub mod server_status_data_type;
pub use server_status_data_type::*;
pub mod service_counter_data_type;
pub use service_counter_data_type::*;
pub mod service_fault;
pub use service_fault::*;
pub mod session_diagnostics_data_type;
pub use session_diagnostics_data_type::*;
pub mod sessionless_invoke_request_type;
pub use sessionless_invoke_request_type::*;
pub mod sessionless_invoke_response_type;
pub use sessionless_invoke_response_type::*;
pub mod session_security_diagnostics_data_type;
pub use session_security_diagnostics_data_type::*;
pub mod set_monitoring_mode_request;
pub use set_monitoring_mode_request::*;
pub mod set_monitoring_mode_response;
pub use set_monitoring_mode_response::*;
pub mod set_publishing_mode_request;
pub use set_publishing_mode_request::*;
pub mod set_publishing_mode_response;
pub use set_publishing_mode_response::*;
pub mod set_triggering_request;
pub use set_triggering_request::*;
pub mod set_triggering_response;
pub use set_triggering_response::*;
pub mod signature_data;
pub use signature_data::*;
pub mod signed_software_certificate;
pub use signed_software_certificate::*;
pub mod simple_attribute_operand;
pub use simple_attribute_operand::*;
pub mod simple_type_description;
pub use simple_type_description::*;
pub mod status_change_notification;
pub use status_change_notification::*;
pub mod status_result;
pub use status_result::*;
pub mod structure_definition;
pub use structure_definition::*;
pub mod structure_description;
pub use structure_description::*;
pub mod structure_field;
pub use structure_field::*;
pub mod subscribed_data_set_data_type;
pub use subscribed_data_set_data_type::*;
pub mod subscribed_data_set_mirror_data_type;
pub use subscribed_data_set_mirror_data_type::*;
pub mod subscription_acknowledgement;
pub use subscription_acknowledgement::*;
pub mod subscription_diagnostics_data_type;
pub use subscription_diagnostics_data_type::*;
pub mod target_variables_data_type;
pub use target_variables_data_type::*;
pub mod three_d_cartesian_coordinates;
pub use three_d_cartesian_coordinates::*;
pub mod three_d_frame;
pub use three_d_frame::*;
pub mod three_d_orientation;
pub use three_d_orientation::*;
pub mod three_d_vector;
pub use three_d_vector::*;
pub mod time_zone_data_type;
pub use time_zone_data_type::*;
pub mod transfer_result;
pub use transfer_result::*;
pub mod transfer_subscriptions_request;
pub use transfer_subscriptions_request::*;
pub mod transfer_subscriptions_response;
pub use transfer_subscriptions_response::*;
pub mod translate_browse_paths_to_node_ids_request;
pub use translate_browse_paths_to_node_ids_request::*;
pub mod translate_browse_paths_to_node_ids_response;
pub use translate_browse_paths_to_node_ids_response::*;
pub mod trust_list_data_type;
pub use trust_list_data_type::*;
pub mod ua_binary_file_data_type;
pub use ua_binary_file_data_type::*;
pub mod uadp_data_set_reader_message_data_type;
pub use uadp_data_set_reader_message_data_type::*;
pub mod uadp_data_set_writer_message_data_type;
pub use uadp_data_set_writer_message_data_type::*;
pub mod uadp_writer_group_message_data_type;
pub use uadp_writer_group_message_data_type::*;
pub mod unregister_nodes_request;
pub use unregister_nodes_request::*;
pub mod unregister_nodes_response;
pub use unregister_nodes_response::*;
pub mod update_data_details;
pub use update_data_details::*;
pub mod update_event_details;
pub use update_event_details::*;
pub mod update_structure_data_details;
pub use update_structure_data_details::*;
pub mod user_identity_token;
pub use user_identity_token::*;
pub mod user_name_identity_token;
pub use user_name_identity_token::*;
pub mod user_token_policy;
pub use user_token_policy::*;
pub mod variable_attributes;
pub use variable_attributes::*;
pub mod variable_type_attributes;
pub use variable_type_attributes::*;
pub mod vector;
pub use vector::*;
pub mod view_attributes;
pub use view_attributes::*;
pub mod view_description;
pub use view_description::*;
pub mod write_request;
pub use write_request::*;
pub mod write_response;
pub use write_response::*;
pub mod writer_group_data_type;
pub use writer_group_data_type::*;
pub mod writer_group_message_data_type;
pub use writer_group_message_data_type::*;
pub mod writer_group_transport_data_type;
pub use writer_group_transport_data_type::*;
pub mod write_value;
pub use write_value::*;
pub mod x_509_identity_token;
pub use x_509_identity_token::*;
pub mod xv_type;
pub use xv_type::*;
#[cfg(feature = "xml")]
#[derive(Debug, Default, Copy, Clone)]
pub struct TypesXmlLoader;
#[cfg(feature = "xml")]
impl opcua::types::xml::XmlLoader for TypesXmlLoader {
    fn load_extension_object(
        &self,
        body: &opcua::types::xml::XmlElement,
        node_id: &opcua::types::NodeId,
        ctx: &opcua::types::xml::XmlContext<'_>,
    ) -> Option<Result<opcua::types::ExtensionObject, opcua::types::xml::FromXmlError>> {
        use opcua::types::xml::FromXml;
        if node_id.namespace != 0 {
            return None;
        }
        let object_id = match node_id
            .as_u32()
            .and_then(|v| crate::ObjectId::try_from(v).ok())
            .ok_or_else(|| format!("Invalid object ID: {node_id}"))
        {
            Ok(i) => i,
            Err(e) => return Some(Err(e.into())),
        };
        let r = match object_id {
            crate::ObjectId::ActivateSessionRequest_Encoding_DefaultXml => {
                ActivateSessionRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ActivateSessionResponse_Encoding_DefaultXml => {
                ActivateSessionResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AddNodesItem_Encoding_DefaultXml => {
                AddNodesItem::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AddNodesRequest_Encoding_DefaultXml => {
                AddNodesRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AddNodesResponse_Encoding_DefaultXml => {
                AddNodesResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AddNodesResult_Encoding_DefaultXml => {
                AddNodesResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AddReferencesItem_Encoding_DefaultXml => {
                AddReferencesItem::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AddReferencesRequest_Encoding_DefaultXml => {
                AddReferencesRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AddReferencesResponse_Encoding_DefaultXml => {
                AddReferencesResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AdditionalParametersType_Encoding_DefaultXml => {
                AdditionalParametersType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AggregateConfiguration_Encoding_DefaultXml => {
                AggregateConfiguration::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AggregateFilter_Encoding_DefaultXml => {
                AggregateFilter::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AggregateFilterResult_Encoding_DefaultXml => {
                AggregateFilterResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AliasNameDataType_Encoding_DefaultXml => {
                AliasNameDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::Annotation_Encoding_DefaultXml => {
                Annotation::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AnonymousIdentityToken_Encoding_DefaultXml => {
                AnonymousIdentityToken::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ApplicationDescription_Encoding_DefaultXml => {
                ApplicationDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::Argument_Encoding_DefaultXml => {
                Argument::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AttributeOperand_Encoding_DefaultXml => {
                AttributeOperand::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::AxisInformation_Encoding_DefaultXml => {
                AxisInformation::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrokerConnectionTransportDataType_Encoding_DefaultXml => {
                BrokerConnectionTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrokerDataSetReaderTransportDataType_Encoding_DefaultXml => {
                BrokerDataSetReaderTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrokerDataSetWriterTransportDataType_Encoding_DefaultXml => {
                BrokerDataSetWriterTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrokerWriterGroupTransportDataType_Encoding_DefaultXml => {
                BrokerWriterGroupTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrowseDescription_Encoding_DefaultXml => {
                BrowseDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrowseNextRequest_Encoding_DefaultXml => {
                BrowseNextRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrowseNextResponse_Encoding_DefaultXml => {
                BrowseNextResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrowsePath_Encoding_DefaultXml => {
                BrowsePath::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrowsePathResult_Encoding_DefaultXml => {
                BrowsePathResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrowsePathTarget_Encoding_DefaultXml => {
                BrowsePathTarget::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrowseRequest_Encoding_DefaultXml => {
                BrowseRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrowseResponse_Encoding_DefaultXml => {
                BrowseResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BrowseResult_Encoding_DefaultXml => {
                BrowseResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::BuildInfo_Encoding_DefaultXml => {
                BuildInfo::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CallMethodRequest_Encoding_DefaultXml => {
                CallMethodRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CallMethodResult_Encoding_DefaultXml => {
                CallMethodResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CallRequest_Encoding_DefaultXml => {
                CallRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CallResponse_Encoding_DefaultXml => {
                CallResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CancelRequest_Encoding_DefaultXml => {
                CancelRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CancelResponse_Encoding_DefaultXml => {
                CancelResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CartesianCoordinates_Encoding_DefaultXml => {
                CartesianCoordinates::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ChannelSecurityToken_Encoding_DefaultXml => {
                ChannelSecurityToken::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CloseSecureChannelRequest_Encoding_DefaultXml => {
                CloseSecureChannelRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CloseSecureChannelResponse_Encoding_DefaultXml => {
                CloseSecureChannelResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CloseSessionRequest_Encoding_DefaultXml => {
                CloseSessionRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CloseSessionResponse_Encoding_DefaultXml => {
                CloseSessionResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ComplexNumberType_Encoding_DefaultXml => {
                ComplexNumberType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ConfigurationVersionDataType_Encoding_DefaultXml => {
                ConfigurationVersionDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ConnectionTransportDataType_Encoding_DefaultXml => {
                ConnectionTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ContentFilter_Encoding_DefaultXml => {
                ContentFilter::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ContentFilterElement_Encoding_DefaultXml => {
                ContentFilterElement::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ContentFilterElementResult_Encoding_DefaultXml => {
                ContentFilterElementResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ContentFilterResult_Encoding_DefaultXml => {
                ContentFilterResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CreateMonitoredItemsRequest_Encoding_DefaultXml => {
                CreateMonitoredItemsRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CreateMonitoredItemsResponse_Encoding_DefaultXml => {
                CreateMonitoredItemsResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CreateSessionRequest_Encoding_DefaultXml => {
                CreateSessionRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CreateSessionResponse_Encoding_DefaultXml => {
                CreateSessionResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CreateSubscriptionRequest_Encoding_DefaultXml => {
                CreateSubscriptionRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CreateSubscriptionResponse_Encoding_DefaultXml => {
                CreateSubscriptionResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::CurrencyUnitType_Encoding_DefaultXml => {
                CurrencyUnitType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataChangeFilter_Encoding_DefaultXml => {
                DataChangeFilter::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataChangeNotification_Encoding_DefaultXml => {
                DataChangeNotification::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataSetMetaDataType_Encoding_DefaultXml => {
                DataSetMetaDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataSetReaderDataType_Encoding_DefaultXml => {
                DataSetReaderDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataSetReaderMessageDataType_Encoding_DefaultXml => {
                DataSetReaderMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataSetReaderTransportDataType_Encoding_DefaultXml => {
                DataSetReaderTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataSetWriterDataType_Encoding_DefaultXml => {
                DataSetWriterDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataSetWriterMessageDataType_Encoding_DefaultXml => {
                DataSetWriterMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataSetWriterTransportDataType_Encoding_DefaultXml => {
                DataSetWriterTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataTypeAttributes_Encoding_DefaultXml => {
                DataTypeAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataTypeDescription_Encoding_DefaultXml => {
                DataTypeDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DataTypeSchemaHeader_Encoding_DefaultXml => {
                DataTypeSchemaHeader::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DatagramConnectionTransportDataType_Encoding_DefaultXml => {
                DatagramConnectionTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DatagramWriterGroupTransportDataType_Encoding_DefaultXml => {
                DatagramWriterGroupTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DecimalDataType_Encoding_DefaultXml => {
                DecimalDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteAtTimeDetails_Encoding_DefaultXml => {
                DeleteAtTimeDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteEventDetails_Encoding_DefaultXml => {
                DeleteEventDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteMonitoredItemsRequest_Encoding_DefaultXml => {
                DeleteMonitoredItemsRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteMonitoredItemsResponse_Encoding_DefaultXml => {
                DeleteMonitoredItemsResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteNodesItem_Encoding_DefaultXml => {
                DeleteNodesItem::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteNodesRequest_Encoding_DefaultXml => {
                DeleteNodesRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteNodesResponse_Encoding_DefaultXml => {
                DeleteNodesResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteRawModifiedDetails_Encoding_DefaultXml => {
                DeleteRawModifiedDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteReferencesItem_Encoding_DefaultXml => {
                DeleteReferencesItem::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteReferencesRequest_Encoding_DefaultXml => {
                DeleteReferencesRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteReferencesResponse_Encoding_DefaultXml => {
                DeleteReferencesResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteSubscriptionsRequest_Encoding_DefaultXml => {
                DeleteSubscriptionsRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DeleteSubscriptionsResponse_Encoding_DefaultXml => {
                DeleteSubscriptionsResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DiscoveryConfiguration_Encoding_DefaultXml => {
                DiscoveryConfiguration::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::DoubleComplexNumberType_Encoding_DefaultXml => {
                DoubleComplexNumberType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EUInformation_Encoding_DefaultXml => {
                EUInformation::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ElementOperand_Encoding_DefaultXml => {
                ElementOperand::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EndpointConfiguration_Encoding_DefaultXml => {
                EndpointConfiguration::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EndpointDescription_Encoding_DefaultXml => {
                EndpointDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EndpointType_Encoding_DefaultXml => {
                EndpointType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EndpointUrlListDataType_Encoding_DefaultXml => {
                EndpointUrlListDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EnumDescription_Encoding_DefaultXml => {
                EnumDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EnumField_Encoding_DefaultXml => {
                EnumField::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EnumValueType_Encoding_DefaultXml => {
                EnumValueType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EphemeralKeyType_Encoding_DefaultXml => {
                EphemeralKeyType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EventFieldList_Encoding_DefaultXml => {
                EventFieldList::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EventFilter_Encoding_DefaultXml => {
                EventFilter::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EventFilterResult_Encoding_DefaultXml => {
                EventFilterResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::EventNotificationList_Encoding_DefaultXml => {
                EventNotificationList::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::FieldMetaData_Encoding_DefaultXml => {
                FieldMetaData::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::FieldTargetDataType_Encoding_DefaultXml => {
                FieldTargetDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::FilterOperand_Encoding_DefaultXml => {
                FilterOperand::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::FindServersOnNetworkRequest_Encoding_DefaultXml => {
                FindServersOnNetworkRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::FindServersOnNetworkResponse_Encoding_DefaultXml => {
                FindServersOnNetworkResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::FindServersRequest_Encoding_DefaultXml => {
                FindServersRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::FindServersResponse_Encoding_DefaultXml => {
                FindServersResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::Frame_Encoding_DefaultXml => {
                Frame::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::GenericAttributeValue_Encoding_DefaultXml => {
                GenericAttributeValue::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::GenericAttributes_Encoding_DefaultXml => {
                GenericAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::GetEndpointsRequest_Encoding_DefaultXml => {
                GetEndpointsRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::GetEndpointsResponse_Encoding_DefaultXml => {
                GetEndpointsResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryData_Encoding_DefaultXml => {
                HistoryData::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryEvent_Encoding_DefaultXml => {
                HistoryEvent::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryEventFieldList_Encoding_DefaultXml => {
                HistoryEventFieldList::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryModifiedData_Encoding_DefaultXml => {
                HistoryModifiedData::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryReadDetails_Encoding_DefaultXml => {
                HistoryReadDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryReadRequest_Encoding_DefaultXml => {
                HistoryReadRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryReadResponse_Encoding_DefaultXml => {
                HistoryReadResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryReadResult_Encoding_DefaultXml => {
                HistoryReadResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryReadValueId_Encoding_DefaultXml => {
                HistoryReadValueId::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryUpdateDetails_Encoding_DefaultXml => {
                HistoryUpdateDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryUpdateRequest_Encoding_DefaultXml => {
                HistoryUpdateRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryUpdateResponse_Encoding_DefaultXml => {
                HistoryUpdateResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::HistoryUpdateResult_Encoding_DefaultXml => {
                HistoryUpdateResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::IdentityMappingRuleType_Encoding_DefaultXml => {
                IdentityMappingRuleType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::IssuedIdentityToken_Encoding_DefaultXml => {
                IssuedIdentityToken::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::JsonDataSetReaderMessageDataType_Encoding_DefaultXml => {
                JsonDataSetReaderMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::JsonDataSetWriterMessageDataType_Encoding_DefaultXml => {
                JsonDataSetWriterMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::JsonWriterGroupMessageDataType_Encoding_DefaultXml => {
                JsonWriterGroupMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::KeyValuePair_Encoding_DefaultXml => {
                KeyValuePair::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::LiteralOperand_Encoding_DefaultXml => {
                LiteralOperand::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MdnsDiscoveryConfiguration_Encoding_DefaultXml => {
                MdnsDiscoveryConfiguration::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MethodAttributes_Encoding_DefaultXml => {
                MethodAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ModelChangeStructureDataType_Encoding_DefaultXml => {
                ModelChangeStructureDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ModificationInfo_Encoding_DefaultXml => {
                ModificationInfo::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ModifyMonitoredItemsRequest_Encoding_DefaultXml => {
                ModifyMonitoredItemsRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ModifyMonitoredItemsResponse_Encoding_DefaultXml => {
                ModifyMonitoredItemsResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ModifySubscriptionRequest_Encoding_DefaultXml => {
                ModifySubscriptionRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ModifySubscriptionResponse_Encoding_DefaultXml => {
                ModifySubscriptionResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MonitoredItemCreateRequest_Encoding_DefaultXml => {
                MonitoredItemCreateRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MonitoredItemCreateResult_Encoding_DefaultXml => {
                MonitoredItemCreateResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MonitoredItemModifyRequest_Encoding_DefaultXml => {
                MonitoredItemModifyRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MonitoredItemModifyResult_Encoding_DefaultXml => {
                MonitoredItemModifyResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MonitoredItemNotification_Encoding_DefaultXml => {
                MonitoredItemNotification::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MonitoringFilter_Encoding_DefaultXml => {
                MonitoringFilter::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MonitoringFilterResult_Encoding_DefaultXml => {
                MonitoringFilterResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::MonitoringParameters_Encoding_DefaultXml => {
                MonitoringParameters::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::NetworkAddressDataType_Encoding_DefaultXml => {
                NetworkAddressDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::NetworkAddressUrlDataType_Encoding_DefaultXml => {
                NetworkAddressUrlDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::NetworkGroupDataType_Encoding_DefaultXml => {
                NetworkGroupDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::NodeAttributes_Encoding_DefaultXml => {
                NodeAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::NodeReference_Encoding_DefaultXml => {
                NodeReference::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::NodeTypeDescription_Encoding_DefaultXml => {
                NodeTypeDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::NotificationData_Encoding_DefaultXml => {
                NotificationData::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::NotificationMessage_Encoding_DefaultXml => {
                NotificationMessage::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ObjectAttributes_Encoding_DefaultXml => {
                ObjectAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ObjectTypeAttributes_Encoding_DefaultXml => {
                ObjectTypeAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::OpenSecureChannelRequest_Encoding_DefaultXml => {
                OpenSecureChannelRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::OpenSecureChannelResponse_Encoding_DefaultXml => {
                OpenSecureChannelResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::OptionSet_Encoding_DefaultXml => {
                OptionSet::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::Orientation_Encoding_DefaultXml => {
                Orientation::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ParsingResult_Encoding_DefaultXml => {
                ParsingResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ProgramDiagnostic2DataType_Encoding_DefaultXml => {
                ProgramDiagnostic2DataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ProgramDiagnosticDataType_Encoding_DefaultXml => {
                ProgramDiagnosticDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PubSubConfigurationDataType_Encoding_DefaultXml => {
                PubSubConfigurationDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PubSubConnectionDataType_Encoding_DefaultXml => {
                PubSubConnectionDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PubSubGroupDataType_Encoding_DefaultXml => {
                PubSubGroupDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PublishRequest_Encoding_DefaultXml => {
                PublishRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PublishResponse_Encoding_DefaultXml => {
                PublishResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PublishedDataItemsDataType_Encoding_DefaultXml => {
                PublishedDataItemsDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PublishedDataSetDataType_Encoding_DefaultXml => {
                PublishedDataSetDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PublishedDataSetSourceDataType_Encoding_DefaultXml => {
                PublishedDataSetSourceDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PublishedEventsDataType_Encoding_DefaultXml => {
                PublishedEventsDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::PublishedVariableDataType_Encoding_DefaultXml => {
                PublishedVariableDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::QueryDataDescription_Encoding_DefaultXml => {
                QueryDataDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::QueryDataSet_Encoding_DefaultXml => {
                QueryDataSet::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::QueryFirstRequest_Encoding_DefaultXml => {
                QueryFirstRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::QueryFirstResponse_Encoding_DefaultXml => {
                QueryFirstResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::QueryNextRequest_Encoding_DefaultXml => {
                QueryNextRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::QueryNextResponse_Encoding_DefaultXml => {
                QueryNextResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::Range_Encoding_DefaultXml => {
                Range::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RationalNumber_Encoding_DefaultXml => {
                RationalNumber::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReadAnnotationDataDetails_Encoding_DefaultXml => {
                ReadAnnotationDataDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReadAtTimeDetails_Encoding_DefaultXml => {
                ReadAtTimeDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReadEventDetails_Encoding_DefaultXml => {
                ReadEventDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReadProcessedDetails_Encoding_DefaultXml => {
                ReadProcessedDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReadRawModifiedDetails_Encoding_DefaultXml => {
                ReadRawModifiedDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReadRequest_Encoding_DefaultXml => {
                ReadRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReadResponse_Encoding_DefaultXml => {
                ReadResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReadValueId_Encoding_DefaultXml => {
                ReadValueId::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReaderGroupDataType_Encoding_DefaultXml => {
                ReaderGroupDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReaderGroupMessageDataType_Encoding_DefaultXml => {
                ReaderGroupMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReaderGroupTransportDataType_Encoding_DefaultXml => {
                ReaderGroupTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RedundantServerDataType_Encoding_DefaultXml => {
                RedundantServerDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReferenceDescription_Encoding_DefaultXml => {
                ReferenceDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ReferenceTypeAttributes_Encoding_DefaultXml => {
                ReferenceTypeAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RegisterNodesRequest_Encoding_DefaultXml => {
                RegisterNodesRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RegisterNodesResponse_Encoding_DefaultXml => {
                RegisterNodesResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RegisterServer2Request_Encoding_DefaultXml => {
                RegisterServer2Request::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RegisterServer2Response_Encoding_DefaultXml => {
                RegisterServer2Response::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RegisterServerRequest_Encoding_DefaultXml => {
                RegisterServerRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RegisterServerResponse_Encoding_DefaultXml => {
                RegisterServerResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RegisteredServer_Encoding_DefaultXml => {
                RegisteredServer::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RelativePath_Encoding_DefaultXml => {
                RelativePath::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RelativePathElement_Encoding_DefaultXml => {
                RelativePathElement::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RepublishRequest_Encoding_DefaultXml => {
                RepublishRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RepublishResponse_Encoding_DefaultXml => {
                RepublishResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::RolePermissionType_Encoding_DefaultXml => {
                RolePermissionType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml => {
                SamplingIntervalDiagnosticsDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SemanticChangeStructureDataType_Encoding_DefaultXml => {
                SemanticChangeStructureDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ServerDiagnosticsSummaryDataType_Encoding_DefaultXml => {
                ServerDiagnosticsSummaryDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ServerOnNetwork_Encoding_DefaultXml => {
                ServerOnNetwork::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ServerStatusDataType_Encoding_DefaultXml => {
                ServerStatusDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ServiceCounterDataType_Encoding_DefaultXml => {
                ServiceCounterDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ServiceFault_Encoding_DefaultXml => {
                ServiceFault::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SessionDiagnosticsDataType_Encoding_DefaultXml => {
                SessionDiagnosticsDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SessionSecurityDiagnosticsDataType_Encoding_DefaultXml => {
                SessionSecurityDiagnosticsDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SessionlessInvokeRequestType_Encoding_DefaultXml => {
                SessionlessInvokeRequestType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SessionlessInvokeResponseType_Encoding_DefaultXml => {
                SessionlessInvokeResponseType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SetMonitoringModeRequest_Encoding_DefaultXml => {
                SetMonitoringModeRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SetMonitoringModeResponse_Encoding_DefaultXml => {
                SetMonitoringModeResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SetPublishingModeRequest_Encoding_DefaultXml => {
                SetPublishingModeRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SetPublishingModeResponse_Encoding_DefaultXml => {
                SetPublishingModeResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SetTriggeringRequest_Encoding_DefaultXml => {
                SetTriggeringRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SetTriggeringResponse_Encoding_DefaultXml => {
                SetTriggeringResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SignatureData_Encoding_DefaultXml => {
                SignatureData::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SignedSoftwareCertificate_Encoding_DefaultXml => {
                SignedSoftwareCertificate::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SimpleAttributeOperand_Encoding_DefaultXml => {
                SimpleAttributeOperand::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SimpleTypeDescription_Encoding_DefaultXml => {
                SimpleTypeDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::StatusChangeNotification_Encoding_DefaultXml => {
                StatusChangeNotification::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::StatusResult_Encoding_DefaultXml => {
                StatusResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::StructureDescription_Encoding_DefaultXml => {
                StructureDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::StructureField_Encoding_DefaultXml => {
                StructureField::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SubscribedDataSetDataType_Encoding_DefaultXml => {
                SubscribedDataSetDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SubscribedDataSetMirrorDataType_Encoding_DefaultXml => {
                SubscribedDataSetMirrorDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SubscriptionAcknowledgement_Encoding_DefaultXml => {
                SubscriptionAcknowledgement::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::SubscriptionDiagnosticsDataType_Encoding_DefaultXml => {
                SubscriptionDiagnosticsDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::TargetVariablesDataType_Encoding_DefaultXml => {
                TargetVariablesDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ThreeDCartesianCoordinates_Encoding_DefaultXml => {
                ThreeDCartesianCoordinates::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ThreeDFrame_Encoding_DefaultXml => {
                ThreeDFrame::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ThreeDOrientation_Encoding_DefaultXml => {
                ThreeDOrientation::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ThreeDVector_Encoding_DefaultXml => {
                ThreeDVector::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::TimeZoneDataType_Encoding_DefaultXml => {
                TimeZoneDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::TransferResult_Encoding_DefaultXml => {
                TransferResult::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::TransferSubscriptionsRequest_Encoding_DefaultXml => {
                TransferSubscriptionsRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::TransferSubscriptionsResponse_Encoding_DefaultXml => {
                TransferSubscriptionsResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml => {
                TranslateBrowsePathsToNodeIdsRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml => {
                TranslateBrowsePathsToNodeIdsResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::TrustListDataType_Encoding_DefaultXml => {
                TrustListDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UABinaryFileDataType_Encoding_DefaultXml => {
                UABinaryFileDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UadpDataSetReaderMessageDataType_Encoding_DefaultXml => {
                UadpDataSetReaderMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UadpDataSetWriterMessageDataType_Encoding_DefaultXml => {
                UadpDataSetWriterMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UadpWriterGroupMessageDataType_Encoding_DefaultXml => {
                UadpWriterGroupMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UnregisterNodesRequest_Encoding_DefaultXml => {
                UnregisterNodesRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UnregisterNodesResponse_Encoding_DefaultXml => {
                UnregisterNodesResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UpdateDataDetails_Encoding_DefaultXml => {
                UpdateDataDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UpdateEventDetails_Encoding_DefaultXml => {
                UpdateEventDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UpdateStructureDataDetails_Encoding_DefaultXml => {
                UpdateStructureDataDetails::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UserIdentityToken_Encoding_DefaultXml => {
                UserIdentityToken::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UserNameIdentityToken_Encoding_DefaultXml => {
                UserNameIdentityToken::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::UserTokenPolicy_Encoding_DefaultXml => {
                UserTokenPolicy::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::VariableAttributes_Encoding_DefaultXml => {
                VariableAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::VariableTypeAttributes_Encoding_DefaultXml => {
                VariableTypeAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::Vector_Encoding_DefaultXml => {
                Vector::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ViewAttributes_Encoding_DefaultXml => {
                ViewAttributes::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::ViewDescription_Encoding_DefaultXml => {
                ViewDescription::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::WriteRequest_Encoding_DefaultXml => {
                WriteRequest::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::WriteResponse_Encoding_DefaultXml => {
                WriteResponse::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::WriteValue_Encoding_DefaultXml => {
                WriteValue::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::WriterGroupDataType_Encoding_DefaultXml => {
                WriterGroupDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::WriterGroupMessageDataType_Encoding_DefaultXml => {
                WriterGroupMessageDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::WriterGroupTransportDataType_Encoding_DefaultXml => {
                WriterGroupTransportDataType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::X509IdentityToken_Encoding_DefaultXml => {
                X509IdentityToken::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            crate::ObjectId::XVType_Encoding_DefaultXml => {
                XVType::from_xml(body, ctx)
                    .map(|v| opcua::types::ExtensionObject::from_message_full(
                        &v,
                        ctx.ns_map(),
                    ))
            }
            _ => return None,
        };
        match r {
            Ok(r) => {
                Some(
                    r
                        .map_err(|_| {
                            opcua::types::xml::FromXmlError::from(
                                format!(
                                    "Invalid XML type, missing binary encoding ID: {:?}",
                                    object_id
                                ),
                            )
                        }),
                )
            }
            Err(e) => Some(Err(e)),
        }
    }
}
