// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
//
// This file was autogenerated from tools/schema/schemas/1.0.4/Opc.Ua.Types.bsd by opcua-codegen
//
// DO NOT EDIT THIS FILE
#[derive(Debug, Clone, PartialEq)]
#[derive(Default)]
pub struct ChannelSecurityToken {
    pub channel_id: u32,
    pub token_id: u32,
    pub created_at: crate::date_time::DateTime,
    pub revised_lifetime: u32,
}
impl crate::MessageInfo for ChannelSecurityToken {
    fn object_id(&self) -> crate::ObjectId {
        crate::ObjectId::ChannelSecurityToken_Encoding_DefaultBinary
    }
}
impl crate::BinaryEncoder for ChannelSecurityToken {
    fn byte_len(&self) -> usize {
        let mut size = 0usize;
        size += self.channel_id.byte_len();
        size += self.token_id.byte_len();
        size += self.created_at.byte_len();
        size += self.revised_lifetime.byte_len();
        size
    }
    #[allow(unused_variables)]
    fn encode<S: std::io::Write>(&self, stream: &mut S) -> crate::EncodingResult<usize> {
        let mut size = 0usize;
        size += self.channel_id.encode(stream)?;
        size += self.token_id.encode(stream)?;
        size += self.created_at.encode(stream)?;
        size += self.revised_lifetime.encode(stream)?;
        Ok(size)
    }
    #[allow(unused_variables)]
    fn decode<S: std::io::Read>(
        stream: &mut S,
        decoding_options: &crate::DecodingOptions,
    ) -> crate::EncodingResult<Self> {
        let channel_id = <u32 as crate::BinaryEncoder>::decode(
            stream,
            decoding_options,
        )?;
        let token_id = <u32 as crate::BinaryEncoder>::decode(stream, decoding_options)?;
        let created_at = <crate::date_time::DateTime as crate::BinaryEncoder>::decode(
            stream,
            decoding_options,
        )?;
        let revised_lifetime = <u32 as crate::BinaryEncoder>::decode(
            stream,
            decoding_options,
        )?;
        Ok(Self {
            channel_id,
            token_id,
            created_at,
            revised_lifetime,
        })
    }
}
