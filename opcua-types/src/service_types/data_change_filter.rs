// This file was autogenerated from tools/schema/schemas/1.0.4/Opc.Ua.Types.bsd by opcua-codegen
//
// DO NOT EDIT THIS FILE

// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2024 Adam Lock, Einar Omang
#[allow(unused)]
mod opcua { pub use crate as types; }#[derive(Debug, Clone, PartialEq)]
#[derive(serde::Serialize, serde::Deserialize)]
#[serde(rename_all = "PascalCase")]
pub struct DataChangeFilter {
    pub trigger: super::enums::DataChangeTrigger,
    pub deadband_type: u32,
    pub deadband_value: f64,
}
impl opcua::types::MessageInfo for DataChangeFilter {
    fn object_id(&self) -> opcua::types::ObjectId {
        opcua::types::ObjectId::DataChangeFilter_Encoding_DefaultBinary
    }
}
impl opcua::types::BinaryEncoder for DataChangeFilter {
    fn byte_len(&self) -> usize {
        let mut size = 0usize;
        size += self.trigger.byte_len();
        size += self.deadband_type.byte_len();
        size += self.deadband_value.byte_len();
        size
    }
    #[allow(unused_variables)]
    fn encode<S: std::io::Write>(
        &self,
        stream: &mut S,
    ) -> opcua::types::EncodingResult<usize> {
        let mut size = 0usize;
        size += self.trigger.encode(stream)?;
        size += self.deadband_type.encode(stream)?;
        size += self.deadband_value.encode(stream)?;
        Ok(size)
    }
    #[allow(unused_variables)]
    fn decode<S: std::io::Read>(
        stream: &mut S,
        decoding_options: &opcua::types::DecodingOptions,
    ) -> opcua::types::EncodingResult<Self> {
        let trigger = <super::enums::DataChangeTrigger as opcua::types::BinaryEncoder>::decode(
            stream,
            decoding_options,
        )?;
        let deadband_type = <u32 as opcua::types::BinaryEncoder>::decode(
            stream,
            decoding_options,
        )?;
        let deadband_value = <f64 as opcua::types::BinaryEncoder>::decode(
            stream,
            decoding_options,
        )?;
        Ok(Self {
            trigger,
            deadband_type,
            deadband_value,
        })
    }
}
